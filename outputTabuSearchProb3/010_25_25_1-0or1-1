itNSIMax: 25, itMosseTSMax: 25.
##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 84590.0, rotte: {3: [(1, 6), (6, 9)], 8: [(1, 10), (10, 7), (7, 9)], 9: [(1, 5), (5, 8), (8, 4)], 4: [(1, 8)], 5: [(1, 11), (11, 2)], 6: [(1, 2)], 7: [(1, 3), (3, 4)], 2: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 81335.8, rotte: {3: [(1, 6), (6, 9)], 8: [(1, 7), (7, 9), (9, 10)], 9: [(1, 5), (5, 8), (8, 4)], 4: [(1, 8)], 5: [(1, 11), (11, 2)], 6: [(1, 2)], 7: [(1, 3), (3, 4)], 2: [(1, 4)]}, padri: [0], figli: [2, 10], mosse: [(8, 8, 9, 10, 9)]
2 -> costo: 78953.49999999999, rotte: {3: [(1, 6), (6, 9)], 8: [(1, 7), (7, 9), (9, 10)], 9: [(1, 5), (5, 8), (8, 4)], 4: [(1, 8)], 5: [(1, 2), (2, 11)], 6: [(1, 2)], 7: [(1, 3), (3, 4)], 2: [(1, 4)]}, padri: [1], figli: [3, 9, 9, 9, 11, 11, 11], mosse: [(5, 5, 11, 2)]
3 -> costo: 77703.9, rotte: {3: [(1, 6), (6, 9)], 8: [(1, 7), (7, 9), (9, 10)], 9: [(1, 4), (4, 5), (5, 8)], 4: [(1, 8)], 5: [(1, 2), (2, 11)], 6: [(1, 2)], 7: [(1, 3), (3, 4)], 2: [(1, 4)]}, padri: [2], figli: [4, 7, 8, 4, 4], mosse: [(9, 9, 1, 4, 3)]
4 -> costo: 77407.59999999999, rotte: {3: [(1, 6), (6, 9)], 8: [(1, 7), (7, 9), (9, 10)], 9: [(1, 4), (4, 5), (5, 8)], 4: [(1, 8)], 5: [(1, 2), (2, 11)], 6: [(1, 2)], 7: [(1, 4), (4, 3)], 2: [(1, 4)]}, padri: [3, 3, 3, 9, 11, 11], figli: [5, 6], mosse: [(7, 7, 3, 4), (7, 7, 1, 4, 2), (7, 7, 4, 3, 18), (9, 9, 1, 4, 3), (5, 5, 11, 2), (5, 5, 1, 2, 5)]
5 -> costo: 76541.4, rotte: {3: [(1, 6), (6, 9)], 8: [(1, 7), (7, 9), (9, 10)], 9: [(1, 5), (5, 8)], 4: [(1, 8)], 5: [(1, 4), (4, 2), (2, 11)], 6: [(1, 2)], 7: [(1, 4), (4, 3)], 2: [(1, 4)]}, padri: [4, 6, 7, 7, 7], figli: [], mosse: [(5, 9, 1, 4, 3), (5, 5, 4, 2, 5), (7, 7, 3, 4), (7, 7, 1, 4, 2), (7, 7, 4, 3, 18)]
6 -> costo: 77021.69999999998, rotte: {3: [(1, 6), (6, 9)], 8: [(1, 7), (7, 9), (9, 10)], 9: [(1, 5), (5, 8)], 4: [(1, 8)], 5: [(1, 2), (2, 4), (4, 11)], 6: [(1, 2)], 7: [(1, 4), (4, 3)], 2: [(1, 4)]}, padri: [4, 8, 8, 8], figli: [5], mosse: [(5, 9, 2, 4, 3), (7, 7, 3, 4), (7, 7, 1, 4, 2), (7, 7, 4, 3, 18)]
7 -> costo: 76837.7, rotte: {3: [(1, 6), (6, 9)], 8: [(1, 7), (7, 9), (9, 10)], 9: [(1, 5), (5, 8)], 4: [(1, 8)], 5: [(1, 4), (4, 2), (2, 11)], 6: [(1, 2)], 7: [(1, 3), (3, 4)], 2: [(1, 4)]}, padri: [3, 8], figli: [5, 5, 5], mosse: [(5, 9, 1, 4, 3), (5, 5, 4, 2, 5)]
8 -> costo: 77317.99999999999, rotte: {3: [(1, 6), (6, 9)], 8: [(1, 7), (7, 9), (9, 10)], 9: [(1, 5), (5, 8)], 4: [(1, 8)], 5: [(1, 2), (2, 4), (4, 11)], 6: [(1, 2)], 7: [(1, 3), (3, 4)], 2: [(1, 4)]}, padri: [3], figli: [6, 7, 6, 6], mosse: [(5, 9, 2, 4, 3)]
9 -> costo: 78657.19999999998, rotte: {3: [(1, 6), (6, 9)], 8: [(1, 7), (7, 9), (9, 10)], 9: [(1, 5), (5, 8), (8, 4)], 4: [(1, 8)], 5: [(1, 2), (2, 11)], 6: [(1, 2)], 7: [(1, 4), (4, 3)], 2: [(1, 4)]}, padri: [2, 2, 2, 10, 10, 10], figli: [4], mosse: [(7, 7, 3, 4), (7, 7, 1, 4, 2), (7, 7, 4, 3, 18), (5, 5, 1, 2, 5), (5, 5, 11, 2), (5, 5, 2, 11, 6)]
10 -> costo: 81039.5, rotte: {3: [(1, 6), (6, 9)], 8: [(1, 7), (7, 9), (9, 10)], 9: [(1, 5), (5, 8), (8, 4)], 4: [(1, 8)], 5: [(1, 11), (11, 2)], 6: [(1, 2)], 7: [(1, 4), (4, 3)], 2: [(1, 4)]}, padri: [1], figli: [9, 9, 9, 11, 11, 11], mosse: [(7, 7, 3, 4)]
11 -> costo: 79789.9, rotte: {3: [(1, 6), (6, 9)], 8: [(1, 7), (7, 9), (9, 10)], 9: [(1, 4), (4, 5), (5, 8)], 4: [(1, 8)], 5: [(1, 11), (11, 2)], 6: [(1, 2)], 7: [(1, 4), (4, 3)], 2: [(1, 4)]}, padri: [10], figli: [4, 4], mosse: [(9, 9, 1, 4, 3)]
bestSolutionIndice: 5
5 -> costo: 76541.4, rotte: {3: [(1, 6), (6, 9)], 8: [(1, 7), (7, 9), (9, 10)], 9: [(1, 5), (5, 8)], 4: [(1, 8)], 5: [(1, 4), (4, 2), (2, 11)], 6: [(1, 2)], 7: [(1, 4), (4, 3)], 2: [(1, 4)]}, padri: [4, 6, 7, 7, 7], figli: [], mosse: [(5, 9, 1, 4, 3), (5, 5, 4, 2, 5), (7, 7, 3, 4), (7, 7, 1, 4, 2), (7, 7, 4, 3, 18)]
trasportoPalletDiGamma: {3: [(6, 4), (9, 6)], 8: [(7, 1), (9, 8), (10, 9)], 9: [(5, 8), (8, 8)], 4: [(8, 10)], 5: [(4, 3), (2, 5), (11, 6)], 6: [(2, 15)], 7: [(4, 2), (3, 18)], 2: [(4, 10)]}
itMosseLS: 29, itMosseTS: 25
time elapsed: 433.03s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89610.4, rotte: {3: [(1, 6), (6, 5)], 4: [(1, 9)], 6: [(1, 3)], 5: [(1, 7), (7, 2)], 9: [(1, 8), (8, 9)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 10), (10, 5), (5, 2)], 2: [(1, 11), (11, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85794.9, rotte: {3: [(1, 6), (6, 5)], 4: [(1, 9)], 6: [(1, 3)], 5: [(1, 7), (7, 2)], 9: [(1, 8), (8, 9)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 11), (11, 10), (10, 5), (5, 2)], 2: [(1, 2)]}, padri: [0], figli: [2], mosse: [(7, 2, 1, 11, 6)]
2 -> costo: 85000.2, rotte: {3: [(1, 6), (6, 5)], 4: [(1, 9)], 6: [(1, 3)], 5: [(1, 2), (2, 7)], 9: [(1, 8), (8, 9)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 11), (11, 10), (10, 5), (5, 2)], 2: [(1, 2)]}, padri: [1], figli: [3, 13, 13], mosse: [(5, 5, 7, 2)]
3 -> costo: 83037.8, rotte: {3: [(1, 6), (6, 5)], 4: [(1, 9)], 6: [(1, 3)], 5: [(1, 2), (2, 7)], 9: [(1, 8), (8, 9)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 2), (2, 11), (11, 10), (10, 5)], 2: [(1, 2)]}, padri: [2], figli: [4, 8, 9, 4, 4], mosse: [(7, 7, 1, 2, 2)]
4 -> costo: 82735.5, rotte: {3: [(1, 5), (5, 6)], 4: [(1, 9)], 6: [(1, 3)], 5: [(1, 2), (2, 7)], 9: [(1, 8), (8, 9)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 2), (2, 11), (11, 10), (10, 5)], 2: [(1, 2)]}, padri: [3, 3, 3, 13], figli: [5, 6, 10], mosse: [(3, 3, 6, 5), (3, 3, 1, 5, 6), (3, 3, 5, 6, 4), (7, 7, 1, 2, 2)]
5 -> costo: 82085.6, rotte: {3: [(1, 5), (5, 6)], 4: [(1, 9)], 6: [(1, 3)], 5: [(1, 2), (2, 7)], 9: [(1, 8), (8, 9)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 2), (2, 5), (5, 11), (11, 10)], 2: [(1, 2)]}, padri: [4, 6, 8, 8, 8], figli: [], mosse: [(7, 7, 2, 5, 2), (7, 7, 2, 5, 2), (3, 3, 6, 5), (3, 3, 1, 5, 6), (3, 3, 5, 6, 4)]
6 -> costo: 82372.7, rotte: {3: [(1, 5), (5, 6)], 4: [(1, 9)], 6: [(1, 3)], 5: [(1, 2), (2, 7)], 9: [(1, 8), (8, 9)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 5), (5, 2), (2, 11), (11, 10)], 2: [(1, 2)]}, padri: [4, 9, 9, 9], figli: [7, 5, 11], mosse: [(7, 7, 1, 5, 2), (3, 3, 6, 5), (3, 3, 1, 5, 6), (3, 3, 5, 6, 4)]
7 -> costo: 81599.6, rotte: {3: [(1, 5), (5, 6)], 4: [(1, 9)], 6: [(1, 3)], 5: [(1, 2), (2, 7)], 9: [(1, 8), (8, 9)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 2), (2, 11), (11, 10)], 2: [(1, 2), (2, 5)]}, padri: [6, 10, 10, 10], figli: [], mosse: [(2, 7, 2, 5, 2), (3, 3, 6, 5), (3, 3, 1, 5, 6), (3, 3, 5, 6, 4)]
8 -> costo: 82387.90000000001, rotte: {3: [(1, 6), (6, 5)], 4: [(1, 9)], 6: [(1, 3)], 5: [(1, 2), (2, 7)], 9: [(1, 8), (8, 9)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 2), (2, 5), (5, 11), (11, 10)], 2: [(1, 2)]}, padri: [3, 9], figli: [5, 5, 5], mosse: [(7, 7, 2, 5, 2), (7, 7, 2, 5, 2)]
9 -> costo: 82675.0, rotte: {3: [(1, 6), (6, 5)], 4: [(1, 9)], 6: [(1, 3)], 5: [(1, 2), (2, 7)], 9: [(1, 8), (8, 9)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 5), (5, 2), (2, 11), (11, 10)], 2: [(1, 2)]}, padri: [3], figli: [6, 10, 6, 6, 8], mosse: [(7, 7, 1, 5, 2)]
10 -> costo: 81901.90000000001, rotte: {3: [(1, 6), (6, 5)], 4: [(1, 9)], 6: [(1, 3)], 5: [(1, 2), (2, 7)], 9: [(1, 8), (8, 9)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 2), (2, 11), (11, 10)], 2: [(1, 2), (2, 5)]}, padri: [9], figli: [7, 7, 7, 11, 11, 11], mosse: [(2, 7, 2, 5, 2)]
11 -> costo: 81599.6, rotte: {3: [(1, 5)], 4: [(1, 9)], 6: [(1, 3)], 5: [(1, 2), (2, 7)], 9: [(1, 8), (8, 9)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 2), (2, 11), (11, 10)], 2: [(1, 2), (2, 5), (5, 6)]}, padri: [6, 10, 10, 10], figli: [12], mosse: [(2, 3, 5, 6, 4)]
12 -> costo: 81525.20000000001, rotte: {3: [(1, 5)], 4: [(1, 9)], 6: [(1, 3)], 5: [(1, 2), (2, 7)], 9: [(1, 8), (8, 9)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 2), (2, 11), (11, 10)], 2: [(1, 2), (2, 6)]}, padri: [11], figli: [], mosse: [(3, 2, 1, 5, 2)]
13 -> costo: 84697.9, rotte: {3: [(1, 5), (5, 6)], 4: [(1, 9)], 6: [(1, 3)], 5: [(1, 2), (2, 7)], 9: [(1, 8), (8, 9)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 11), (11, 10), (10, 5), (5, 2)], 2: [(1, 2)]}, padri: [2, 2], figli: [4], mosse: [(3, 3, 6, 5), (3, 3, 1, 5, 6)]
bestSolutionIndice: 12
12 -> costo: 81525.20000000001, rotte: {3: [(1, 5)], 4: [(1, 9)], 6: [(1, 3)], 5: [(1, 2), (2, 7)], 9: [(1, 8), (8, 9)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 2), (2, 11), (11, 10)], 2: [(1, 2), (2, 6)]}, padri: [11], figli: [], mosse: [(3, 2, 1, 5, 2)]
trasportoPalletDiGamma: {3: [(5, 8)], 4: [(9, 10)], 6: [(3, 15)], 5: [(2, 14), (7, 1)], 9: [(8, 18), (9, 2)], 8: [(4, 15), (3, 3), (9, 2)], 7: [(2, 2), (11, 6), (10, 9)], 2: [(2, 4), (6, 4)]}
itMosseLS: 28, itMosseTS: 25
time elapsed: 608.58s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 85075.49999999999, rotte: {5: [(1, 11), (11, 2)], 4: [(1, 8)], 9: [(1, 6), (6, 4)], 2: [(1, 5), (5, 8)], 8: [(1, 10), (10, 2)], 3: [(1, 7), (7, 8)], 7: [(1, 3)], 6: [(1, 9)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 82693.2, rotte: {5: [(1, 2), (2, 11)], 4: [(1, 8)], 9: [(1, 6), (6, 4)], 2: [(1, 5), (5, 8)], 8: [(1, 10), (10, 2)], 3: [(1, 7), (7, 8)], 7: [(1, 3)], 6: [(1, 9)]}, padri: [0], figli: [2, 6, 2, 2, 6, 6, 8, 8, 8], mosse: [(5, 5, 1, 2, 9)]
2 -> costo: 79601.6, rotte: {5: [(1, 2), (2, 11)], 4: [(1, 8)], 9: [(1, 6), (6, 4)], 2: [(1, 5), (5, 8)], 8: [(1, 2), (2, 10)], 3: [(1, 7), (7, 8)], 7: [(1, 3)], 6: [(1, 9)]}, padri: [1, 1, 1], figli: [3, 3, 3, 5, 5, 5, 7, 7, 7], mosse: [(8, 8, 10, 2), (8, 8, 1, 2, 11), (8, 8, 2, 10, 9)]
3 -> costo: 78639.5, rotte: {5: [(1, 2), (2, 11)], 4: [(1, 8)], 9: [(1, 4), (4, 6)], 2: [(1, 5), (5, 8)], 8: [(1, 2), (2, 10)], 3: [(1, 7), (7, 8)], 7: [(1, 3)], 6: [(1, 9)]}, padri: [2, 2, 2, 6, 6, 6], figli: [4], mosse: [(9, 9, 1, 4, 15), (9, 9, 6, 4), (9, 9, 4, 6, 4), (8, 8, 1, 2, 11), (8, 8, 10, 2), (8, 8, 2, 10, 9)]
4 -> costo: 78597.2, rotte: {5: [(1, 2), (2, 11)], 4: [(1, 8)], 9: [(1, 4), (4, 6)], 2: [(1, 5), (5, 8)], 8: [(1, 2), (2, 10)], 3: [(1, 8)], 7: [(1, 3)], 6: [(1, 7), (7, 9)]}, padri: [3, 5, 5, 5, 7, 7, 7], figli: [], mosse: [(6, 3, 1, 7, 1), (9, 9, 6, 4), (9, 9, 1, 4, 15), (9, 9, 4, 6, 4), (8, 8, 10, 2), (8, 8, 1, 2, 11), (8, 8, 2, 10, 9)]
5 -> costo: 79559.3, rotte: {5: [(1, 2), (2, 11)], 4: [(1, 8)], 9: [(1, 6), (6, 4)], 2: [(1, 5), (5, 8)], 8: [(1, 2), (2, 10)], 3: [(1, 8)], 7: [(1, 3)], 6: [(1, 7), (7, 9)]}, padri: [2, 8, 8, 8], figli: [4, 4, 4], mosse: [(6, 3, 1, 7, 1), (8, 8, 10, 2), (8, 8, 1, 2, 11), (8, 8, 2, 10, 9)]
6 -> costo: 81731.1, rotte: {5: [(1, 2), (2, 11)], 4: [(1, 8)], 9: [(1, 4), (4, 6)], 2: [(1, 5), (5, 8)], 8: [(1, 10), (10, 2)], 3: [(1, 7), (7, 8)], 7: [(1, 3)], 6: [(1, 9)]}, padri: [1, 1, 1], figli: [3, 3, 3, 7, 7, 7], mosse: [(9, 9, 6, 4), (9, 9, 1, 4, 15), (9, 9, 4, 6, 4)]
7 -> costo: 81688.8, rotte: {5: [(1, 2), (2, 11)], 4: [(1, 8)], 9: [(1, 4), (4, 6)], 2: [(1, 5), (5, 8)], 8: [(1, 10), (10, 2)], 3: [(1, 8)], 7: [(1, 3)], 6: [(1, 7), (7, 9)]}, padri: [6, 8, 8], figli: [4, 4, 4], mosse: [(6, 3, 1, 7, 1), (9, 9, 6, 4), (9, 9, 1, 4, 15)]
8 -> costo: 82650.9, rotte: {5: [(1, 2), (2, 11)], 4: [(1, 8)], 9: [(1, 6), (6, 4)], 2: [(1, 5), (5, 8)], 8: [(1, 10), (10, 2)], 3: [(1, 8)], 7: [(1, 3)], 6: [(1, 7), (7, 9)]}, padri: [1], figli: [5, 5, 7, 5, 7], mosse: [(6, 3, 1, 7, 1)]
bestSolutionIndice: 4
4 -> costo: 78597.2, rotte: {5: [(1, 2), (2, 11)], 4: [(1, 8)], 9: [(1, 4), (4, 6)], 2: [(1, 5), (5, 8)], 8: [(1, 2), (2, 10)], 3: [(1, 8)], 7: [(1, 3)], 6: [(1, 7), (7, 9)]}, padri: [3, 5, 5, 5, 7, 7, 7], figli: [], mosse: [(6, 3, 1, 7, 1), (9, 9, 6, 4), (9, 9, 1, 4, 15), (9, 9, 4, 6, 4), (8, 8, 10, 2), (8, 8, 1, 2, 11), (8, 8, 2, 10, 9)]
trasportoPalletDiGamma: {5: [(2, 9), (11, 6)], 4: [(8, 10)], 9: [(4, 15), (6, 4)], 2: [(5, 8), (8, 2)], 8: [(2, 11), (10, 9)], 3: [(8, 6)], 7: [(3, 18)], 6: [(7, 1), (9, 14)]}
itMosseLS: 28, itMosseTS: 25
time elapsed: 530.66s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89387.69999999998, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 11), (11, 3)], 6: [(1, 9), (9, 8)], 3: [(1, 10), (10, 4)], 9: [(1, 7), (7, 6), (6, 4), (4, 8)], 5: [(1, 5), (5, 3), (3, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 87285.7, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 11), (11, 3)], 6: [(1, 9), (9, 8)], 3: [(1, 10), (10, 4)], 9: [(1, 7), (7, 8), (8, 6), (6, 4)], 5: [(1, 5), (5, 3), (3, 8)]}, padri: [0], figli: [2], mosse: [(9, 9, 7, 8, 4)]
2 -> costo: 84305.20000000001, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 11), (11, 3)], 6: [(1, 9), (9, 8)], 3: [(1, 4), (4, 10)], 9: [(1, 7), (7, 8), (8, 6), (6, 4)], 5: [(1, 5), (5, 3), (3, 8)]}, padri: [1], figli: [3], mosse: [(3, 3, 10, 4)]
3 -> costo: 82330.30000000002, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 3), (3, 11)], 6: [(1, 9), (9, 8)], 3: [(1, 4), (4, 10)], 9: [(1, 7), (7, 8), (8, 6), (6, 4)], 5: [(1, 5), (5, 3), (3, 8)]}, padri: [2], figli: [4], mosse: [(8, 8, 1, 3, 14)]
4 -> costo: 80813.20000000001, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 3), (3, 11)], 6: [(1, 8), (8, 9)], 3: [(1, 4), (4, 10)], 9: [(1, 7), (7, 8), (8, 6), (6, 4)], 5: [(1, 5), (5, 3), (3, 8)]}, padri: [3], figli: [5], mosse: [(6, 6, 9, 8)]
5 -> costo: 79840.70000000001, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 3), (3, 11)], 6: [(1, 8), (8, 9)], 3: [(1, 4), (4, 10)], 9: [(1, 4), (4, 7), (7, 8), (8, 6)], 5: [(1, 5), (5, 3), (3, 8)]}, padri: [4], figli: [6], mosse: [(9, 9, 1, 4, 4)]
6 -> costo: 79179.5, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 3), (3, 11)], 6: [(1, 8), (8, 9)], 3: [(1, 4), (4, 10)], 9: [(1, 4), (4, 7), (7, 8), (8, 6)], 5: [(1, 5), (5, 8), (8, 3)]}, padri: [5], figli: [7, 7, 7, 12, 12, 12], mosse: [(5, 5, 3, 8)]
7 -> costo: 79017.79999999999, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 3), (3, 11)], 6: [(1, 8), (8, 9)], 3: [(1, 4), (4, 10)], 9: [(1, 4), (4, 7), (7, 6), (6, 8)], 5: [(1, 5), (5, 8), (8, 3)]}, padri: [6, 6, 6], figli: [8, 15], mosse: [(9, 9, 7, 6, 4), (9, 9, 8, 6), (9, 9, 6, 8, 4)]
8 -> costo: 78990.19999999998, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 3), (3, 11)], 6: [(1, 8), (8, 9)], 3: [(1, 4), (4, 10)], 9: [(1, 4), (4, 7), (7, 6), (6, 8)], 5: [(1, 3), (3, 5), (5, 8)]}, padri: [7, 12, 12, 12], figli: [9, 11, 9, 9], mosse: [(5, 5, 1, 3, 4), (9, 9, 8, 6), (9, 9, 7, 6, 4), (9, 9, 6, 8, 4)]
9 -> costo: 78737.2, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 3), (3, 11)], 6: [(1, 8), (8, 9)], 3: [(1, 4), (4, 10)], 9: [(1, 4), (4, 7), (7, 6), (6, 8)], 5: [(1, 3), (3, 8), (8, 5)]}, padri: [8, 8, 8, 13, 13, 13], figli: [10], mosse: [(5, 5, 5, 8), (5, 5, 3, 8, 3), (5, 5, 8, 5, 8), (9, 9, 8, 6), (9, 9, 7, 6, 4), (9, 9, 6, 8, 4)]
10 -> costo: 77958.0, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 3), (3, 11)], 6: [(1, 8), (8, 9)], 3: [(1, 4), (4, 10)], 9: [(1, 4), (4, 3), (3, 7), (7, 6), (6, 8)], 5: [(1, 8), (8, 5)]}, padri: [9, 14, 14, 14], figli: [], mosse: [(9, 5, 4, 3, 4), (9, 9, 8, 6), (9, 9, 7, 6, 4), (9, 9, 6, 8, 4)]
11 -> costo: 77277.79999999999, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 3), (3, 11)], 6: [(1, 8), (8, 9)], 3: [(1, 4), (4, 10)], 9: [(1, 4), (4, 3), (3, 7), (7, 6), (6, 8)], 5: [(1, 5), (5, 8)]}, padri: [8, 15, 15, 15], figli: [], mosse: [(9, 5, 4, 3, 4), (9, 9, 8, 6), (9, 9, 7, 6, 4), (9, 9, 6, 8, 4)]
12 -> costo: 79151.9, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 3), (3, 11)], 6: [(1, 8), (8, 9)], 3: [(1, 4), (4, 10)], 9: [(1, 4), (4, 7), (7, 8), (8, 6)], 5: [(1, 3), (3, 5), (5, 8)]}, padri: [6], figli: [13, 8, 15, 13, 13, 8, 8], mosse: [(5, 5, 1, 3, 4)]
13 -> costo: 78898.90000000001, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 3), (3, 11)], 6: [(1, 8), (8, 9)], 3: [(1, 4), (4, 10)], 9: [(1, 4), (4, 7), (7, 8), (8, 6)], 5: [(1, 3), (3, 8), (8, 5)]}, padri: [12, 12, 12], figli: [14, 9, 9, 9], mosse: [(5, 5, 5, 8), (5, 5, 3, 8, 3), (5, 5, 8, 5, 8)]
14 -> costo: 78119.70000000001, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 3), (3, 11)], 6: [(1, 8), (8, 9)], 3: [(1, 4), (4, 10)], 9: [(1, 4), (4, 3), (3, 7), (7, 8), (8, 6)], 5: [(1, 8), (8, 5)]}, padri: [13], figli: [10, 10, 10], mosse: [(9, 5, 4, 3, 4)]
15 -> costo: 77439.5, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 3), (3, 11)], 6: [(1, 8), (8, 9)], 3: [(1, 4), (4, 10)], 9: [(1, 4), (4, 3), (3, 7), (7, 8), (8, 6)], 5: [(1, 5), (5, 8)]}, padri: [12], figli: [11, 11, 11], mosse: [(9, 5, 4, 3, 4)]
bestSolutionIndice: 11
11 -> costo: 77277.79999999999, rotte: {7: [(1, 2)], 4: [(1, 8)], 2: [(1, 4)], 8: [(1, 3), (3, 11)], 6: [(1, 8), (8, 9)], 3: [(1, 4), (4, 10)], 9: [(1, 4), (4, 3), (3, 7), (7, 6), (6, 8)], 5: [(1, 5), (5, 8)]}, padri: [8, 15, 15, 15], figli: [], mosse: [(9, 5, 4, 3, 4), (9, 9, 8, 6), (9, 9, 7, 6, 4), (9, 9, 6, 8, 4)]
trasportoPalletDiGamma: {7: [(2, 20)], 4: [(8, 10)], 2: [(4, 10)], 8: [(3, 14), (11, 6)], 6: [(8, 1), (9, 14)], 3: [(4, 1), (10, 9)], 9: [(4, 4), (3, 4), (7, 1), (6, 4), (8, 4)], 5: [(5, 8), (8, 3)]}
itMosseLS: 33, itMosseTS: 25
time elapsed: 579.17s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 93015.2, rotte: {7: [(1, 3), (3, 6)], 3: [(1, 2)], 5: [(1, 9), (9, 4)], 6: [(1, 7), (7, 2), (2, 4)], 8: [(1, 5), (5, 8), (8, 4)], 9: [(1, 10), (10, 6), (6, 4)], 4: [(1, 8)], 2: [(1, 11), (11, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 88718.79999999999, rotte: {7: [(1, 3), (3, 6)], 3: [(1, 2)], 5: [(1, 9), (9, 4)], 6: [(1, 7), (7, 2), (2, 4)], 8: [(1, 5), (5, 8), (8, 4)], 9: [(1, 11), (11, 10), (10, 6), (6, 4)], 4: [(1, 8)], 2: [(1, 4)]}, padri: [0], figli: [2], mosse: [(9, 2, 1, 11, 6)]
2 -> costo: 85878.09999999999, rotte: {7: [(1, 3), (3, 6)], 3: [(1, 2)], 5: [(1, 4), (4, 9)], 6: [(1, 7), (7, 2), (2, 4)], 8: [(1, 5), (5, 8), (8, 4)], 9: [(1, 11), (11, 10), (10, 6), (6, 4)], 4: [(1, 8)], 2: [(1, 4)]}, padri: [1], figli: [3], mosse: [(5, 5, 9, 4)]
3 -> costo: 83675.1, rotte: {7: [(1, 3), (3, 6)], 3: [(1, 2)], 5: [(1, 4), (4, 9)], 6: [(1, 2), (2, 4)], 8: [(1, 5), (5, 8), (8, 4)], 9: [(1, 11), (11, 10), (10, 6), (6, 7), (7, 4)], 4: [(1, 8)], 2: [(1, 4)]}, padri: [2], figli: [4, 12], mosse: [(9, 6, 6, 7, 1)]
4 -> costo: 82036.8, rotte: {7: [(1, 3), (3, 6)], 3: [(1, 2)], 5: [(1, 4), (4, 9)], 6: [(1, 2), (2, 4)], 8: [(1, 5), (5, 8), (8, 4)], 9: [(1, 4), (4, 11), (11, 10), (10, 6), (6, 7)], 4: [(1, 8)], 2: [(1, 4)]}, padri: [3], figli: [5, 9, 11, 11, 5, 5], mosse: [(9, 9, 1, 4, 2)]
5 -> costo: 81752.2, rotte: {7: [(1, 3), (3, 6)], 3: [(1, 2)], 5: [(1, 4), (4, 9)], 6: [(1, 2), (2, 4)], 8: [(1, 5), (5, 8), (8, 4)], 9: [(1, 4), (4, 11), (11, 10), (10, 7), (7, 6)], 4: [(1, 8)], 2: [(1, 4)]}, padri: [4, 4, 4], figli: [6, 8, 8, 10], mosse: [(9, 9, 6, 7), (9, 9, 10, 7, 1), (9, 9, 7, 6, 2)]
6 -> costo: 80502.6, rotte: {7: [(1, 3), (3, 6)], 3: [(1, 2)], 5: [(1, 4), (4, 9)], 6: [(1, 2), (2, 4)], 8: [(1, 4), (4, 5), (5, 8)], 9: [(1, 4), (4, 11), (11, 10), (10, 7), (7, 6)], 4: [(1, 8)], 2: [(1, 4)]}, padri: [5, 9, 9, 9], figli: [7, 7], mosse: [(8, 8, 1, 4, 4), (9, 9, 6, 7), (9, 9, 10, 7, 1), (9, 9, 7, 6, 2)]
7 -> costo: 79398.2, rotte: {7: [(1, 3), (3, 6)], 3: [(1, 2)], 5: [(1, 9)], 6: [(1, 2), (2, 4)], 8: [(1, 4), (4, 5), (5, 8)], 9: [(1, 4), (4, 11), (11, 10), (10, 7), (7, 6)], 4: [(1, 8)], 2: [(1, 4)]}, padri: [6, 6, 8, 10, 10, 10], figli: [], mosse: [(6, 5, 1, 4, 1), (6, 5, 2, 4, 1), (8, 8, 1, 4, 4), (9, 9, 6, 7), (9, 9, 10, 7, 1), (9, 9, 7, 6, 2)]
8 -> costo: 80647.79999999999, rotte: {7: [(1, 3), (3, 6)], 3: [(1, 2)], 5: [(1, 9)], 6: [(1, 2), (2, 4)], 8: [(1, 5), (5, 8), (8, 4)], 9: [(1, 4), (4, 11), (11, 10), (10, 7), (7, 6)], 4: [(1, 8)], 2: [(1, 4)]}, padri: [5, 5, 11, 11, 11], figli: [7], mosse: [(6, 5, 1, 4, 1), (6, 5, 2, 4, 1), (9, 9, 6, 7), (9, 9, 10, 7, 1), (9, 9, 7, 6, 2)]
9 -> costo: 80787.20000000001, rotte: {7: [(1, 3), (3, 6)], 3: [(1, 2)], 5: [(1, 4), (4, 9)], 6: [(1, 2), (2, 4)], 8: [(1, 4), (4, 5), (5, 8)], 9: [(1, 4), (4, 11), (11, 10), (10, 6), (6, 7)], 4: [(1, 8)], 2: [(1, 4)]}, padri: [4, 12], figli: [6, 10, 10, 6, 6], mosse: [(8, 8, 1, 4, 4), (9, 9, 1, 4, 2)]
10 -> costo: 79682.8, rotte: {7: [(1, 3), (3, 6)], 3: [(1, 2)], 5: [(1, 9)], 6: [(1, 2), (2, 4)], 8: [(1, 4), (4, 5), (5, 8)], 9: [(1, 4), (4, 11), (11, 10), (10, 6), (6, 7)], 4: [(1, 8)], 2: [(1, 4)]}, padri: [9, 9, 11], figli: [7, 7, 7], mosse: [(6, 5, 1, 4, 1), (6, 5, 2, 4, 1), (8, 8, 1, 4, 4)]
11 -> costo: 80932.4, rotte: {7: [(1, 3), (3, 6)], 3: [(1, 2)], 5: [(1, 9)], 6: [(1, 2), (2, 4)], 8: [(1, 5), (5, 8), (8, 4)], 9: [(1, 4), (4, 11), (11, 10), (10, 6), (6, 7)], 4: [(1, 8)], 2: [(1, 4)]}, padri: [4, 4], figli: [8, 10, 8, 8], mosse: [(6, 5, 1, 4, 1), (6, 5, 2, 4, 1)]
12 -> costo: 82425.50000000001, rotte: {7: [(1, 3), (3, 6)], 3: [(1, 2)], 5: [(1, 4), (4, 9)], 6: [(1, 2), (2, 4)], 8: [(1, 4), (4, 5), (5, 8)], 9: [(1, 11), (11, 10), (10, 6), (6, 7), (7, 4)], 4: [(1, 8)], 2: [(1, 4)]}, padri: [3], figli: [9], mosse: [(8, 8, 1, 4, 4)]
bestSolutionIndice: 7
7 -> costo: 79398.2, rotte: {7: [(1, 3), (3, 6)], 3: [(1, 2)], 5: [(1, 9)], 6: [(1, 2), (2, 4)], 8: [(1, 4), (4, 5), (5, 8)], 9: [(1, 4), (4, 11), (11, 10), (10, 7), (7, 6)], 4: [(1, 8)], 2: [(1, 4)]}, padri: [6, 6, 8, 10, 10, 10], figli: [], mosse: [(6, 5, 1, 4, 1), (6, 5, 2, 4, 1), (8, 8, 1, 4, 4), (9, 9, 6, 7), (9, 9, 10, 7, 1), (9, 9, 7, 6, 2)]
trasportoPalletDiGamma: {7: [(3, 18), (6, 2)], 3: [(2, 10)], 5: [(9, 14)], 6: [(2, 10), (4, 5)], 8: [(4, 4), (5, 8), (8, 8)], 9: [(4, 2), (11, 6), (10, 9), (7, 1), (6, 2)], 4: [(8, 10)], 2: [(4, 4)]}
itMosseLS: 30, itMosseTS: 25
time elapsed: 725.67s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 91565.5, rotte: {2: [(1, 10), (10, 3)], 3: [(1, 7), (7, 6), (6, 3)], 7: [(1, 8), (8, 2)], 9: [(1, 11), (11, 4), (4, 3)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9), (9, 3)], 8: [(1, 5), (5, 2), (2, 3)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 87733.20000000001, rotte: {2: [(1, 10), (10, 3)], 3: [(1, 7), (7, 6), (6, 3)], 7: [(1, 8), (8, 2)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9), (9, 3)], 8: [(1, 5), (5, 2), (2, 3)]}, padri: [0], figli: [2], mosse: [(9, 9, 3, 11, 6)]
2 -> costo: 85049.00000000001, rotte: {2: [(1, 3), (3, 10)], 3: [(1, 7), (7, 6), (6, 3)], 7: [(1, 8), (8, 2)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9), (9, 3)], 8: [(1, 5), (5, 2), (2, 3)]}, padri: [1], figli: [3], mosse: [(2, 2, 10, 3)]
3 -> costo: 82567.00000000001, rotte: {2: [(1, 3), (3, 10)], 3: [(1, 7), (7, 6), (6, 3)], 7: [(1, 8), (8, 2)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 3), (3, 9)], 8: [(1, 5), (5, 2), (2, 3)]}, padri: [2], figli: [4], mosse: [(6, 6, 1, 3, 1)]
4 -> costo: 81135.8, rotte: {2: [(1, 3), (3, 10)], 3: [(1, 7), (7, 6), (6, 3)], 7: [(1, 2), (2, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 3), (3, 9)], 8: [(1, 5), (5, 2), (2, 3)]}, padri: [3], figli: [5, 9], mosse: [(7, 7, 8, 2)]
5 -> costo: 80132.80000000002, rotte: {2: [(1, 3), (3, 10)], 3: [(1, 3), (3, 7), (7, 6)], 7: [(1, 2), (2, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 3), (3, 9)], 8: [(1, 5), (5, 2), (2, 3)]}, padri: [4], figli: [6, 8, 6, 6, 10, 10, 10], mosse: [(3, 3, 1, 3, 5)]
6 -> costo: 79838.20000000001, rotte: {2: [(1, 3), (3, 10)], 3: [(1, 3), (3, 7), (7, 6)], 7: [(1, 2), (2, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 3), (3, 9)], 8: [(1, 5), (5, 3), (3, 2)]}, padri: [5, 5, 5, 9], figli: [7], mosse: [(8, 8, 2, 3), (8, 8, 5, 3, 2), (8, 8, 3, 2, 3), (3, 3, 1, 3, 5)]
7 -> costo: 79767.1, rotte: {2: [(1, 3), (3, 10)], 3: [(1, 3), (3, 7), (7, 6)], 7: [(1, 2), (2, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 3), (3, 9)], 8: [(1, 3), (3, 2), (2, 5)]}, padri: [6], figli: [], mosse: [(8, 8, 2, 5, 8)]
8 -> costo: 79134.40000000002, rotte: {2: [(1, 3), (3, 10)], 3: [(1, 3), (3, 7), (7, 6)], 7: [(1, 2), (2, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 3), (3, 9)], 8: [(1, 2), (2, 3), (3, 5)]}, padri: [5], figli: [], mosse: [(8, 8, 3, 5, 8)]
9 -> costo: 80841.2, rotte: {2: [(1, 3), (3, 10)], 3: [(1, 7), (7, 6), (6, 3)], 7: [(1, 2), (2, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 3), (3, 9)], 8: [(1, 5), (5, 3), (3, 2)]}, padri: [4], figli: [6, 10], mosse: [(8, 8, 2, 3)]
10 -> costo: 80428.1, rotte: {2: [(1, 3), (3, 10)], 3: [(1, 6), (6, 7), (7, 3)], 7: [(1, 2), (2, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 3), (3, 9)], 8: [(1, 5), (5, 3), (3, 2)]}, padri: [9], figli: [11], mosse: [(3, 3, 6, 7, 1)]
11 -> costo: 80085.40000000001, rotte: {2: [(1, 3), (3, 10)], 3: [(1, 7), (7, 3)], 7: [(1, 2), (2, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 3), (3, 9)], 8: [(1, 5), (5, 6), (6, 3), (3, 2)]}, padri: [10], figli: [12], mosse: [(8, 3, 5, 6, 4)]
12 -> costo: 79755.8, rotte: {2: [(1, 3), (3, 10)], 3: [(1, 3), (3, 7)], 7: [(1, 2), (2, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 3), (3, 9)], 8: [(1, 5), (5, 6), (6, 3), (3, 2)]}, padri: [11], figli: [13], mosse: [(3, 3, 7, 3)]
13 -> costo: 79688.0, rotte: {2: [(1, 10)], 3: [(1, 3), (3, 7)], 7: [(1, 2), (2, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 3), (3, 9)], 8: [(1, 5), (5, 6), (6, 3), (3, 2)]}, padri: [12], figli: [14, 14, 20, 20, 21], mosse: [(3, 2, 1, 3, 1)]
14 -> costo: 78772.4, rotte: {2: [(1, 10)], 3: [(1, 3), (3, 7)], 7: [(1, 2), (2, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9)], 8: [(1, 5), (5, 6), (6, 3), (3, 2)]}, padri: [13, 13, 20, 20], figli: [15, 18, 18], mosse: [(3, 6, 1, 3, 1), (3, 6, 7, 3, 1), (3, 2, 1, 3, 1), (3, 2, 7, 3, 1)]
15 -> costo: 77976.1, rotte: {2: [(1, 10)], 3: [(1, 2), (2, 3), (3, 7)], 7: [(1, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9)], 8: [(1, 5), (5, 6), (6, 3), (3, 2)]}, padri: [14], figli: [16], mosse: [(3, 7, 1, 2, 2)]
16 -> costo: 77622.70000000001, rotte: {2: [(1, 10)], 3: [(1, 3), (3, 7)], 7: [(1, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9)], 8: [(1, 5), (5, 6), (6, 2)]}, padri: [15], figli: [17], mosse: [(3, 8, 2, 3)]
17 -> costo: 76548.90000000001, rotte: {2: [(1, 10)], 3: [(1, 3), (3, 7)], 7: [(1, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9)], 8: [(1, 2), (2, 5), (5, 6)]}, padri: [16], figli: [], mosse: [(8, 8, 1, 2, 5)]
18 -> costo: 78419.0, rotte: {2: [(1, 10)], 3: [(1, 3), (3, 7)], 7: [(1, 2), (2, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9)], 8: [(1, 5), (5, 6), (6, 2)]}, padri: [14, 14], figli: [19], mosse: [(3, 8, 1, 3, 2), (3, 8, 7, 3, 2)]
19 -> costo: 77345.2, rotte: {2: [(1, 10)], 3: [(1, 3), (3, 7)], 7: [(1, 2), (2, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9)], 8: [(1, 2), (2, 5), (5, 6)]}, padri: [18], figli: [], mosse: [(8, 8, 1, 2, 3)]
20 -> costo: 78840.2, rotte: {2: [(1, 3), (3, 10)], 3: [(1, 3), (3, 7)], 7: [(1, 2), (2, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9)], 8: [(1, 5), (5, 6), (6, 3), (3, 2)]}, padri: [13], figli: [14, 14], mosse: [(2, 6, 1, 3, 1)]
21 -> costo: 78891.70000000001, rotte: {2: [(1, 10)], 3: [(1, 2), (2, 3), (3, 7)], 7: [(1, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 3), (3, 9)], 8: [(1, 5), (5, 6), (6, 3), (3, 2)]}, padri: [13], figli: [22], mosse: [(3, 7, 1, 2, 2)]
22 -> costo: 78258.1, rotte: {2: [(1, 10)], 3: [(1, 2), (2, 7)], 7: [(1, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 3), (3, 9)], 8: [(1, 5), (5, 6), (6, 3)]}, padri: [21], figli: [23, 26], mosse: [(3, 8, 3, 2)]
23 -> costo: 77410.3, rotte: {2: [(1, 3), (3, 10)], 3: [(1, 2), (2, 7)], 7: [(1, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9)], 8: [(1, 5), (5, 6), (6, 3)]}, padri: [22], figli: [24], mosse: [(2, 6, 1, 3, 1)]
24 -> costo: 77134.29999999999, rotte: {2: [(1, 3), (3, 10)], 3: [(1, 2), (2, 7)], 7: [(1, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9)], 8: [(1, 3), (3, 5), (5, 6)]}, padri: [23], figli: [25, 25, 25], mosse: [(8, 8, 1, 3, 8)]
25 -> costo: 77122.7, rotte: {2: [(1, 3), (3, 10)], 3: [(1, 2), (2, 7)], 7: [(1, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9)], 8: [(1, 3), (3, 6), (6, 5)]}, padri: [24, 24, 24], figli: [], mosse: [(8, 8, 5, 6), (8, 8, 3, 6, 4), (8, 8, 6, 5, 8)]
26 -> costo: 77568.70000000001, rotte: {2: [(1, 10)], 3: [(1, 2), (2, 3), (3, 7)], 7: [(1, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9)], 8: [(1, 5), (5, 6), (6, 3)]}, padri: [22], figli: [27], mosse: [(3, 6, 2, 3, 1)]
27 -> costo: 77292.7, rotte: {2: [(1, 10)], 3: [(1, 2), (2, 3), (3, 7)], 7: [(1, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9)], 8: [(1, 3), (3, 5), (5, 6)]}, padri: [26], figli: [28, 28, 28], mosse: [(8, 8, 1, 3, 8)]
28 -> costo: 77281.1, rotte: {2: [(1, 10)], 3: [(1, 2), (2, 3), (3, 7)], 7: [(1, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9)], 8: [(1, 3), (3, 6), (6, 5)]}, padri: [27, 27, 27], figli: [], mosse: [(8, 8, 5, 6), (8, 8, 3, 6, 4), (8, 8, 6, 5, 8)]
bestSolutionIndice: 17
17 -> costo: 76548.90000000001, rotte: {2: [(1, 10)], 3: [(1, 3), (3, 7)], 7: [(1, 8)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 2)], 4: [(1, 4)], 6: [(1, 9)], 8: [(1, 2), (2, 5), (5, 6)]}, padri: [16], figli: [], mosse: [(8, 8, 1, 2, 5)]
trasportoPalletDiGamma: {2: [(10, 9)], 3: [(3, 9), (7, 1)], 7: [(8, 18)], 9: [(4, 5), (3, 9), (11, 6)], 5: [(2, 15)], 4: [(4, 10)], 6: [(9, 14)], 8: [(2, 5), (5, 8), (6, 4)]}
itMosseLS: 39, itMosseTS: 25
time elapsed: 533.62s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88694.10000000002, rotte: {5: [(1, 11), (11, 5), (5, 10)], 4: [(1, 6), (6, 10)], 7: [(1, 7), (7, 3), (3, 8), (8, 10)], 2: [(1, 3)], 8: [(1, 4), (4, 8)], 9: [(1, 2)], 3: [(1, 8)], 6: [(1, 9), (9, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85651.90000000001, rotte: {5: [(1, 5), (5, 11), (11, 10)], 4: [(1, 6), (6, 10)], 7: [(1, 7), (7, 3), (3, 8), (8, 10)], 2: [(1, 3)], 8: [(1, 4), (4, 8)], 9: [(1, 2)], 3: [(1, 8)], 6: [(1, 9), (9, 8)]}, padri: [0], figli: [2], mosse: [(5, 5, 5, 11, 6)]
2 -> costo: 84134.80000000002, rotte: {5: [(1, 5), (5, 11), (11, 10)], 4: [(1, 6), (6, 10)], 7: [(1, 7), (7, 3), (3, 8), (8, 10)], 2: [(1, 3)], 8: [(1, 4), (4, 8)], 9: [(1, 2)], 3: [(1, 8)], 6: [(1, 8), (8, 9)]}, padri: [1], figli: [3, 3, 3, 3, 7, 7, 7, 7], mosse: [(6, 6, 9, 8)]
3 -> costo: 81300.40000000002, rotte: {5: [(1, 5), (5, 11), (11, 10)], 4: [(1, 6), (6, 10)], 7: [(1, 7), (7, 3), (3, 8), (8, 10)], 2: [(1, 3)], 8: [(1, 4)], 9: [(1, 2)], 3: [(1, 8)], 6: [(1, 8), (8, 9)]}, padri: [2, 2, 2, 2], figli: [4, 5, 6], mosse: [(7, 8, 1, 8, 5), (7, 8, 7, 8, 5), (7, 8, 3, 8, 5), (7, 8, 10, 8, 5)]
4 -> costo: 80361.60000000002, rotte: {5: [(1, 5), (5, 11), (11, 10)], 4: [(1, 6), (6, 10)], 7: [(1, 3), (3, 7), (7, 8), (8, 10)], 2: [(1, 3)], 8: [(1, 4)], 9: [(1, 2)], 3: [(1, 8)], 6: [(1, 8), (8, 9)]}, padri: [3, 5, 7], figli: [], mosse: [(7, 7, 3, 7, 1), (7, 7, 7, 8, 7), (7, 8, 1, 8, 5)]
5 -> costo: 81079.60000000002, rotte: {5: [(1, 5), (5, 11), (11, 10)], 4: [(1, 6), (6, 10)], 7: [(1, 3), (3, 8), (8, 7), (7, 10)], 2: [(1, 3)], 8: [(1, 4)], 9: [(1, 2)], 3: [(1, 8)], 6: [(1, 8), (8, 9)]}, padri: [3], figli: [4], mosse: [(7, 7, 8, 7, 1)]
6 -> costo: 81174.10000000002, rotte: {5: [(1, 5), (5, 11), (11, 10)], 4: [(1, 6), (6, 10)], 7: [(1, 7), (7, 8), (8, 3), (3, 10)], 2: [(1, 3)], 8: [(1, 4)], 9: [(1, 2)], 3: [(1, 8)], 6: [(1, 8), (8, 9)]}, padri: [3], figli: [], mosse: [(7, 7, 8, 3, 8)]
7 -> costo: 83196.00000000001, rotte: {5: [(1, 5), (5, 11), (11, 10)], 4: [(1, 6), (6, 10)], 7: [(1, 3), (3, 7), (7, 8), (8, 10)], 2: [(1, 3)], 8: [(1, 4), (4, 8)], 9: [(1, 2)], 3: [(1, 8)], 6: [(1, 8), (8, 9)]}, padri: [2], figli: [4], mosse: [(7, 7, 3, 7, 1)]
bestSolutionIndice: 4
4 -> costo: 80361.60000000002, rotte: {5: [(1, 5), (5, 11), (11, 10)], 4: [(1, 6), (6, 10)], 7: [(1, 3), (3, 7), (7, 8), (8, 10)], 2: [(1, 3)], 8: [(1, 4)], 9: [(1, 2)], 3: [(1, 8)], 6: [(1, 8), (8, 9)]}, padri: [3, 5, 7], figli: [], mosse: [(7, 7, 3, 7, 1), (7, 7, 7, 8, 7), (7, 8, 1, 8, 5)]
trasportoPalletDiGamma: {5: [(5, 8), (11, 6), (10, 1)], 4: [(6, 4), (10, 6)], 7: [(3, 8), (7, 1), (8, 7), (10, 2)], 2: [(3, 10)], 8: [(4, 15)], 9: [(2, 20)], 3: [(8, 10)], 6: [(8, 1), (9, 14)]}
itMosseLS: 12, itMosseTS: 9
time elapsed: 190.77s.


##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
