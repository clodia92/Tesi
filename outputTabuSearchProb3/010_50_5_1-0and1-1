itNSIMax: 50, itMosseTSMax: 5.
##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89181.09999999999, rotte: {8: [(1, 5), (5, 6), (6, 3)], 9: [(1, 2)], 7: [(1, 8), (8, 4)], 3: [(1, 10), (10, 3)], 6: [(1, 9), (9, 4)], 5: [(1, 11), (11, 3)], 2: [(1, 7), (7, 4)], 4: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86340.4, rotte: {8: [(1, 5), (5, 6), (6, 3)], 9: [(1, 2)], 7: [(1, 8), (8, 4)], 3: [(1, 10), (10, 3)], 6: [(1, 4), (4, 9)], 5: [(1, 11), (11, 3)], 2: [(1, 7), (7, 4)], 4: [(1, 4)]}, padri: [0], figli: [2], mosse: [(6, 6, 9, 4)]
2 -> costo: 83656.2, rotte: {8: [(1, 5), (5, 6), (6, 3)], 9: [(1, 2)], 7: [(1, 8), (8, 4)], 3: [(1, 3), (3, 10)], 6: [(1, 4), (4, 9)], 5: [(1, 11), (11, 3)], 2: [(1, 7), (7, 4)], 4: [(1, 4)]}, padri: [1], figli: [3], mosse: [(3, 3, 1, 3, 1)]
3 -> costo: 81681.3, rotte: {8: [(1, 5), (5, 6), (6, 3)], 9: [(1, 2)], 7: [(1, 8), (8, 4)], 3: [(1, 3), (3, 10)], 6: [(1, 4), (4, 9)], 5: [(1, 3), (3, 11)], 2: [(1, 7), (7, 4)], 4: [(1, 4)]}, padri: [2], figli: [4], mosse: [(5, 5, 1, 3, 9)]
4 -> costo: 80361.79999999999, rotte: {8: [(1, 5), (5, 6), (6, 3)], 9: [(1, 2)], 7: [(1, 4), (4, 8)], 3: [(1, 3), (3, 10)], 6: [(1, 4), (4, 9)], 5: [(1, 3), (3, 11)], 2: [(1, 7), (7, 4)], 4: [(1, 4)]}, padri: [3], figli: [5, 5], mosse: [(7, 7, 8, 4)]
5 -> costo: 79708.9, rotte: {8: [(1, 5), (5, 6), (6, 3)], 9: [(1, 2)], 7: [(1, 4), (4, 8)], 3: [(1, 3), (3, 10)], 6: [(1, 4), (4, 9)], 5: [(1, 3), (3, 11)], 2: [(1, 4), (4, 7)], 4: [(1, 4)]}, padri: [4, 4], figli: [6], mosse: [(2, 2, 1, 4, 2), (2, 2, 4, 7, 1)]
6 -> costo: 79432.9, rotte: {8: [(1, 3), (3, 5), (5, 6)], 9: [(1, 2)], 7: [(1, 4), (4, 8)], 3: [(1, 3), (3, 10)], 6: [(1, 4), (4, 9)], 5: [(1, 3), (3, 11)], 2: [(1, 4), (4, 7)], 4: [(1, 4)]}, padri: [5], figli: [7, 7, 7], mosse: [(8, 8, 1, 3, 8)]
7 -> costo: 79421.3, rotte: {8: [(1, 3), (3, 6), (6, 5)], 9: [(1, 2)], 7: [(1, 4), (4, 8)], 3: [(1, 3), (3, 10)], 6: [(1, 4), (4, 9)], 5: [(1, 3), (3, 11)], 2: [(1, 4), (4, 7)], 4: [(1, 4)]}, padri: [6, 6, 6], figli: [], mosse: [(8, 8, 3, 6, 4), (8, 8, 6, 5, 8), (8, 8, 5, 6)]
bestSolutionIndice: 7
7 -> costo: 79421.3, rotte: {8: [(1, 3), (3, 6), (6, 5)], 9: [(1, 2)], 7: [(1, 4), (4, 8)], 3: [(1, 3), (3, 10)], 6: [(1, 4), (4, 9)], 5: [(1, 3), (3, 11)], 2: [(1, 4), (4, 7)], 4: [(1, 4)]}, padri: [6, 6, 6], figli: [], mosse: [(8, 8, 3, 6, 4), (8, 8, 6, 5, 8), (8, 8, 5, 6)]
trasportoPalletDiGamma: {8: [(3, 8), (6, 4), (5, 8)], 9: [(2, 20)], 7: [(4, 2), (8, 18)], 3: [(3, 1), (10, 9)], 6: [(4, 1), (9, 14)], 5: [(3, 9), (11, 6)], 2: [(4, 2), (7, 1)], 4: [(4, 10)]}
itMosseLS: 10, itMosseTS: 5
time elapsed: 238.41s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 86988.50000000001, rotte: {2: [(1, 4)], 3: [(1, 8)], 8: [(1, 9), (9, 7), (7, 11)], 4: [(1, 5), (5, 11)], 7: [(1, 2)], 9: [(1, 10), (10, 8), (8, 4)], 6: [(1, 3)], 5: [(1, 6), (6, 3), (3, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 84810.90000000001, rotte: {2: [(1, 4)], 3: [(1, 8)], 8: [(1, 9), (9, 7), (7, 11)], 4: [(1, 5), (5, 11)], 7: [(1, 2)], 9: [(1, 4), (4, 10), (10, 8)], 6: [(1, 3)], 5: [(1, 6), (6, 3), (3, 4)]}, padri: [0], figli: [2], mosse: [(9, 9, 1, 4, 3)]
2 -> costo: 82803.90000000001, rotte: {2: [(1, 4)], 3: [(1, 8)], 8: [(1, 7), (7, 11), (11, 9)], 4: [(1, 5), (5, 11)], 7: [(1, 2)], 9: [(1, 4), (4, 10), (10, 8)], 6: [(1, 3)], 5: [(1, 6), (6, 3), (3, 4)]}, padri: [1], figli: [3], mosse: [(8, 8, 11, 9, 14)]
3 -> costo: 82012.70000000001, rotte: {2: [(1, 4)], 3: [(1, 8)], 8: [(1, 7), (7, 11), (11, 9)], 4: [(1, 5), (5, 11)], 7: [(1, 2)], 9: [(1, 4), (4, 8), (8, 10)], 6: [(1, 3)], 5: [(1, 6), (6, 3), (3, 4)]}, padri: [2], figli: [4, 6], mosse: [(9, 9, 4, 8, 8)]
4 -> costo: 81491.2, rotte: {2: [(1, 4)], 3: [(1, 8)], 8: [(1, 11), (11, 9)], 4: [(1, 5), (5, 11)], 7: [(1, 2)], 9: [(1, 4), (4, 8), (8, 10)], 6: [(1, 3)], 5: [(1, 6), (6, 7), (7, 3), (3, 4)]}, padri: [3], figli: [5, 5], mosse: [(5, 8, 6, 7, 1)]
5 -> costo: 78350.5, rotte: {2: [(1, 4)], 3: [(1, 8)], 8: [(1, 11), (11, 9)], 4: [(1, 5)], 7: [(1, 2)], 9: [(1, 4), (4, 8), (8, 10)], 6: [(1, 3)], 5: [(1, 6), (6, 7), (7, 3), (3, 4)]}, padri: [4, 4, 7], figli: [], mosse: [(8, 4, 1, 11, 2), (8, 4, 9, 11, 2), (5, 5, 6, 7, 1)]
6 -> costo: 81904.3, rotte: {2: [(1, 4)], 3: [(1, 8)], 8: [(1, 11), (11, 9)], 4: [(1, 5), (5, 11)], 7: [(1, 2)], 9: [(1, 4), (4, 8), (8, 10)], 6: [(1, 3)], 5: [(1, 7), (7, 6), (6, 3), (3, 4)]}, padri: [3], figli: [7, 7], mosse: [(5, 8, 1, 7, 1)]
7 -> costo: 78763.6, rotte: {2: [(1, 4)], 3: [(1, 8)], 8: [(1, 11), (11, 9)], 4: [(1, 5)], 7: [(1, 2)], 9: [(1, 4), (4, 8), (8, 10)], 6: [(1, 3)], 5: [(1, 7), (7, 6), (6, 3), (3, 4)]}, padri: [6, 6], figli: [5], mosse: [(8, 4, 1, 11, 2), (8, 4, 9, 11, 2)]
bestSolutionIndice: 5
5 -> costo: 78350.5, rotte: {2: [(1, 4)], 3: [(1, 8)], 8: [(1, 11), (11, 9)], 4: [(1, 5)], 7: [(1, 2)], 9: [(1, 4), (4, 8), (8, 10)], 6: [(1, 3)], 5: [(1, 6), (6, 7), (7, 3), (3, 4)]}, padri: [4, 4, 7], figli: [], mosse: [(8, 4, 1, 11, 2), (8, 4, 9, 11, 2), (5, 5, 6, 7, 1)]
trasportoPalletDiGamma: {2: [(4, 10)], 3: [(8, 10)], 8: [(11, 6), (9, 14)], 4: [(5, 8)], 7: [(2, 20)], 9: [(4, 3), (8, 8), (10, 9)], 6: [(3, 15)], 5: [(6, 4), (7, 1), (3, 3), (4, 2)]}
itMosseLS: 10, itMosseTS: 5
time elapsed: 202.66s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89667.5, rotte: {7: [(1, 9), (9, 8)], 6: [(1, 2)], 8: [(1, 4), (4, 11)], 3: [(1, 10), (10, 2)], 5: [(1, 6), (6, 3), (3, 2)], 4: [(1, 3)], 2: [(1, 5), (5, 8)], 9: [(1, 7), (7, 11), (11, 8), (8, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86420.8, rotte: {7: [(1, 9), (9, 8)], 6: [(1, 2)], 8: [(1, 4)], 3: [(1, 10), (10, 2)], 5: [(1, 6), (6, 3), (3, 2)], 4: [(1, 3)], 2: [(1, 5), (5, 8)], 9: [(1, 7), (7, 11), (11, 8), (8, 2)]}, padri: [0], figli: [2], mosse: [(9, 8, 1, 11, 5)]
2 -> costo: 83329.2, rotte: {7: [(1, 9), (9, 8)], 6: [(1, 2)], 8: [(1, 4)], 3: [(1, 2), (2, 10)], 5: [(1, 6), (6, 3), (3, 2)], 4: [(1, 3)], 2: [(1, 5), (5, 8)], 9: [(1, 7), (7, 11), (11, 8), (8, 2)]}, padri: [1], figli: [3], mosse: [(3, 3, 10, 2)]
3 -> costo: 81812.1, rotte: {7: [(1, 8), (8, 9)], 6: [(1, 2)], 8: [(1, 4)], 3: [(1, 2), (2, 10)], 5: [(1, 6), (6, 3), (3, 2)], 4: [(1, 3)], 2: [(1, 5), (5, 8)], 9: [(1, 7), (7, 11), (11, 8), (8, 2)]}, padri: [2], figli: [4], mosse: [(7, 7, 1, 8, 6)]
4 -> costo: 80564.50000000001, rotte: {7: [(1, 8), (8, 9)], 6: [(1, 2)], 8: [(1, 4)], 3: [(1, 2), (2, 10)], 5: [(1, 6), (6, 3), (3, 2)], 4: [(1, 3)], 2: [(1, 5), (5, 8)], 9: [(1, 2), (2, 7), (7, 11), (11, 8)]}, padri: [3], figli: [5], mosse: [(9, 9, 1, 2, 1)]
5 -> costo: 79524.30000000002, rotte: {7: [(1, 8), (8, 9)], 6: [(1, 2)], 8: [(1, 4)], 3: [(1, 2), (2, 10)], 5: [(1, 6), (6, 3), (3, 2)], 4: [(1, 3)], 2: [(1, 5), (5, 8)], 9: [(1, 2), (2, 8), (8, 7), (7, 11)]}, padri: [4], figli: [6], mosse: [(9, 9, 2, 8, 10)]
6 -> costo: 79307.50000000003, rotte: {7: [(1, 8), (8, 9)], 6: [(1, 2)], 8: [(1, 4)], 3: [(1, 2), (2, 10)], 5: [(1, 6), (6, 3), (3, 2)], 4: [(1, 3)], 2: [(1, 5), (5, 8)], 9: [(1, 2), (2, 7), (7, 8), (8, 11)]}, padri: [5], figli: [7, 9, 10], mosse: [(9, 9, 7, 8, 10)]
7 -> costo: 78937.50000000001, rotte: {7: [(1, 8), (8, 9)], 6: [(1, 2)], 8: [(1, 2), (2, 4)], 3: [(1, 2), (2, 10)], 5: [(1, 6), (6, 3), (3, 2)], 4: [(1, 3)], 2: [(1, 5), (5, 8)], 9: [(1, 7), (7, 8), (8, 11)]}, padri: [6, 9, 9, 9], figli: [8], mosse: [(8, 9, 1, 2, 1), (8, 8, 1, 2, 1), (8, 8, 2, 4, 15), (8, 8, 4, 2)]
8 -> costo: 78886.80000000003, rotte: {7: [(1, 8), (8, 9)], 6: [(1, 2)], 8: [(1, 2), (2, 4)], 3: [(1, 2), (2, 10)], 5: [(1, 3), (3, 2), (2, 6)], 4: [(1, 3)], 2: [(1, 5), (5, 8)], 9: [(1, 7), (7, 8), (8, 11)]}, padri: [7, 10], figli: [], mosse: [(5, 5, 2, 6, 4), (8, 8, 1, 2, 1)]
9 -> costo: 79049.20000000001, rotte: {7: [(1, 8), (8, 9)], 6: [(1, 2)], 8: [(1, 4), (4, 2)], 3: [(1, 2), (2, 10)], 5: [(1, 6), (6, 3), (3, 2)], 4: [(1, 3)], 2: [(1, 5), (5, 8)], 9: [(1, 7), (7, 8), (8, 11)]}, padri: [6], figli: [7, 7, 7, 10, 10, 10], mosse: [(8, 9, 4, 2, 1)]
10 -> costo: 78998.50000000003, rotte: {7: [(1, 8), (8, 9)], 6: [(1, 2)], 8: [(1, 4), (4, 2)], 3: [(1, 2), (2, 10)], 5: [(1, 3), (3, 2), (2, 6)], 4: [(1, 3)], 2: [(1, 5), (5, 8)], 9: [(1, 7), (7, 8), (8, 11)]}, padri: [9], figli: [8], mosse: [(5, 5, 2, 6, 4)]
bestSolutionIndice: 8
8 -> costo: 78886.80000000003, rotte: {7: [(1, 8), (8, 9)], 6: [(1, 2)], 8: [(1, 2), (2, 4)], 3: [(1, 2), (2, 10)], 5: [(1, 3), (3, 2), (2, 6)], 4: [(1, 3)], 2: [(1, 5), (5, 8)], 9: [(1, 7), (7, 8), (8, 11)]}, padri: [7, 10], figli: [], mosse: [(5, 5, 2, 6, 4), (8, 8, 1, 2, 1)]
trasportoPalletDiGamma: {7: [(8, 6), (9, 14)], 6: [(2, 15)], 8: [(2, 1), (4, 15)], 3: [(2, 1), (10, 9)], 5: [(3, 8), (2, 3), (6, 4)], 4: [(3, 10)], 2: [(5, 8), (8, 2)], 9: [(7, 1), (8, 10), (11, 6)]}
itMosseLS: 14, itMosseTS: 5
time elapsed: 215.78s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 83827.39999999998, rotte: {9: [(1, 8), (8, 6)], 5: [(1, 3)], 7: [(1, 10), (10, 9)], 3: [(1, 2)], 2: [(1, 11), (11, 3), (3, 9)], 8: [(1, 5), (5, 2), (2, 9)], 4: [(1, 7), (7, 6)], 6: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 81433.59999999999, rotte: {9: [(1, 8), (8, 6)], 5: [(1, 3)], 7: [(1, 10), (10, 9)], 3: [(1, 2)], 2: [(1, 3), (3, 11), (11, 9)], 8: [(1, 5), (5, 2), (2, 9)], 4: [(1, 7), (7, 6)], 6: [(1, 4)]}, padri: [0], figli: [2], mosse: [(2, 2, 3, 11, 6)]
2 -> costo: 79586.9, rotte: {9: [(1, 8), (8, 6)], 5: [(1, 3)], 7: [(1, 10), (10, 9)], 3: [(1, 2)], 2: [(1, 3), (3, 11), (11, 9)], 8: [(1, 2), (2, 5), (5, 9)], 4: [(1, 7), (7, 6)], 6: [(1, 4)]}, padri: [1], figli: [3], mosse: [(8, 8, 2, 5, 8)]
3 -> costo: 79066.7, rotte: {9: [(1, 8)], 5: [(1, 3)], 7: [(1, 10), (10, 9)], 3: [(1, 2)], 2: [(1, 3), (3, 11), (11, 9)], 8: [(1, 2), (2, 5), (5, 9)], 4: [(1, 7), (7, 6)], 6: [(1, 4)]}, padri: [2], figli: [4, 6, 6], mosse: [(4, 9, 1, 6, 2)]
4 -> costo: 78857.4, rotte: {9: [(1, 7), (7, 8)], 5: [(1, 3)], 7: [(1, 10), (10, 9)], 3: [(1, 2)], 2: [(1, 3), (3, 11), (11, 9)], 8: [(1, 2), (2, 5), (5, 9)], 4: [(1, 6)], 6: [(1, 4)]}, padri: [3], figli: [5, 5], mosse: [(9, 4, 1, 7, 1)]
5 -> costo: 78728.3, rotte: {9: [(1, 7), (7, 8)], 5: [(1, 3)], 7: [(1, 9), (9, 10)], 3: [(1, 2)], 2: [(1, 3), (3, 11), (11, 9)], 8: [(1, 2), (2, 5), (5, 9)], 4: [(1, 6)], 6: [(1, 4)]}, padri: [4, 4, 6], figli: [], mosse: [(7, 7, 1, 9, 11), (7, 7, 9, 10, 9), (9, 4, 1, 7, 1)]
6 -> costo: 78937.59999999999, rotte: {9: [(1, 8)], 5: [(1, 3)], 7: [(1, 9), (9, 10)], 3: [(1, 2)], 2: [(1, 3), (3, 11), (11, 9)], 8: [(1, 2), (2, 5), (5, 9)], 4: [(1, 7), (7, 6)], 6: [(1, 4)]}, padri: [3, 3], figli: [5], mosse: [(7, 7, 1, 9, 11), (7, 7, 9, 10, 9)]
bestSolutionIndice: 5
5 -> costo: 78728.3, rotte: {9: [(1, 7), (7, 8)], 5: [(1, 3)], 7: [(1, 9), (9, 10)], 3: [(1, 2)], 2: [(1, 3), (3, 11), (11, 9)], 8: [(1, 2), (2, 5), (5, 9)], 4: [(1, 6)], 6: [(1, 4)]}, padri: [4, 4, 6], figli: [], mosse: [(7, 7, 1, 9, 11), (7, 7, 9, 10, 9), (9, 4, 1, 7, 1)]
trasportoPalletDiGamma: {9: [(7, 1), (8, 18)], 5: [(3, 15)], 7: [(9, 11), (10, 9)], 3: [(2, 10)], 2: [(3, 3), (11, 6), (9, 1)], 8: [(2, 10), (5, 8), (9, 2)], 4: [(6, 4)], 6: [(4, 15)]}
itMosseLS: 9, itMosseTS: 5
time elapsed: 192.95s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88684.3, rotte: {9: [(1, 8), (8, 5)], 7: [(1, 4), (4, 10)], 3: [(1, 3)], 4: [(1, 7), (7, 3), (3, 5)], 6: [(1, 2)], 2: [(1, 9)], 5: [(1, 11), (11, 2), (2, 10)], 8: [(1, 6), (6, 9), (9, 5)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 84801.0, rotte: {9: [(1, 8), (8, 5)], 7: [(1, 4), (4, 10)], 3: [(1, 3)], 4: [(1, 7), (7, 3), (3, 5)], 6: [(1, 2)], 2: [(1, 9)], 5: [(1, 2), (2, 11), (11, 10)], 8: [(1, 6), (6, 9), (9, 5)]}, padri: [0], figli: [2], mosse: [(5, 5, 2, 11, 6)]
2 -> costo: 82534.2, rotte: {9: [(1, 8), (8, 5)], 7: [(1, 4), (4, 10)], 3: [(1, 3)], 4: [(1, 7), (7, 3), (3, 5)], 6: [(1, 2)], 2: [(1, 9)], 5: [(1, 2), (2, 11), (11, 10)], 8: [(1, 5), (5, 6), (6, 9)]}, padri: [1], figli: [3, 5], mosse: [(8, 8, 1, 5, 5)]
3 -> costo: 81280.1, rotte: {9: [(1, 8), (8, 5)], 7: [(1, 4), (4, 10)], 3: [(1, 3)], 4: [(1, 3), (3, 7), (7, 5)], 6: [(1, 2)], 2: [(1, 9)], 5: [(1, 2), (2, 11), (11, 10)], 8: [(1, 5), (5, 6), (6, 9)]}, padri: [2], figli: [4, 4], mosse: [(4, 4, 3, 7, 1)]
4 -> costo: 80599.90000000001, rotte: {9: [(1, 5), (5, 8)], 7: [(1, 4), (4, 10)], 3: [(1, 3)], 4: [(1, 3), (3, 7), (7, 5)], 6: [(1, 2)], 2: [(1, 9)], 5: [(1, 2), (2, 11), (11, 10)], 8: [(1, 5), (5, 6), (6, 9)]}, padri: [3, 3], figli: [], mosse: [(9, 9, 1, 5, 2), (9, 9, 5, 8, 18)]
5 -> costo: 81561.3, rotte: {9: [(1, 8), (8, 5)], 7: [(1, 4), (4, 10)], 3: [(1, 3)], 4: [(1, 5), (5, 7), (7, 3)], 6: [(1, 2)], 2: [(1, 9)], 5: [(1, 2), (2, 11), (11, 10)], 8: [(1, 5), (5, 6), (6, 9)]}, padri: [2], figli: [6, 6], mosse: [(4, 4, 1, 5, 1)]
6 -> costo: 80881.1, rotte: {9: [(1, 5), (5, 8)], 7: [(1, 4), (4, 10)], 3: [(1, 3)], 4: [(1, 5), (5, 7), (7, 3)], 6: [(1, 2)], 2: [(1, 9)], 5: [(1, 2), (2, 11), (11, 10)], 8: [(1, 5), (5, 6), (6, 9)]}, padri: [5, 5], figli: [], mosse: [(9, 9, 1, 5, 2), (9, 9, 5, 8, 18)]
bestSolutionIndice: 4
4 -> costo: 80599.90000000001, rotte: {9: [(1, 5), (5, 8)], 7: [(1, 4), (4, 10)], 3: [(1, 3)], 4: [(1, 3), (3, 7), (7, 5)], 6: [(1, 2)], 2: [(1, 9)], 5: [(1, 2), (2, 11), (11, 10)], 8: [(1, 5), (5, 6), (6, 9)]}, padri: [3, 3], figli: [], mosse: [(9, 9, 1, 5, 2), (9, 9, 5, 8, 18)]
trasportoPalletDiGamma: {9: [(5, 2), (8, 18)], 7: [(4, 15), (10, 5)], 3: [(3, 10)], 4: [(3, 8), (7, 1), (5, 1)], 6: [(2, 15)], 2: [(9, 10)], 5: [(2, 5), (11, 6), (10, 4)], 8: [(5, 5), (6, 4), (9, 4)]}
itMosseLS: 8, itMosseTS: 5
time elapsed: 165.28s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 85044.9, rotte: {2: [(1, 11), (11, 9)], 6: [(1, 8)], 7: [(1, 4), (4, 5)], 9: [(1, 7), (7, 8), (8, 9)], 3: [(1, 6), (6, 2), (2, 5)], 4: [(1, 10), (10, 9)], 5: [(1, 2)], 8: [(1, 3), (3, 5)]}, padri: [-1], figli: [1, 2], mosse: [-1]
1 -> costo: 82245.3, rotte: {2: [(1, 11), (11, 9)], 6: [(1, 8)], 7: [(1, 4), (4, 5)], 9: [(1, 7), (7, 6), (6, 8), (8, 9)], 3: [(1, 2), (2, 5)], 4: [(1, 10), (10, 9)], 5: [(1, 2)], 8: [(1, 3), (3, 5)]}, padri: [0], figli: [], mosse: [(9, 3, 7, 6, 4)]
2 -> costo: 82350.7, rotte: {2: [(1, 11), (11, 9)], 6: [(1, 8)], 7: [(1, 4), (4, 5)], 9: [(1, 7), (7, 8), (8, 9)], 3: [(1, 2), (2, 5), (5, 6)], 4: [(1, 10), (10, 9)], 5: [(1, 2)], 8: [(1, 3), (3, 5)]}, padri: [0], figli: [3], mosse: [(3, 3, 5, 6, 4)]
3 -> costo: 80169.5, rotte: {2: [(1, 11)], 6: [(1, 8)], 7: [(1, 4), (4, 5)], 9: [(1, 7), (7, 8), (8, 9)], 3: [(1, 2), (2, 5), (5, 6)], 4: [(1, 10), (10, 9)], 5: [(1, 2)], 8: [(1, 3), (3, 5)]}, padri: [2], figli: [4, 4, 4], mosse: [(9, 2, 1, 9, 4)]
4 -> costo: 79033.5, rotte: {2: [(1, 11)], 6: [(1, 8)], 7: [(1, 4), (4, 5)], 9: [(1, 7), (7, 8), (8, 9)], 3: [(1, 2), (2, 5), (5, 6)], 4: [(1, 10)], 5: [(1, 2)], 8: [(1, 3), (3, 5)]}, padri: [3, 3, 3], figli: [5], mosse: [(9, 4, 1, 9, 1), (9, 4, 7, 9, 1), (9, 4, 8, 9, 1)]
5 -> costo: 78939.90000000001, rotte: {2: [(1, 11)], 6: [(1, 8)], 7: [(1, 4), (4, 5)], 9: [(1, 8), (8, 9)], 3: [(1, 2), (2, 5), (5, 6)], 4: [(1, 7), (7, 10)], 5: [(1, 2)], 8: [(1, 3), (3, 5)]}, padri: [4], figli: [], mosse: [(4, 9, 1, 7, 1)]
bestSolutionIndice: 5
5 -> costo: 78939.90000000001, rotte: {2: [(1, 11)], 6: [(1, 8)], 7: [(1, 4), (4, 5)], 9: [(1, 8), (8, 9)], 3: [(1, 2), (2, 5), (5, 6)], 4: [(1, 7), (7, 10)], 5: [(1, 2)], 8: [(1, 3), (3, 5)]}, padri: [4], figli: [], mosse: [(4, 9, 1, 7, 1)]
trasportoPalletDiGamma: {2: [(11, 6)], 6: [(8, 15)], 7: [(4, 15), (5, 5)], 9: [(8, 3), (9, 14)], 3: [(2, 5), (5, 1), (6, 4)], 4: [(7, 1), (10, 9)], 5: [(2, 15)], 8: [(3, 18), (5, 2)]}
itMosseLS: 7, itMosseTS: 5
time elapsed: 170.58s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 86931.8, rotte: {4: [(1, 5), (5, 7), (7, 10)], 2: [(1, 9)], 7: [(1, 8), (8, 10)], 8: [(1, 3), (3, 9)], 9: [(1, 6), (6, 2), (2, 9), (9, 10)], 3: [(1, 11), (11, 10)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86300.5, rotte: {4: [(1, 5), (5, 7), (7, 10)], 2: [(1, 9)], 7: [(1, 8), (8, 10)], 8: [(1, 3), (3, 9)], 9: [(1, 2), (2, 9), (9, 10), (10, 6)], 3: [(1, 11), (11, 10)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [0], figli: [2, 3], mosse: [(9, 9, 10, 6, 4)]
2 -> costo: 84400.20000000001, rotte: {4: [(1, 5), (5, 7), (7, 10)], 2: [(1, 9)], 7: [(1, 8), (8, 10)], 8: [(1, 3), (3, 9)], 9: [(1, 2), (2, 6), (6, 9), (9, 10)], 3: [(1, 11), (11, 10)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [1, 4], figli: [], mosse: [(9, 9, 2, 6, 4), (9, 9, 10, 9)]
3 -> costo: 85295.90000000001, rotte: {4: [(1, 5), (5, 7), (7, 10)], 2: [(1, 9)], 7: [(1, 8), (8, 10)], 8: [(1, 3), (3, 9)], 9: [(1, 2), (2, 10), (10, 9), (9, 6)], 3: [(1, 11), (11, 10)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [1], figli: [4, 5], mosse: [(9, 9, 10, 9, 2)]
4 -> costo: 84886.6, rotte: {4: [(1, 5), (5, 7), (7, 10)], 2: [(1, 9)], 7: [(1, 8), (8, 10)], 8: [(1, 3), (3, 9)], 9: [(1, 2), (2, 6), (6, 10), (10, 9)], 3: [(1, 11), (11, 10)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [3], figli: [2], mosse: [(9, 9, 2, 6, 4)]
5 -> costo: 85228.1, rotte: {4: [(1, 5), (5, 7), (7, 10)], 2: [(1, 9)], 7: [(1, 8), (8, 10)], 8: [(1, 3), (3, 9)], 9: [(1, 2), (2, 11), (11, 10), (10, 9), (9, 6)], 3: [(1, 10)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [3], figli: [], mosse: [(9, 3, 2, 11, 6)]
bestSolutionIndice: 2
2 -> costo: 84400.20000000001, rotte: {4: [(1, 5), (5, 7), (7, 10)], 2: [(1, 9)], 7: [(1, 8), (8, 10)], 8: [(1, 3), (3, 9)], 9: [(1, 2), (2, 6), (6, 9), (9, 10)], 3: [(1, 11), (11, 10)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [1, 4], figli: [], mosse: [(9, 9, 2, 6, 4), (9, 9, 10, 9)]
trasportoPalletDiGamma: {4: [(5, 8), (7, 1), (10, 1)], 2: [(9, 10)], 7: [(8, 18), (10, 2)], 8: [(3, 18), (9, 2)], 9: [(2, 5), (6, 4), (9, 2), (10, 2)], 3: [(11, 6), (10, 4)], 5: [(2, 15)], 6: [(4, 15)]}
itMosseLS: 6, itMosseTS: 5
time elapsed: 222.83s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88733.8, rotte: {2: [(1, 2)], 4: [(1, 4)], 5: [(1, 11), (11, 8)], 8: [(1, 6), (6, 9), (9, 8)], 7: [(1, 5), (5, 2), (2, 8)], 9: [(1, 10), (10, 4), (4, 8)], 3: [(1, 7), (7, 3)], 6: [(1, 3)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 84925.5, rotte: {2: [(1, 2)], 4: [(1, 4)], 5: [(1, 11), (11, 8)], 8: [(1, 6), (6, 9), (9, 8)], 7: [(1, 5), (5, 2), (2, 8)], 9: [(1, 4), (4, 10), (10, 8)], 3: [(1, 7), (7, 3)], 6: [(1, 3)]}, padri: [0], figli: [2], mosse: [(9, 9, 4, 10, 9)]
2 -> costo: 82994.5, rotte: {2: [(1, 2)], 4: [(1, 4)], 5: [(1, 11), (11, 8)], 8: [(1, 6), (6, 9), (9, 8)], 7: [(1, 2), (2, 5), (5, 8)], 9: [(1, 4), (4, 10), (10, 8)], 3: [(1, 7), (7, 3)], 6: [(1, 3)]}, padri: [1], figli: [3], mosse: [(7, 7, 2, 5, 8)]
3 -> costo: 81110.2, rotte: {2: [(1, 2)], 4: [(1, 4)], 5: [(1, 8)], 8: [(1, 6), (6, 9), (9, 8)], 7: [(1, 2), (2, 5), (5, 8)], 9: [(1, 4), (4, 10), (10, 8)], 3: [(1, 7), (7, 3), (3, 11)], 6: [(1, 3)]}, padri: [2], figli: [4], mosse: [(3, 5, 3, 11, 6)]
4 -> costo: 79103.6, rotte: {2: [(1, 2)], 4: [(1, 4)], 5: [(1, 8)], 8: [(1, 6), (6, 9), (9, 8)], 7: [(1, 2), (2, 5), (5, 8)], 9: [(1, 4), (4, 10)], 3: [(1, 7), (7, 3), (3, 11)], 6: [(1, 3)]}, padri: [3], figli: [5, 8], mosse: [(5, 9, 1, 8, 5)]
5 -> costo: 77958.6, rotte: {2: [(1, 2)], 4: [(1, 4)], 5: [(1, 7), (7, 8)], 8: [(1, 6), (6, 9), (9, 8)], 7: [(1, 2), (2, 5), (5, 8)], 9: [(1, 4), (4, 10)], 3: [(1, 3), (3, 11)], 6: [(1, 3)]}, padri: [4], figli: [6, 9], mosse: [(5, 3, 1, 7, 1)]
6 -> costo: 77383.20000000001, rotte: {2: [(1, 2)], 4: [(1, 4)], 5: [(1, 7), (7, 8)], 8: [(1, 8), (8, 6), (6, 9)], 7: [(1, 2), (2, 5), (5, 8)], 9: [(1, 4), (4, 10)], 3: [(1, 3), (3, 11)], 6: [(1, 3)]}, padri: [5, 8, 9, 9], figli: [7], mosse: [(8, 8, 1, 8, 2), (5, 3, 1, 7, 1), (5, 5, 1, 7, 1), (5, 5, 7, 8, 14)]
7 -> costo: 77383.2, rotte: {2: [(1, 2)], 4: [(1, 4)], 5: [(1, 7), (7, 8)], 8: [(1, 8), (8, 6), (6, 9)], 7: [(1, 2), (2, 5), (5, 8)], 9: [(1, 4), (4, 3), (3, 10)], 3: [(1, 11)], 6: [(1, 3)]}, padri: [6], figli: [], mosse: [(9, 3, 4, 3, 3)]
8 -> costo: 78528.2, rotte: {2: [(1, 2)], 4: [(1, 4)], 5: [(1, 8)], 8: [(1, 8), (8, 6), (6, 9)], 7: [(1, 2), (2, 5), (5, 8)], 9: [(1, 4), (4, 10)], 3: [(1, 7), (7, 3), (3, 11)], 6: [(1, 3)]}, padri: [4], figli: [6, 9], mosse: [(8, 8, 1, 8, 2)]
9 -> costo: 78020.20000000001, rotte: {2: [(1, 2)], 4: [(1, 4)], 5: [(1, 8), (8, 7)], 8: [(1, 8), (8, 6), (6, 9)], 7: [(1, 2), (2, 5), (5, 8)], 9: [(1, 4), (4, 10)], 3: [(1, 3), (3, 11)], 6: [(1, 3)]}, padri: [8], figli: [6, 6], mosse: [(5, 3, 8, 7, 1)]
bestSolutionIndice: 7
7 -> costo: 77383.2, rotte: {2: [(1, 2)], 4: [(1, 4)], 5: [(1, 7), (7, 8)], 8: [(1, 8), (8, 6), (6, 9)], 7: [(1, 2), (2, 5), (5, 8)], 9: [(1, 4), (4, 3), (3, 10)], 3: [(1, 11)], 6: [(1, 3)]}, padri: [6], figli: [], mosse: [(9, 3, 4, 3, 3)]
trasportoPalletDiGamma: {2: [(2, 10)], 4: [(4, 10)], 5: [(7, 1), (8, 14)], 8: [(8, 2), (6, 4), (9, 14)], 7: [(2, 10), (5, 8), (8, 2)], 9: [(4, 5), (3, 3), (10, 9)], 3: [(11, 6)], 6: [(3, 15)]}
itMosseLS: 12, itMosseTS: 5
time elapsed: 199.77s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 80859.30000000002, rotte: {3: [(1, 10), (10, 6)], 7: [(1, 9), (9, 8)], 8: [(1, 2)], 2: [(1, 4)], 4: [(1, 3)], 9: [(1, 11), (11, 3), (3, 4)], 5: [(1, 5), (5, 6)], 6: [(1, 7), (7, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 78332.50000000001, rotte: {3: [(1, 10)], 7: [(1, 9), (9, 8)], 8: [(1, 2)], 2: [(1, 4)], 4: [(1, 3)], 9: [(1, 11), (11, 3), (3, 4)], 5: [(1, 5), (5, 6)], 6: [(1, 7), (7, 8)]}, padri: [0], figli: [2], mosse: [(5, 3, 1, 6, 1)]
2 -> costo: 76815.40000000001, rotte: {3: [(1, 10)], 7: [(1, 8), (8, 9)], 8: [(1, 2)], 2: [(1, 4)], 4: [(1, 3)], 9: [(1, 11), (11, 3), (3, 4)], 5: [(1, 5), (5, 6)], 6: [(1, 7), (7, 8)]}, padri: [1], figli: [3, 5], mosse: [(7, 7, 1, 8, 6)]
3 -> costo: 76401.59999999999, rotte: {3: [(1, 10)], 7: [(1, 8), (8, 9)], 8: [(1, 2)], 2: [(1, 4)], 4: [(1, 3)], 9: [(1, 3), (3, 4), (4, 11)], 5: [(1, 5), (5, 6)], 6: [(1, 7), (7, 8)]}, padri: [2, 5], figli: [4], mosse: [(9, 9, 4, 11, 6), (9, 9, 1, 3, 8)]
4 -> costo: 76307.99999999999, rotte: {3: [(1, 7), (7, 10)], 7: [(1, 8), (8, 9)], 8: [(1, 2)], 2: [(1, 4)], 4: [(1, 3)], 9: [(1, 3), (3, 4), (4, 11)], 5: [(1, 5), (5, 6)], 6: [(1, 8)]}, padri: [3], figli: [], mosse: [(3, 6, 1, 7, 1)]
5 -> costo: 76519.1, rotte: {3: [(1, 10)], 7: [(1, 8), (8, 9)], 8: [(1, 2)], 2: [(1, 4)], 4: [(1, 3)], 9: [(1, 4), (4, 11), (11, 3)], 5: [(1, 5), (5, 6)], 6: [(1, 7), (7, 8)]}, padri: [2], figli: [6, 6, 3], mosse: [(9, 9, 1, 4, 5)]
6 -> costo: 74544.2, rotte: {3: [(1, 10)], 7: [(1, 8), (8, 9)], 8: [(1, 2)], 2: [(1, 4)], 4: [(1, 3)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 5), (5, 6)], 6: [(1, 7), (7, 8)]}, padri: [5, 5], figli: [7], mosse: [(9, 9, 4, 3, 8), (9, 9, 3, 11, 6)]
7 -> costo: 74450.59999999999, rotte: {3: [(1, 7), (7, 10)], 7: [(1, 8), (8, 9)], 8: [(1, 2)], 2: [(1, 4)], 4: [(1, 3)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 5), (5, 6)], 6: [(1, 8)]}, padri: [6], figli: [], mosse: [(3, 6, 1, 7, 1)]
bestSolutionIndice: 7
7 -> costo: 74450.59999999999, rotte: {3: [(1, 7), (7, 10)], 7: [(1, 8), (8, 9)], 8: [(1, 2)], 2: [(1, 4)], 4: [(1, 3)], 9: [(1, 4), (4, 3), (3, 11)], 5: [(1, 5), (5, 6)], 6: [(1, 8)]}, padri: [6], figli: [], mosse: [(3, 6, 1, 7, 1)]
trasportoPalletDiGamma: {3: [(7, 1), (10, 9)], 7: [(8, 6), (9, 14)], 8: [(2, 20)], 2: [(4, 10)], 4: [(3, 10)], 9: [(4, 5), (3, 8), (11, 6)], 5: [(5, 8), (6, 4)], 6: [(8, 12)]}
itMosseLS: 9, itMosseTS: 5
time elapsed: 134.84s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 86272.9, rotte: {9: [(1, 4), (4, 2)], 3: [(1, 8)], 8: [(1, 10), (10, 3)], 4: [(1, 9)], 7: [(1, 6), (6, 8), (8, 2)], 2: [(1, 11), (11, 9)], 6: [(1, 5), (5, 2)], 5: [(1, 7), (7, 3)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 83588.7, rotte: {9: [(1, 4), (4, 2)], 3: [(1, 8)], 8: [(1, 3), (3, 10)], 4: [(1, 9)], 7: [(1, 6), (6, 8), (8, 2)], 2: [(1, 11), (11, 9)], 6: [(1, 5), (5, 2)], 5: [(1, 7), (7, 3)]}, padri: [0], figli: [2], mosse: [(8, 8, 1, 3, 11)]
2 -> costo: 82550.5, rotte: {9: [(1, 4), (4, 2)], 3: [(1, 8)], 8: [(1, 3), (3, 10)], 4: [(1, 9)], 7: [(1, 2), (2, 6), (6, 8)], 2: [(1, 11), (11, 9)], 6: [(1, 5), (5, 2)], 5: [(1, 7), (7, 3)]}, padri: [1], figli: [3], mosse: [(7, 7, 1, 2, 8)]
3 -> costo: 81777.40000000001, rotte: {9: [(1, 4), (4, 2)], 3: [(1, 8)], 8: [(1, 3), (3, 10)], 4: [(1, 9)], 7: [(1, 2), (2, 6), (6, 8)], 2: [(1, 11), (11, 9)], 6: [(1, 2), (2, 5)], 5: [(1, 7), (7, 3)]}, padri: [2], figli: [4], mosse: [(6, 6, 5, 2)]
4 -> costo: 81280.70000000001, rotte: {9: [(1, 4), (4, 2)], 3: [(1, 8)], 8: [(1, 3), (3, 10)], 4: [(1, 9)], 7: [(1, 2), (2, 6), (6, 8)], 2: [(1, 9)], 6: [(1, 2), (2, 5)], 5: [(1, 7), (7, 3), (3, 11)]}, padri: [3], figli: [5, 5, 5], mosse: [(5, 2, 3, 11, 6)]
5 -> costo: 81169.00000000001, rotte: {9: [(1, 2), (2, 4)], 3: [(1, 8)], 8: [(1, 3), (3, 10)], 4: [(1, 9)], 7: [(1, 2), (2, 6), (6, 8)], 2: [(1, 9)], 6: [(1, 2), (2, 5)], 5: [(1, 7), (7, 3), (3, 11)]}, padri: [4, 4, 4], figli: [6, 6, 6], mosse: [(9, 9, 1, 2, 5), (9, 9, 2, 4, 15), (9, 9, 4, 2)]
6 -> costo: 81147.00000000001, rotte: {9: [(1, 2), (2, 4)], 3: [(1, 8)], 8: [(1, 3), (3, 10)], 4: [(1, 9)], 7: [(1, 2), (2, 8), (8, 6)], 2: [(1, 9)], 6: [(1, 2), (2, 5)], 5: [(1, 7), (7, 3), (3, 11)]}, padri: [5, 5, 5], figli: [], mosse: [(7, 7, 6, 8), (7, 7, 2, 8, 8), (7, 7, 8, 6, 4)]
bestSolutionIndice: 6
6 -> costo: 81147.00000000001, rotte: {9: [(1, 2), (2, 4)], 3: [(1, 8)], 8: [(1, 3), (3, 10)], 4: [(1, 9)], 7: [(1, 2), (2, 8), (8, 6)], 2: [(1, 9)], 6: [(1, 2), (2, 5)], 5: [(1, 7), (7, 3), (3, 11)]}, padri: [5, 5, 5], figli: [], mosse: [(7, 7, 6, 8), (7, 7, 2, 8, 8), (7, 7, 8, 6, 4)]
trasportoPalletDiGamma: {9: [(2, 5), (4, 15)], 3: [(8, 10)], 8: [(3, 11), (10, 9)], 4: [(9, 10)], 7: [(2, 8), (8, 8), (6, 4)], 2: [(9, 4)], 6: [(2, 7), (5, 8)], 5: [(7, 1), (3, 7), (11, 6)]}
itMosseLS: 10, itMosseTS: 5
time elapsed: 210.28s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 83573.70000000001, rotte: {2: [(1, 3)], 5: [(1, 5), (5, 11), (11, 8)], 4: [(1, 8)], 8: [(1, 9), (9, 10)], 3: [(1, 7), (7, 3), (3, 8)], 6: [(1, 4)], 7: [(1, 6), (6, 10), (10, 8)], 9: [(1, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 81567.1, rotte: {2: [(1, 3)], 5: [(1, 5), (5, 11), (11, 8)], 4: [(1, 8)], 8: [(1, 9), (9, 10)], 3: [(1, 7), (7, 3), (3, 8)], 6: [(1, 4)], 7: [(1, 6), (6, 8), (8, 10)], 9: [(1, 2)]}, padri: [0], figli: [2], mosse: [(7, 7, 6, 8, 6)]
2 -> costo: 79780.20000000001, rotte: {2: [(1, 3)], 5: [(1, 5), (5, 8), (8, 11)], 4: [(1, 8)], 8: [(1, 9), (9, 10)], 3: [(1, 7), (7, 3), (3, 8)], 6: [(1, 4)], 7: [(1, 6), (6, 8), (8, 10)], 9: [(1, 2)]}, padri: [1], figli: [3], mosse: [(5, 5, 5, 8, 1)]
3 -> costo: 78716.20000000001, rotte: {2: [(1, 3)], 5: [(1, 5), (5, 8), (8, 11)], 4: [(1, 8)], 8: [(1, 9)], 3: [(1, 7), (7, 3), (3, 8)], 6: [(1, 4)], 7: [(1, 6), (6, 8), (8, 10)], 9: [(1, 2)]}, padri: [2], figli: [4, 5, 6, 7], mosse: [(7, 8, 1, 10, 6)]
4 -> costo: 77528.90000000001, rotte: {2: [(1, 3)], 5: [(1, 5), (5, 8), (8, 11)], 4: [(1, 8)], 8: [(1, 7), (7, 9)], 3: [(1, 3), (3, 8)], 6: [(1, 4)], 7: [(1, 6), (6, 8), (8, 10)], 9: [(1, 2)]}, padri: [3, 6], figli: [], mosse: [(8, 3, 1, 7, 1), (8, 7, 1, 7, 1)]
5 -> costo: 77777.40000000001, rotte: {2: [(1, 3)], 5: [(1, 5), (5, 8), (8, 11)], 4: [(1, 8)], 8: [(1, 9)], 3: [(1, 3), (3, 7), (7, 8)], 6: [(1, 4)], 7: [(1, 6), (6, 8), (8, 10)], 9: [(1, 2)]}, padri: [3, 6, 7], figli: [], mosse: [(3, 3, 3, 7, 1), (3, 7, 3, 7, 1), (3, 3, 3, 7, 1)]
6 -> costo: 77780.5, rotte: {2: [(1, 3)], 5: [(1, 5), (5, 8), (8, 11)], 4: [(1, 8)], 8: [(1, 9)], 3: [(1, 3), (3, 8)], 6: [(1, 4)], 7: [(1, 7), (7, 6), (6, 8), (8, 10)], 9: [(1, 2)]}, padri: [3], figli: [4, 5], mosse: [(7, 3, 1, 7, 1)]
7 -> costo: 78208.20000000001, rotte: {2: [(1, 3)], 5: [(1, 5), (5, 8), (8, 11)], 4: [(1, 8)], 8: [(1, 9)], 3: [(1, 3), (3, 8), (8, 7)], 6: [(1, 4)], 7: [(1, 6), (6, 8), (8, 10)], 9: [(1, 2)]}, padri: [3], figli: [5], mosse: [(3, 3, 8, 7, 1)]
bestSolutionIndice: 4
4 -> costo: 77528.90000000001, rotte: {2: [(1, 3)], 5: [(1, 5), (5, 8), (8, 11)], 4: [(1, 8)], 8: [(1, 7), (7, 9)], 3: [(1, 3), (3, 8)], 6: [(1, 4)], 7: [(1, 6), (6, 8), (8, 10)], 9: [(1, 2)]}, padri: [3, 6], figli: [], mosse: [(8, 3, 1, 7, 1), (8, 7, 1, 7, 1)]
trasportoPalletDiGamma: {2: [(3, 10)], 5: [(5, 8), (8, 1), (11, 6)], 4: [(8, 10)], 8: [(7, 1), (9, 14)], 3: [(3, 8), (8, 1)], 6: [(4, 15)], 7: [(6, 4), (8, 6), (10, 9)], 9: [(2, 20)]}
itMosseLS: 10, itMosseTS: 5
time elapsed: 203.20s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 84716.90000000001, rotte: {9: [(1, 7), (7, 6), (6, 10), (10, 4)], 6: [(1, 9), (9, 10)], 2: [(1, 4)], 7: [(1, 2)], 4: [(1, 8)], 5: [(1, 3)], 3: [(1, 11), (11, 8)], 8: [(1, 5), (5, 3), (3, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 82654.00000000001, rotte: {9: [(1, 4), (4, 7), (7, 6), (6, 10)], 6: [(1, 9), (9, 10)], 2: [(1, 4)], 7: [(1, 2)], 4: [(1, 8)], 5: [(1, 3)], 3: [(1, 11), (11, 8)], 8: [(1, 5), (5, 3), (3, 8)]}, padri: [0], figli: [2], mosse: [(9, 9, 1, 4, 5)]
2 -> costo: 81590.00000000001, rotte: {9: [(1, 4), (4, 7), (7, 6), (6, 10)], 6: [(1, 9)], 2: [(1, 4)], 7: [(1, 2)], 4: [(1, 8)], 5: [(1, 3)], 3: [(1, 11), (11, 8)], 8: [(1, 5), (5, 3), (3, 8)]}, padri: [1], figli: [3], mosse: [(9, 6, 1, 10, 1)]
3 -> costo: 80648.20000000001, rotte: {9: [(1, 4), (4, 7), (7, 6), (6, 10)], 6: [(1, 9)], 2: [(1, 4)], 7: [(1, 2)], 4: [(1, 8)], 5: [(1, 3)], 3: [(1, 11), (11, 8)], 8: [(1, 3), (3, 8), (8, 5)]}, padri: [2], figli: [4, 4, 4, 6, 6, 6], mosse: [(8, 8, 8, 5, 8)]
4 -> costo: 79708.90000000002, rotte: {9: [(1, 4), (4, 7), (7, 6), (6, 10)], 6: [(1, 9)], 2: [(1, 4)], 7: [(1, 2)], 4: [(1, 8)], 5: [(1, 3)], 3: [(1, 8), (8, 11)], 8: [(1, 3), (3, 8), (8, 5)]}, padri: [3, 3, 3], figli: [5], mosse: [(3, 3, 1, 8, 4), (3, 3, 8, 11, 6), (3, 3, 11, 8)]
5 -> costo: 79696.10000000002, rotte: {9: [(1, 4), (4, 6), (6, 7), (7, 10)], 6: [(1, 9)], 2: [(1, 4)], 7: [(1, 2)], 4: [(1, 8)], 5: [(1, 3)], 3: [(1, 8), (8, 11)], 8: [(1, 3), (3, 8), (8, 5)]}, padri: [4, 6, 6], figli: [], mosse: [(9, 9, 6, 7, 1), (3, 3, 1, 8, 4), (3, 3, 8, 11, 6)]
6 -> costo: 80635.40000000001, rotte: {9: [(1, 4), (4, 6), (6, 7), (7, 10)], 6: [(1, 9)], 2: [(1, 4)], 7: [(1, 2)], 4: [(1, 8)], 5: [(1, 3)], 3: [(1, 11), (11, 8)], 8: [(1, 3), (3, 8), (8, 5)]}, padri: [3], figli: [5, 5], mosse: [(9, 9, 6, 7, 1)]
bestSolutionIndice: 5
5 -> costo: 79696.10000000002, rotte: {9: [(1, 4), (4, 6), (6, 7), (7, 10)], 6: [(1, 9)], 2: [(1, 4)], 7: [(1, 2)], 4: [(1, 8)], 5: [(1, 3)], 3: [(1, 8), (8, 11)], 8: [(1, 3), (3, 8), (8, 5)]}, padri: [4, 6, 6], figli: [], mosse: [(9, 9, 6, 7, 1), (3, 3, 1, 8, 4), (3, 3, 8, 11, 6)]
trasportoPalletDiGamma: {9: [(4, 5), (6, 4), (7, 1), (10, 9)], 6: [(9, 14)], 2: [(4, 10)], 7: [(2, 20)], 4: [(8, 10)], 5: [(3, 15)], 3: [(8, 4), (11, 6)], 8: [(3, 3), (8, 4), (5, 8)]}
itMosseLS: 10, itMosseTS: 5
time elapsed: 236.11s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 90458.1, rotte: {6: [(1, 3)], 3: [(1, 9)], 8: [(1, 5), (5, 4)], 9: [(1, 11), (11, 6), (6, 4)], 2: [(1, 7), (7, 3), (3, 2)], 5: [(1, 10), (10, 9), (9, 2)], 4: [(1, 2)], 7: [(1, 8), (8, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86861.50000000001, rotte: {6: [(1, 3)], 3: [(1, 9)], 8: [(1, 5), (5, 4)], 9: [(1, 11), (11, 6), (6, 4)], 2: [(1, 7), (7, 3), (3, 2)], 5: [(1, 2), (2, 10), (10, 9)], 4: [(1, 2)], 7: [(1, 8), (8, 2)]}, padri: [0], figli: [2], mosse: [(5, 5, 1, 2, 2)]
2 -> costo: 85430.30000000002, rotte: {6: [(1, 3)], 3: [(1, 9)], 8: [(1, 5), (5, 4)], 9: [(1, 11), (11, 6), (6, 4)], 2: [(1, 7), (7, 3), (3, 2)], 5: [(1, 2), (2, 10), (10, 9)], 4: [(1, 2)], 7: [(1, 2), (2, 8)]}, padri: [1], figli: [3], mosse: [(7, 7, 8, 2)]
3 -> costo: 84081.50000000001, rotte: {6: [(1, 3)], 3: [(1, 9)], 8: [(1, 5), (5, 4)], 9: [(1, 11), (11, 7), (7, 6), (6, 4)], 2: [(1, 3), (3, 2)], 5: [(1, 2), (2, 10), (10, 9)], 4: [(1, 2)], 7: [(1, 2), (2, 8)]}, padri: [2], figli: [4], mosse: [(9, 2, 11, 7, 1)]
4 -> costo: 82705.0, rotte: {6: [(1, 3)], 3: [(1, 9)], 8: [(1, 5), (5, 4)], 9: [(1, 3), (3, 11), (11, 7), (7, 6), (6, 4)], 2: [(1, 2)], 5: [(1, 2), (2, 10), (10, 9)], 4: [(1, 2)], 7: [(1, 2), (2, 8)]}, padri: [3], figli: [5], mosse: [(9, 2, 1, 3, 3)]
5 -> costo: 80747.1, rotte: {6: [(1, 3)], 3: [(1, 9)], 8: [(1, 5), (5, 4)], 9: [(1, 4), (4, 3), (3, 11), (11, 7), (7, 6)], 2: [(1, 2)], 5: [(1, 2), (2, 10), (10, 9)], 4: [(1, 2)], 7: [(1, 2), (2, 8)]}, padri: [4], figli: [6, 8], mosse: [(9, 9, 1, 4, 3)]
6 -> costo: 79950.8, rotte: {6: [(1, 3)], 3: [(1, 9)], 8: [(1, 5), (5, 4)], 9: [(1, 4), (4, 3), (3, 11), (11, 7), (7, 6)], 2: [(1, 2)], 5: [(1, 2), (2, 10), (10, 9)], 4: [(1, 2)], 7: [(1, 8)]}, padri: [5], figli: [7, 7, 7], mosse: [(2, 7, 1, 2, 2)]
7 -> costo: 79289.40000000001, rotte: {6: [(1, 3)], 3: [(1, 9)], 8: [(1, 4), (4, 5)], 9: [(1, 4), (4, 3), (3, 11), (11, 7), (7, 6)], 2: [(1, 2)], 5: [(1, 2), (2, 10), (10, 9)], 4: [(1, 2)], 7: [(1, 8)]}, padri: [6, 6, 6], figli: [], mosse: [(8, 8, 1, 4, 12), (8, 8, 4, 5, 8), (8, 8, 5, 4)]
8 -> costo: 80080.40000000001, rotte: {6: [(1, 3)], 3: [(1, 9)], 8: [(1, 5), (5, 4)], 9: [(1, 4), (4, 2), (2, 3), (3, 11), (11, 7), (7, 6)], 2: [(1, 2)], 5: [(1, 2), (2, 10), (10, 9)], 4: [(1, 2)], 7: [(1, 8)]}, padri: [5], figli: [9], mosse: [(9, 7, 4, 2, 2)]
9 -> costo: 79419.0, rotte: {6: [(1, 3)], 3: [(1, 9)], 8: [(1, 4), (4, 5)], 9: [(1, 4), (4, 2), (2, 3), (3, 11), (11, 7), (7, 6)], 2: [(1, 2)], 5: [(1, 2), (2, 10), (10, 9)], 4: [(1, 2)], 7: [(1, 8)]}, padri: [8], figli: [10], mosse: [(8, 8, 1, 4, 12)]
10 -> costo: 79307.3, rotte: {6: [(1, 3)], 3: [(1, 9)], 8: [(1, 4), (4, 5)], 9: [(1, 2), (2, 3), (3, 11), (11, 7), (7, 6)], 2: [(1, 2), (2, 4)], 5: [(1, 2), (2, 10), (10, 9)], 4: [(1, 2)], 7: [(1, 8)]}, padri: [9], figli: [], mosse: [(2, 9, 2, 4, 3)]
bestSolutionIndice: 7
7 -> costo: 79289.40000000001, rotte: {6: [(1, 3)], 3: [(1, 9)], 8: [(1, 4), (4, 5)], 9: [(1, 4), (4, 3), (3, 11), (11, 7), (7, 6)], 2: [(1, 2)], 5: [(1, 2), (2, 10), (10, 9)], 4: [(1, 2)], 7: [(1, 8)]}, padri: [6, 6, 6], figli: [], mosse: [(8, 8, 1, 4, 12), (8, 8, 4, 5, 8), (8, 8, 5, 4)]
trasportoPalletDiGamma: {6: [(3, 15)], 3: [(9, 10)], 8: [(4, 12), (5, 8)], 9: [(4, 3), (3, 3), (11, 6), (7, 1), (6, 4)], 2: [(2, 8)], 5: [(2, 2), (10, 9), (9, 4)], 4: [(2, 10)], 7: [(8, 18)]}
itMosseLS: 12, itMosseTS: 5
time elapsed: 251.81s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 86642.30000000002, rotte: {7: [(1, 8), (8, 11)], 2: [(1, 4)], 5: [(1, 3)], 3: [(1, 10), (10, 7)], 9: [(1, 2)], 4: [(1, 9)], 6: [(1, 5), (5, 3), (3, 11)], 8: [(1, 6), (6, 9), (9, 4)]}, padri: [-1], figli: [1, 3], mosse: [-1]
1 -> costo: 83955.8, rotte: {7: [(1, 8), (8, 11)], 2: [(1, 4)], 5: [(1, 3)], 3: [(1, 10), (10, 7)], 9: [(1, 2)], 4: [(1, 9)], 6: [(1, 5), (5, 3), (3, 11)], 8: [(1, 4), (4, 6), (6, 9)]}, padri: [0], figli: [2, 2, 2], mosse: [(8, 8, 1, 4, 5)]
2 -> costo: 81676.3, rotte: {7: [(1, 8), (8, 11)], 2: [(1, 4)], 5: [(1, 3)], 3: [(1, 7), (7, 10)], 9: [(1, 2)], 4: [(1, 9)], 6: [(1, 5), (5, 3), (3, 11)], 8: [(1, 4), (4, 6), (6, 9)]}, padri: [1, 1, 1, 3], figli: [], mosse: [(3, 3, 1, 7, 1), (3, 3, 7, 10, 9), (3, 3, 10, 7), (8, 8, 1, 4, 5)]
3 -> costo: 84362.80000000002, rotte: {7: [(1, 8), (8, 11)], 2: [(1, 4)], 5: [(1, 3)], 3: [(1, 7), (7, 10)], 9: [(1, 2)], 4: [(1, 9)], 6: [(1, 5), (5, 3), (3, 11)], 8: [(1, 6), (6, 9), (9, 4)]}, padri: [0], figli: [2], mosse: [(3, 3, 1, 7, 1)]
bestSolutionIndice: 2
2 -> costo: 81676.3, rotte: {7: [(1, 8), (8, 11)], 2: [(1, 4)], 5: [(1, 3)], 3: [(1, 7), (7, 10)], 9: [(1, 2)], 4: [(1, 9)], 6: [(1, 5), (5, 3), (3, 11)], 8: [(1, 4), (4, 6), (6, 9)]}, padri: [1, 1, 1, 3], figli: [], mosse: [(3, 3, 1, 7, 1), (3, 3, 7, 10, 9), (3, 3, 10, 7), (8, 8, 1, 4, 5)]
trasportoPalletDiGamma: {7: [(8, 18), (11, 2)], 2: [(4, 10)], 5: [(3, 15)], 3: [(7, 1), (10, 9)], 9: [(2, 20)], 4: [(9, 10)], 6: [(5, 8), (3, 3), (11, 4)], 8: [(4, 5), (6, 4), (9, 4)]}
itMosseLS: 6, itMosseTS: 5
time elapsed: 166.72s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 79285.5, rotte: {8: [(1, 5), (5, 8)], 5: [(1, 2)], 9: [(1, 10), (10, 9)], 2: [(1, 7), (7, 2)], 6: [(1, 4)], 3: [(1, 11), (11, 9)], 7: [(1, 3), (3, 8)], 4: [(1, 6), (6, 8)]}, padri: [-1], figli: [1, 3], mosse: [-1]
1 -> costo: 77141.79999999999, rotte: {8: [(1, 5), (5, 8)], 5: [(1, 2)], 9: [(1, 10), (10, 9)], 2: [(1, 2)], 6: [(1, 4)], 3: [(1, 11), (11, 9)], 7: [(1, 3), (3, 8)], 4: [(1, 7), (7, 6), (6, 8)]}, padri: [0], figli: [2, 2], mosse: [(4, 2, 1, 7, 1)]
2 -> costo: 77012.7, rotte: {8: [(1, 5), (5, 8)], 5: [(1, 2)], 9: [(1, 9), (9, 10)], 2: [(1, 2)], 6: [(1, 4)], 3: [(1, 11), (11, 9)], 7: [(1, 3), (3, 8)], 4: [(1, 7), (7, 6), (6, 8)]}, padri: [1, 1, 4], figli: [], mosse: [(9, 9, 1, 9, 11), (9, 9, 9, 10, 9), (4, 3, 1, 7, 1)]
3 -> costo: 77250.2, rotte: {8: [(1, 5), (5, 8)], 5: [(1, 2)], 9: [(1, 10), (10, 9)], 2: [(1, 2)], 6: [(1, 4)], 3: [(1, 7), (7, 11), (11, 9)], 7: [(1, 3), (3, 8)], 4: [(1, 6), (6, 8)]}, padri: [0], figli: [4, 4], mosse: [(3, 2, 1, 7, 1)]
4 -> costo: 77121.1, rotte: {8: [(1, 5), (5, 8)], 5: [(1, 2)], 9: [(1, 9), (9, 10)], 2: [(1, 2)], 6: [(1, 4)], 3: [(1, 7), (7, 11), (11, 9)], 7: [(1, 3), (3, 8)], 4: [(1, 6), (6, 8)]}, padri: [3, 3], figli: [2], mosse: [(9, 9, 1, 9, 11), (9, 9, 9, 10, 9)]
bestSolutionIndice: 2
2 -> costo: 77012.7, rotte: {8: [(1, 5), (5, 8)], 5: [(1, 2)], 9: [(1, 9), (9, 10)], 2: [(1, 2)], 6: [(1, 4)], 3: [(1, 11), (11, 9)], 7: [(1, 3), (3, 8)], 4: [(1, 7), (7, 6), (6, 8)]}, padri: [1, 1, 4], figli: [], mosse: [(9, 9, 1, 9, 11), (9, 9, 9, 10, 9), (4, 3, 1, 7, 1)]
trasportoPalletDiGamma: {8: [(5, 8), (8, 12)], 5: [(2, 15)], 9: [(9, 11), (10, 9)], 2: [(2, 5)], 6: [(4, 15)], 3: [(11, 6), (9, 3)], 7: [(3, 18), (8, 2)], 4: [(7, 1), (6, 4), (8, 4)]}
itMosseLS: 7, itMosseTS: 5
time elapsed: 106.21s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 83807.7, rotte: {6: [(1, 4)], 4: [(1, 5), (5, 8)], 3: [(1, 10), (10, 3)], 5: [(1, 3)], 2: [(1, 11), (11, 6)], 7: [(1, 2)], 9: [(1, 7), (7, 3), (3, 8)], 8: [(1, 9), (9, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 81123.5, rotte: {6: [(1, 4)], 4: [(1, 5), (5, 8)], 3: [(1, 3), (3, 10)], 5: [(1, 3)], 2: [(1, 11), (11, 6)], 7: [(1, 2)], 9: [(1, 7), (7, 3), (3, 8)], 8: [(1, 9), (9, 8)]}, padri: [0], figli: [2], mosse: [(3, 3, 1, 3, 1)]
2 -> costo: 79312.5, rotte: {6: [(1, 4)], 4: [(1, 5), (5, 8)], 3: [(1, 3), (3, 10)], 5: [(1, 3)], 2: [(1, 6)], 7: [(1, 2)], 9: [(1, 7), (7, 3), (3, 11), (11, 8)], 8: [(1, 9), (9, 8)]}, padri: [1], figli: [3], mosse: [(9, 2, 3, 11, 6)]
3 -> costo: 77795.40000000001, rotte: {6: [(1, 4)], 4: [(1, 5), (5, 8)], 3: [(1, 3), (3, 10)], 5: [(1, 3)], 2: [(1, 6)], 7: [(1, 2)], 9: [(1, 7), (7, 3), (3, 11), (11, 8)], 8: [(1, 8), (8, 9)]}, padri: [2], figli: [4, 5, 7], mosse: [(8, 8, 1, 8, 6)]
4 -> costo: 76726.8, rotte: {6: [(1, 4)], 4: [(1, 5), (5, 8)], 3: [(1, 3), (3, 10)], 5: [(1, 3)], 2: [(1, 6)], 7: [(1, 2)], 9: [(1, 7), (7, 8), (8, 3), (3, 11)], 8: [(1, 8), (8, 9)]}, padri: [3, 7], figli: [], mosse: [(9, 9, 7, 8, 10), (9, 9, 7, 8, 10)]
5 -> costo: 76859.70000000001, rotte: {6: [(1, 4)], 4: [(1, 5), (5, 8)], 3: [(1, 3), (3, 10)], 5: [(1, 3)], 2: [(1, 7), (7, 6)], 7: [(1, 2)], 9: [(1, 3), (3, 11), (11, 8)], 8: [(1, 8), (8, 9)]}, padri: [3], figli: [6, 6, 6], mosse: [(2, 9, 1, 7, 1)]
6 -> costo: 75904.8, rotte: {6: [(1, 4)], 4: [(1, 5)], 3: [(1, 3), (3, 10)], 5: [(1, 3)], 2: [(1, 7), (7, 6)], 7: [(1, 2)], 9: [(1, 3), (3, 11), (11, 8)], 8: [(1, 8), (8, 9)]}, padri: [5, 5, 5], figli: [], mosse: [(9, 4, 1, 8, 2), (9, 4, 3, 8, 2), (9, 4, 11, 8, 2)]
7 -> costo: 76938.80000000002, rotte: {6: [(1, 4)], 4: [(1, 5), (5, 8)], 3: [(1, 3), (3, 10)], 5: [(1, 3)], 2: [(1, 6)], 7: [(1, 2)], 9: [(1, 8), (8, 7), (7, 3), (3, 11)], 8: [(1, 8), (8, 9)]}, padri: [3], figli: [4], mosse: [(9, 9, 1, 8, 10)]
bestSolutionIndice: 6
6 -> costo: 75904.8, rotte: {6: [(1, 4)], 4: [(1, 5)], 3: [(1, 3), (3, 10)], 5: [(1, 3)], 2: [(1, 7), (7, 6)], 7: [(1, 2)], 9: [(1, 3), (3, 11), (11, 8)], 8: [(1, 8), (8, 9)]}, padri: [5, 5, 5], figli: [], mosse: [(9, 4, 1, 8, 2), (9, 4, 3, 8, 2), (9, 4, 11, 8, 2)]
trasportoPalletDiGamma: {6: [(4, 15)], 4: [(5, 8)], 3: [(3, 1), (10, 9)], 5: [(3, 15)], 2: [(7, 1), (6, 4)], 7: [(2, 20)], 9: [(3, 2), (11, 6), (8, 12)], 8: [(8, 6), (9, 14)]}
itMosseLS: 10, itMosseTS: 5
time elapsed: 131.97s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 87070.0, rotte: {9: [(1, 10), (10, 5), (5, 3)], 3: [(1, 6), (6, 7)], 4: [(1, 3)], 2: [(1, 11), (11, 3)], 8: [(1, 8), (8, 3)], 7: [(1, 2)], 5: [(1, 9), (9, 3)], 6: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 83672.4, rotte: {9: [(1, 10), (10, 5), (5, 3)], 3: [(1, 6), (6, 7)], 4: [(1, 3)], 2: [(1, 11), (11, 3)], 8: [(1, 8), (8, 3)], 7: [(1, 2)], 5: [(1, 9)], 6: [(1, 4)]}, padri: [0], figli: [2], mosse: [(9, 5, 1, 3, 1)]
2 -> costo: 80445.9, rotte: {9: [(1, 5), (5, 3), (3, 10)], 3: [(1, 6), (6, 7)], 4: [(1, 3)], 2: [(1, 11), (11, 3)], 8: [(1, 8), (8, 3)], 7: [(1, 2)], 5: [(1, 9)], 6: [(1, 4)]}, padri: [1], figli: [3], mosse: [(9, 9, 3, 10, 9)]
3 -> costo: 78470.99999999999, rotte: {9: [(1, 5), (5, 3), (3, 10)], 3: [(1, 6), (6, 7)], 4: [(1, 3)], 2: [(1, 3), (3, 11)], 8: [(1, 8), (8, 3)], 7: [(1, 2)], 5: [(1, 9)], 6: [(1, 4)]}, padri: [2], figli: [4], mosse: [(2, 2, 1, 3, 4)]
4 -> costo: 77510.2, rotte: {9: [(1, 5), (5, 3), (3, 10)], 3: [(1, 6), (6, 7)], 4: [(1, 3)], 2: [(1, 3), (3, 11)], 8: [(1, 3), (3, 8)], 7: [(1, 2)], 5: [(1, 9)], 6: [(1, 4)]}, padri: [3], figli: [5, 5, 5], mosse: [(8, 8, 1, 3, 2)]
5 -> costo: 77249.90000000001, rotte: {9: [(1, 5), (5, 3), (3, 10)], 3: [(1, 7), (7, 6)], 4: [(1, 3)], 2: [(1, 3), (3, 11)], 8: [(1, 3), (3, 8)], 7: [(1, 2)], 5: [(1, 9)], 6: [(1, 4)]}, padri: [4, 4, 4], figli: [6, 7], mosse: [(3, 3, 6, 7), (3, 3, 1, 7, 1), (3, 3, 7, 6, 4)]
6 -> costo: 76916.3, rotte: {9: [(1, 5), (5, 7), (7, 3), (3, 10)], 3: [(1, 6)], 4: [(1, 3)], 2: [(1, 3), (3, 11)], 8: [(1, 3), (3, 8)], 7: [(1, 2)], 5: [(1, 9)], 6: [(1, 4)]}, padri: [5, 7], figli: [], mosse: [(9, 3, 5, 7, 1), (9, 5, 5, 7, 1)]
7 -> costo: 76998.29999999999, rotte: {9: [(1, 5), (5, 3), (3, 10)], 3: [(1, 6)], 4: [(1, 3)], 2: [(1, 3), (3, 11)], 8: [(1, 3), (3, 8)], 7: [(1, 2)], 5: [(1, 7), (7, 9)], 6: [(1, 4)]}, padri: [5], figli: [6], mosse: [(5, 3, 1, 7, 1)]
bestSolutionIndice: 6
6 -> costo: 76916.3, rotte: {9: [(1, 5), (5, 7), (7, 3), (3, 10)], 3: [(1, 6)], 4: [(1, 3)], 2: [(1, 3), (3, 11)], 8: [(1, 3), (3, 8)], 7: [(1, 2)], 5: [(1, 9)], 6: [(1, 4)]}, padri: [5, 7], figli: [], mosse: [(9, 3, 5, 7, 1), (9, 5, 5, 7, 1)]
trasportoPalletDiGamma: {9: [(5, 8), (7, 1), (3, 2), (10, 9)], 3: [(6, 4)], 4: [(3, 10)], 2: [(3, 4), (11, 6)], 8: [(3, 2), (8, 18)], 7: [(2, 20)], 5: [(9, 14)], 6: [(4, 15)]}
itMosseLS: 10, itMosseTS: 5
time elapsed: 157.09s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 91193.3, rotte: {3: [(1, 9)], 2: [(1, 6), (6, 3)], 5: [(1, 11), (11, 5), (5, 9)], 8: [(1, 8), (8, 9)], 4: [(1, 4)], 6: [(1, 10), (10, 4), (4, 9)], 9: [(1, 7), (7, 3)], 7: [(1, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85261.6, rotte: {3: [(1, 9)], 2: [(1, 6), (6, 3)], 5: [(1, 11), (11, 5), (5, 9)], 8: [(1, 8), (8, 9)], 4: [(1, 4)], 6: [(1, 4), (4, 10), (10, 9)], 9: [(1, 7), (7, 3)], 7: [(1, 2)]}, padri: [0], figli: [2], mosse: [(6, 6, 4, 10, 9)]
2 -> costo: 83243.3, rotte: {3: [(1, 9)], 2: [(1, 6), (6, 3)], 5: [(1, 5), (5, 9), (9, 11)], 8: [(1, 8), (8, 9)], 4: [(1, 4)], 6: [(1, 4), (4, 10), (10, 9)], 9: [(1, 7), (7, 3)], 7: [(1, 2)]}, padri: [1], figli: [3, 4, 4], mosse: [(5, 5, 9, 11, 6)]
3 -> costo: 81894.5, rotte: {3: [(1, 9)], 2: [(1, 3)], 5: [(1, 5), (5, 9), (9, 11)], 8: [(1, 8), (8, 9)], 4: [(1, 4)], 6: [(1, 4), (4, 10), (10, 9)], 9: [(1, 6), (6, 7), (7, 3)], 7: [(1, 2)]}, padri: [2], figli: [], mosse: [(9, 2, 1, 6, 4)]
4 -> costo: 82653.4, rotte: {3: [(1, 9)], 2: [(1, 3), (3, 6)], 5: [(1, 5), (5, 9), (9, 11)], 8: [(1, 8), (8, 9)], 4: [(1, 4)], 6: [(1, 4), (4, 10), (10, 9)], 9: [(1, 7), (7, 3)], 7: [(1, 2)]}, padri: [2, 2], figli: [5, 5, 5], mosse: [(2, 2, 1, 3, 6), (2, 2, 3, 6, 4)]
5 -> costo: 82323.8, rotte: {3: [(1, 9)], 2: [(1, 3), (3, 6)], 5: [(1, 5), (5, 9), (9, 11)], 8: [(1, 8), (8, 9)], 4: [(1, 4)], 6: [(1, 4), (4, 10), (10, 9)], 9: [(1, 3), (3, 7)], 7: [(1, 2)]}, padri: [4, 4, 4], figli: [], mosse: [(9, 9, 1, 3, 12), (9, 9, 3, 7, 1), (9, 9, 7, 3)]
bestSolutionIndice: 3
3 -> costo: 81894.5, rotte: {3: [(1, 9)], 2: [(1, 3)], 5: [(1, 5), (5, 9), (9, 11)], 8: [(1, 8), (8, 9)], 4: [(1, 4)], 6: [(1, 4), (4, 10), (10, 9)], 9: [(1, 6), (6, 7), (7, 3)], 7: [(1, 2)]}, padri: [2], figli: [], mosse: [(9, 2, 1, 6, 4)]
trasportoPalletDiGamma: {3: [(9, 10)], 2: [(3, 6)], 5: [(5, 8), (9, 1), (11, 6)], 8: [(8, 18), (9, 2)], 4: [(4, 10)], 6: [(4, 5), (10, 9), (9, 1)], 9: [(6, 4), (7, 1), (3, 12)], 7: [(2, 20)]}
itMosseLS: 8, itMosseTS: 5
time elapsed: 154.76s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 79643.5, rotte: {5: [(1, 9), (9, 5)], 6: [(1, 11), (11, 10)], 3: [(1, 6), (6, 8)], 8: [(1, 2)], 9: [(1, 4), (4, 8)], 4: [(1, 7), (7, 5)], 2: [(1, 8)], 7: [(1, 3)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 77302.3, rotte: {5: [(1, 9)], 6: [(1, 11), (11, 10)], 3: [(1, 6), (6, 8)], 8: [(1, 2)], 9: [(1, 4), (4, 8)], 4: [(1, 7), (7, 5)], 2: [(1, 8)], 7: [(1, 3)]}, padri: [0], figli: [2, 3, 4, 4, 4], mosse: [(4, 5, 1, 5, 1)]
2 -> costo: 76642.1, rotte: {5: [(1, 7), (7, 9)], 6: [(1, 11), (11, 10)], 3: [(1, 6), (6, 8)], 8: [(1, 2)], 9: [(1, 4), (4, 8)], 4: [(1, 5)], 2: [(1, 8)], 7: [(1, 3)]}, padri: [1], figli: [], mosse: [(5, 4, 1, 7, 1)]
3 -> costo: 76743.9, rotte: {5: [(1, 9)], 6: [(1, 11), (11, 10)], 3: [(1, 6), (6, 8)], 8: [(1, 2)], 9: [(1, 4), (4, 7), (7, 8)], 4: [(1, 5)], 2: [(1, 8)], 7: [(1, 3)]}, padri: [1], figli: [], mosse: [(9, 4, 4, 7, 1)]
4 -> costo: 77253.90000000001, rotte: {5: [(1, 9)], 6: [(1, 11), (11, 10)], 3: [(1, 6), (6, 8)], 8: [(1, 2)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 7)], 2: [(1, 8)], 7: [(1, 3)]}, padri: [1, 1, 1], figli: [], mosse: [(4, 4, 7, 5), (4, 4, 1, 5, 8), (4, 4, 5, 7, 1)]
bestSolutionIndice: 2
2 -> costo: 76642.1, rotte: {5: [(1, 7), (7, 9)], 6: [(1, 11), (11, 10)], 3: [(1, 6), (6, 8)], 8: [(1, 2)], 9: [(1, 4), (4, 8)], 4: [(1, 5)], 2: [(1, 8)], 7: [(1, 3)]}, padri: [1], figli: [], mosse: [(5, 4, 1, 7, 1)]
trasportoPalletDiGamma: {5: [(7, 1), (9, 14)], 6: [(11, 6), (10, 9)], 3: [(6, 4), (8, 6)], 8: [(2, 20)], 9: [(4, 15), (8, 2)], 4: [(5, 8)], 2: [(8, 10)], 7: [(3, 18)]}
itMosseLS: 6, itMosseTS: 5
time elapsed: 113.03s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88482.90000000001, rotte: {3: [(1, 11), (11, 9)], 4: [(1, 8)], 7: [(1, 3), (3, 5)], 9: [(1, 4), (4, 8)], 2: [(1, 6), (6, 2), (2, 8)], 5: [(1, 10), (10, 9)], 8: [(1, 7), (7, 5), (5, 9), (9, 8)], 6: [(1, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85404.50000000001, rotte: {3: [(1, 11), (11, 9)], 4: [(1, 8)], 7: [(1, 3), (3, 5)], 9: [(1, 4), (4, 8)], 2: [(1, 2), (2, 8)], 5: [(1, 10), (10, 9)], 8: [(1, 7), (7, 5), (5, 6), (6, 9), (9, 8)], 6: [(1, 2)]}, padri: [0], figli: [2], mosse: [(8, 2, 5, 6, 4)]
2 -> costo: 83935.00000000001, rotte: {3: [(1, 11), (11, 9)], 4: [(1, 8)], 7: [(1, 3)], 9: [(1, 4), (4, 8)], 2: [(1, 2), (2, 8)], 5: [(1, 10), (10, 9)], 8: [(1, 7), (7, 5), (5, 6), (6, 9), (9, 8)], 6: [(1, 2)]}, padri: [1], figli: [3], mosse: [(8, 7, 1, 5, 2)]
3 -> costo: 83429.1, rotte: {3: [(1, 11), (11, 9)], 4: [(1, 8)], 7: [(1, 3)], 9: [(1, 4), (4, 8)], 2: [(1, 2), (2, 8)], 5: [(1, 10), (10, 9)], 8: [(1, 7), (7, 5), (5, 8), (8, 6), (6, 9)], 6: [(1, 2)]}, padri: [2], figli: [4, 6], mosse: [(8, 8, 5, 8, 2)]
4 -> costo: 82417.90000000001, rotte: {3: [(1, 11), (11, 9)], 4: [(1, 8)], 7: [(1, 3)], 9: [(1, 4), (4, 8)], 2: [(1, 2), (2, 8)], 5: [(1, 10), (10, 9)], 8: [(1, 7), (7, 5), (5, 6), (6, 8), (8, 9)], 6: [(1, 2)]}, padri: [3], figli: [5], mosse: [(8, 8, 6, 8, 2)]
5 -> costo: 81983.6, rotte: {3: [(1, 11), (11, 9)], 4: [(1, 8)], 7: [(1, 3)], 9: [(1, 4), (4, 8)], 2: [(1, 2), (2, 7), (7, 8)], 5: [(1, 10), (10, 9)], 8: [(1, 5), (5, 6), (6, 8), (8, 9)], 6: [(1, 2)]}, padri: [4, 6], figli: [], mosse: [(2, 8, 2, 7, 1), (8, 8, 6, 8, 2)]
6 -> costo: 82994.8, rotte: {3: [(1, 11), (11, 9)], 4: [(1, 8)], 7: [(1, 3)], 9: [(1, 4), (4, 8)], 2: [(1, 2), (2, 7), (7, 8)], 5: [(1, 10), (10, 9)], 8: [(1, 5), (5, 8), (8, 6), (6, 9)], 6: [(1, 2)]}, padri: [3], figli: [5], mosse: [(2, 8, 2, 7, 1)]
bestSolutionIndice: 5
5 -> costo: 81983.6, rotte: {3: [(1, 11), (11, 9)], 4: [(1, 8)], 7: [(1, 3)], 9: [(1, 4), (4, 8)], 2: [(1, 2), (2, 7), (7, 8)], 5: [(1, 10), (10, 9)], 8: [(1, 5), (5, 6), (6, 8), (8, 9)], 6: [(1, 2)]}, padri: [4, 6], figli: [], mosse: [(2, 8, 2, 7, 1), (8, 8, 6, 8, 2)]
trasportoPalletDiGamma: {3: [(11, 6), (9, 4)], 4: [(8, 10)], 7: [(3, 18)], 9: [(4, 15), (8, 5)], 2: [(2, 5), (7, 1), (8, 1)], 5: [(10, 9), (9, 6)], 8: [(5, 8), (6, 4), (8, 2), (9, 4)], 6: [(2, 15)]}
itMosseLS: 7, itMosseTS: 4
time elapsed: 130.60s.


##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
