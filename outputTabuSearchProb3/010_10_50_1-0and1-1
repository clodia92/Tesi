itNSIMax: 10, itMosseTSMax: 50.
##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 81761.2, rotte: {8: [(1, 3), (3, 8)], 2: [(1, 11), (11, 9)], 6: [(1, 10), (10, 4)], 5: [(1, 7), (7, 8)], 4: [(1, 4)], 9: [(1, 5), (5, 9)], 3: [(1, 6), (6, 8)], 7: [(1, 2)]}, padri: [-1], figli: [1, 1, 1, 2, 2, 2, 5, 5, 5], mosse: [-1]
1 -> costo: 78780.7, rotte: {8: [(1, 3), (3, 8)], 2: [(1, 11), (11, 9)], 6: [(1, 4), (4, 10)], 5: [(1, 7), (7, 8)], 4: [(1, 4)], 9: [(1, 5), (5, 9)], 3: [(1, 6), (6, 8)], 7: [(1, 2)]}, padri: [0, 0, 0, 4, 5, 7], figli: [], mosse: [(6, 6, 1, 4, 5), (6, 6, 4, 10, 9), (6, 6, 10, 4), (5, 6, 1, 7, 1), (5, 3, 1, 7, 1), (5, 9, 1, 7, 1)]
2 -> costo: 81667.6, rotte: {8: [(1, 3), (3, 8)], 2: [(1, 11), (11, 9)], 6: [(1, 7), (7, 10), (10, 4)], 5: [(1, 8)], 4: [(1, 4)], 9: [(1, 5), (5, 9)], 3: [(1, 6), (6, 8)], 7: [(1, 2)]}, padri: [0], figli: [3, 4, 8, 4, 4], mosse: [(6, 5, 1, 7, 1)]
3 -> costo: 79604.7, rotte: {8: [(1, 3), (3, 8)], 2: [(1, 11), (11, 9)], 6: [(1, 4), (4, 7), (7, 10)], 5: [(1, 8)], 4: [(1, 4)], 9: [(1, 5), (5, 9)], 3: [(1, 6), (6, 8)], 7: [(1, 2)]}, padri: [2, 4, 8, 8, 8], figli: [], mosse: [(6, 6, 1, 4, 5), (6, 6, 4, 7, 1), (6, 6, 4, 7, 1), (6, 6, 7, 10, 9), (6, 6, 10, 7)]
4 -> costo: 81589.40000000001, rotte: {8: [(1, 3), (3, 8)], 2: [(1, 11), (11, 9)], 6: [(1, 7), (7, 4), (4, 10)], 5: [(1, 8)], 4: [(1, 4)], 9: [(1, 5), (5, 9)], 3: [(1, 6), (6, 8)], 7: [(1, 2)]}, padri: [2, 2, 2], figli: [1, 5, 6, 7, 3, 8], mosse: [(6, 6, 7, 4, 5), (6, 6, 4, 10, 9), (6, 6, 10, 4)]
5 -> costo: 78990.0, rotte: {8: [(1, 3), (3, 8)], 2: [(1, 11), (11, 9)], 6: [(1, 4), (4, 10)], 5: [(1, 8)], 4: [(1, 4)], 9: [(1, 5), (5, 9)], 3: [(1, 7), (7, 6), (6, 8)], 7: [(1, 2)]}, padri: [4, 7], figli: [1], mosse: [(3, 6, 1, 7, 1), (3, 9, 1, 7, 1)]
6 -> costo: 79091.1, rotte: {8: [(1, 3), (3, 8)], 2: [(1, 11), (11, 9)], 6: [(1, 4), (4, 10)], 5: [(1, 8)], 4: [(1, 4)], 9: [(1, 5), (5, 7), (7, 9)], 3: [(1, 6), (6, 8)], 7: [(1, 2)]}, padri: [4, 7], figli: [], mosse: [(9, 6, 5, 7, 1), (9, 9, 5, 7, 1)]
7 -> costo: 79398.6, rotte: {8: [(1, 3), (3, 8)], 2: [(1, 11), (11, 9)], 6: [(1, 4), (4, 10)], 5: [(1, 8)], 4: [(1, 4)], 9: [(1, 7), (7, 5), (5, 9)], 3: [(1, 6), (6, 8)], 7: [(1, 2)]}, padri: [4], figli: [1, 5, 6], mosse: [(9, 6, 1, 7, 1)]
8 -> costo: 80966.6, rotte: {8: [(1, 3), (3, 8)], 2: [(1, 11), (11, 9)], 6: [(1, 4), (4, 10), (10, 7)], 5: [(1, 8)], 4: [(1, 4)], 9: [(1, 5), (5, 9)], 3: [(1, 6), (6, 8)], 7: [(1, 2)]}, padri: [4], figli: [3, 3, 3], mosse: [(6, 6, 10, 7, 1)]
bestSolutionIndice: 1
1 -> costo: 78780.7, rotte: {8: [(1, 3), (3, 8)], 2: [(1, 11), (11, 9)], 6: [(1, 4), (4, 10)], 5: [(1, 7), (7, 8)], 4: [(1, 4)], 9: [(1, 5), (5, 9)], 3: [(1, 6), (6, 8)], 7: [(1, 2)]}, padri: [0, 0, 0, 4, 5, 7], figli: [], mosse: [(6, 6, 1, 4, 5), (6, 6, 4, 10, 9), (6, 6, 10, 4), (5, 6, 1, 7, 1), (5, 3, 1, 7, 1), (5, 9, 1, 7, 1)]
trasportoPalletDiGamma: {8: [(3, 18), (8, 2)], 2: [(11, 6), (9, 4)], 6: [(4, 5), (10, 9)], 5: [(7, 1), (8, 14)], 4: [(4, 10)], 9: [(5, 8), (9, 10)], 3: [(6, 4), (8, 2)], 7: [(2, 20)]}
itMosseLS: 21, itMosseTS: 21
time elapsed: 533.10s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 83778.30000000002, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 9), (9, 7)], 5: [(1, 5), (5, 2)], 8: [(1, 3), (3, 8)], 3: [(1, 11), (11, 2)], 9: [(1, 10), (10, 8)], 7: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 81396.0, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 9), (9, 7)], 5: [(1, 5), (5, 2)], 8: [(1, 3), (3, 8)], 3: [(1, 2), (2, 11)], 9: [(1, 10), (10, 8)], 7: [(1, 4)]}, padri: [0], figli: [2, 2, 2, 12, 12, 12, 14, 14, 14], mosse: [(3, 3, 1, 2, 3)]
2 -> costo: 79240.7, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 7), (7, 9)], 5: [(1, 5), (5, 2)], 8: [(1, 3), (3, 8)], 3: [(1, 2), (2, 11)], 9: [(1, 10), (10, 8)], 7: [(1, 4)]}, padri: [1, 1, 1], figli: [3, 5, 5, 5, 9, 9, 9, 13], mosse: [(6, 6, 9, 7), (6, 6, 1, 7, 1), (6, 6, 7, 9, 14)]
3 -> costo: 77591.4, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 7), (7, 9)], 5: [(1, 5), (5, 2)], 8: [(1, 3), (3, 8)], 3: [(1, 2), (2, 11)], 9: [(1, 8), (8, 10)], 7: [(1, 4)]}, padri: [2, 10, 12, 12, 12], figli: [4, 4, 4, 6, 6, 6], mosse: [(9, 9, 10, 8), (6, 9, 1, 7, 1), (6, 6, 9, 7), (6, 6, 1, 7, 1), (6, 6, 7, 9, 14)]
4 -> costo: 76818.3, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 7), (7, 9)], 5: [(1, 2), (2, 5)], 8: [(1, 3), (3, 8)], 3: [(1, 2), (2, 11)], 9: [(1, 8), (8, 10)], 7: [(1, 4)]}, padri: [3, 3, 3, 5, 7, 13, 13, 13], figli: [], mosse: [(5, 5, 5, 2), (5, 5, 1, 2, 7), (5, 5, 2, 5, 8), (9, 9, 10, 8), (6, 9, 1, 7, 1), (6, 6, 9, 7), (6, 6, 1, 7, 1), (6, 6, 7, 9, 14)]
5 -> costo: 78467.6, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 7), (7, 9)], 5: [(1, 2), (2, 5)], 8: [(1, 3), (3, 8)], 3: [(1, 2), (2, 11)], 9: [(1, 10), (10, 8)], 7: [(1, 4)]}, padri: [2, 2, 2, 14, 14, 14], figli: [4, 6, 11], mosse: [(5, 5, 5, 2), (5, 5, 1, 2, 7), (5, 5, 2, 5, 8), (6, 6, 9, 7), (6, 6, 1, 7, 1), (6, 6, 7, 9, 14)]
6 -> costo: 78416.3, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 9)], 5: [(1, 2), (2, 5)], 8: [(1, 3), (3, 8)], 3: [(1, 2), (2, 11)], 9: [(1, 7), (7, 10), (10, 8)], 7: [(1, 4)]}, padri: [5, 9, 9, 9], figli: [7, 7, 7, 8, 8, 8], mosse: [(9, 6, 1, 7, 1), (5, 5, 5, 2), (5, 5, 1, 2, 7), (5, 5, 2, 5, 8)]
7 -> costo: 76860.6, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 9)], 5: [(1, 2), (2, 5)], 8: [(1, 3), (3, 8)], 3: [(1, 2), (2, 11)], 9: [(1, 7), (7, 8), (8, 10)], 7: [(1, 4)]}, padri: [6, 6, 6, 8, 10, 10, 10], figli: [4], mosse: [(9, 9, 7, 8, 10), (9, 9, 8, 10, 9), (9, 9, 10, 8), (9, 9, 7, 8, 10), (5, 5, 5, 2), (5, 5, 1, 2, 7), (5, 5, 2, 5, 8)]
8 -> costo: 77784.8, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 9)], 5: [(1, 2), (2, 5)], 8: [(1, 3), (3, 8)], 3: [(1, 2), (2, 11)], 9: [(1, 8), (8, 7), (7, 10)], 7: [(1, 4)]}, padri: [6, 11, 11, 11], figli: [7], mosse: [(9, 9, 1, 8, 10), (5, 5, 5, 2), (5, 5, 1, 2, 7), (5, 5, 2, 5, 8)]
9 -> costo: 79189.4, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 9)], 5: [(1, 5), (5, 2)], 8: [(1, 3), (3, 8)], 3: [(1, 2), (2, 11)], 9: [(1, 7), (7, 10), (10, 8)], 7: [(1, 4)]}, padri: [2], figli: [10, 10, 10, 6, 6, 6, 11, 11, 11], mosse: [(9, 6, 1, 7, 1)]
10 -> costo: 77633.7, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 9)], 5: [(1, 5), (5, 2)], 8: [(1, 3), (3, 8)], 3: [(1, 2), (2, 11)], 9: [(1, 7), (7, 8), (8, 10)], 7: [(1, 4)]}, padri: [9, 9, 9, 11], figli: [7, 7, 7, 3, 13], mosse: [(9, 9, 7, 8, 10), (9, 9, 8, 10, 9), (9, 9, 10, 8), (9, 9, 7, 8, 10)]
11 -> costo: 78557.9, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 9)], 5: [(1, 5), (5, 2)], 8: [(1, 3), (3, 8)], 3: [(1, 2), (2, 11)], 9: [(1, 8), (8, 7), (7, 10)], 7: [(1, 4)]}, padri: [9], figli: [10, 8, 8, 8], mosse: [(9, 9, 1, 8, 10)]
12 -> costo: 79746.7, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 9), (9, 7)], 5: [(1, 5), (5, 2)], 8: [(1, 3), (3, 8)], 3: [(1, 2), (2, 11)], 9: [(1, 8), (8, 10)], 7: [(1, 4)]}, padri: [1], figli: [3, 3, 3, 13, 13, 13, 13, 13], mosse: [(9, 9, 10, 8)]
13 -> costo: 78973.59999999999, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 9), (9, 7)], 5: [(1, 2), (2, 5)], 8: [(1, 3), (3, 8)], 3: [(1, 2), (2, 11)], 9: [(1, 8), (8, 10)], 7: [(1, 4)]}, padri: [12, 12, 12, 14], figli: [4, 4, 4], mosse: [(5, 5, 5, 2), (5, 5, 1, 2, 7), (5, 5, 2, 5, 8), (9, 9, 10, 8)]
14 -> costo: 80622.9, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 9), (9, 7)], 5: [(1, 2), (2, 5)], 8: [(1, 3), (3, 8)], 3: [(1, 2), (2, 11)], 9: [(1, 10), (10, 8)], 7: [(1, 4)]}, padri: [1, 1, 1], figli: [5, 5, 5, 13], mosse: [(5, 5, 5, 2), (5, 5, 1, 2, 7), (5, 5, 2, 5, 8)]
bestSolutionIndice: 4
4 -> costo: 76818.3, rotte: {2: [(1, 2)], 4: [(1, 6), (6, 8)], 6: [(1, 7), (7, 9)], 5: [(1, 2), (2, 5)], 8: [(1, 3), (3, 8)], 3: [(1, 2), (2, 11)], 9: [(1, 8), (8, 10)], 7: [(1, 4)]}, padri: [3, 3, 3, 5, 7, 13, 13, 13], figli: [], mosse: [(5, 5, 5, 2), (5, 5, 1, 2, 7), (5, 5, 2, 5, 8), (9, 9, 10, 8), (6, 9, 1, 7, 1), (6, 6, 9, 7), (6, 6, 1, 7, 1), (6, 6, 7, 9, 14)]
trasportoPalletDiGamma: {2: [(2, 10)], 4: [(6, 4), (8, 6)], 6: [(7, 1), (9, 14)], 5: [(2, 7), (5, 8)], 8: [(3, 18), (8, 2)], 3: [(2, 3), (11, 6)], 9: [(8, 10), (10, 9)], 7: [(4, 15)]}
itMosseLS: 52, itMosseTS: 50
time elapsed: 1178.06s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89869.69999999998, rotte: {8: [(1, 9), (9, 6), (6, 3)], 7: [(1, 7), (7, 2)], 5: [(1, 8)], 4: [(1, 10), (10, 8)], 6: [(1, 5), (5, 3)], 2: [(1, 11), (11, 2)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 87312.9, rotte: {8: [(1, 9), (9, 6), (6, 7), (7, 3)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 10), (10, 8)], 6: [(1, 5), (5, 3)], 2: [(1, 11), (11, 2)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [0], figli: [2], mosse: [(8, 7, 6, 7, 1)]
2 -> costo: 84930.59999999999, rotte: {8: [(1, 9), (9, 6), (6, 7), (7, 3)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 10), (10, 8)], 6: [(1, 5), (5, 3)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [1], figli: [3], mosse: [(7, 2, 1, 2, 1)]
3 -> costo: 83281.29999999999, rotte: {8: [(1, 9), (9, 6), (6, 7), (7, 3)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [2], figli: [4, 6], mosse: [(4, 4, 10, 8)]
4 -> costo: 82085.49999999999, rotte: {8: [(1, 6), (6, 7), (7, 3), (3, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [3], figli: [5, 5], mosse: [(8, 8, 3, 9, 14)]
5 -> costo: 81789.09999999999, rotte: {8: [(1, 6), (6, 7), (7, 3), (3, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 3), (3, 5)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [4, 4], figli: [], mosse: [(6, 6, 1, 3, 7), (6, 6, 3, 5, 8)]
6 -> costo: 82661.19999999998, rotte: {8: [(1, 3), (3, 9), (9, 6), (6, 7)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [3], figli: [7], mosse: [(8, 8, 1, 3, 1)]
7 -> costo: 81601.79999999999, rotte: {8: [(1, 3), (3, 6), (6, 7), (7, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [6], figli: [8, 22], mosse: [(8, 8, 7, 9, 14)]
8 -> costo: 79982.59999999999, rotte: {8: [(1, 6), (6, 7), (7, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 3), (3, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [7], figli: [9, 19, 21, 21], mosse: [(2, 8, 1, 3, 1)]
9 -> costo: 79597.19999999998, rotte: {8: [(1, 7), (7, 6), (6, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 3), (3, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [8], figli: [10, 16, 16, 18, 18, 20], mosse: [(8, 8, 7, 6, 4)]
10 -> costo: 79239.9, rotte: {8: [(1, 7), (7, 6), (6, 8), (8, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 3), (3, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [9, 19], figli: [11, 13, 13, 15, 15, 17, 17], mosse: [(8, 4, 6, 8, 1), (8, 8, 7, 6, 4)]
11 -> costo: 78936.99999999999, rotte: {8: [(1, 6), (6, 8), (8, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 7), (7, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 3), (3, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [10], figli: [12, 12, 14, 14], mosse: [(4, 8, 1, 7, 1)]
12 -> costo: 78640.59999999998, rotte: {8: [(1, 6), (6, 8), (8, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 7), (7, 10)], 6: [(1, 3), (3, 5)], 2: [(1, 3), (3, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [11, 11, 13], figli: [], mosse: [(6, 6, 1, 3, 7), (6, 6, 3, 5, 8), (4, 8, 1, 7, 1)]
13 -> costo: 78943.49999999999, rotte: {8: [(1, 7), (7, 6), (6, 8), (8, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 10)], 6: [(1, 3), (3, 5)], 2: [(1, 3), (3, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [10, 10, 16, 20], figli: [12, 14], mosse: [(6, 6, 1, 3, 7), (6, 6, 3, 5, 8), (8, 4, 6, 8, 1), (8, 8, 7, 6, 4)]
14 -> costo: 78793.7, rotte: {8: [(1, 6), (6, 8), (8, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 10)], 6: [(1, 3), (3, 5)], 2: [(1, 3), (3, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 7), (7, 8)]}, padri: [13, 15, 15, 17], figli: [], mosse: [(9, 8, 4, 7, 1), (6, 6, 1, 3, 7), (6, 6, 3, 5, 8), (8, 4, 6, 8, 1)]
15 -> costo: 79090.1, rotte: {8: [(1, 6), (6, 8), (8, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 3), (3, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 7), (7, 8)]}, padri: [10, 18], figli: [14, 14], mosse: [(9, 8, 4, 7, 1), (8, 4, 6, 8, 1)]
16 -> costo: 79300.79999999999, rotte: {8: [(1, 7), (7, 6), (6, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 3), (3, 5)], 2: [(1, 3), (3, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [9, 9, 21], figli: [13, 17], mosse: [(6, 6, 1, 3, 7), (6, 6, 3, 5, 8), (8, 8, 7, 6, 4)]
17 -> costo: 79151.0, rotte: {8: [(1, 6), (6, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 3), (3, 5)], 2: [(1, 3), (3, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 7), (7, 8)]}, padri: [16, 18, 18], figli: [14], mosse: [(9, 8, 4, 7, 1), (6, 6, 1, 3, 7), (6, 6, 3, 5, 8)]
18 -> costo: 79447.40000000001, rotte: {8: [(1, 6), (6, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 3), (3, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 7), (7, 8)]}, padri: [9], figli: [15, 17, 17], mosse: [(9, 8, 4, 7, 1)]
19 -> costo: 79667.59999999999, rotte: {8: [(1, 6), (6, 7), (7, 8), (8, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 3), (3, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [8], figli: [10, 20, 20], mosse: [(8, 4, 7, 8, 1)]
20 -> costo: 79371.19999999998, rotte: {8: [(1, 6), (6, 7), (7, 8), (8, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 10)], 6: [(1, 3), (3, 5)], 2: [(1, 3), (3, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [19, 19, 21], figli: [13], mosse: [(6, 6, 1, 3, 7), (6, 6, 3, 5, 8), (8, 4, 7, 8, 1)]
21 -> costo: 79686.19999999998, rotte: {8: [(1, 6), (6, 7), (7, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 3), (3, 5)], 2: [(1, 3), (3, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [8, 8], figli: [16, 20], mosse: [(6, 6, 1, 3, 7), (6, 6, 3, 5, 8)]
22 -> costo: 80056.59999999999, rotte: {8: [(1, 6), (6, 7), (7, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 3), (3, 8)]}, padri: [7], figli: [23], mosse: [(9, 8, 4, 3, 1)]
23 -> costo: 79671.2, rotte: {8: [(1, 7), (7, 6), (6, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 3), (3, 8)]}, padri: [22], figli: [24, 30, 30, 32, 32], mosse: [(8, 8, 7, 6, 4)]
24 -> costo: 79313.9, rotte: {8: [(1, 7), (7, 6), (6, 8), (8, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 3), (3, 8)]}, padri: [23], figli: [25, 27, 27, 29, 29, 31, 31], mosse: [(8, 4, 6, 8, 1)]
25 -> costo: 79010.99999999999, rotte: {8: [(1, 6), (6, 8), (8, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 7), (7, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 3), (3, 8)]}, padri: [24], figli: [26, 26, 28, 28], mosse: [(4, 8, 1, 7, 1)]
26 -> costo: 78714.59999999999, rotte: {8: [(1, 6), (6, 8), (8, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 7), (7, 10)], 6: [(1, 3), (3, 5)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 3), (3, 8)]}, padri: [25, 25, 27], figli: [], mosse: [(6, 6, 1, 3, 7), (6, 6, 3, 5, 8), (4, 8, 1, 7, 1)]
27 -> costo: 79017.5, rotte: {8: [(1, 7), (7, 6), (6, 8), (8, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 10)], 6: [(1, 3), (3, 5)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 3), (3, 8)]}, padri: [24, 24, 30], figli: [26, 28], mosse: [(6, 6, 1, 3, 7), (6, 6, 3, 5, 8), (8, 4, 6, 8, 1)]
28 -> costo: 79014.4, rotte: {8: [(1, 6), (6, 8), (8, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 10)], 6: [(1, 3), (3, 5)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 3), (3, 7), (7, 8)]}, padri: [27, 29, 29, 31], figli: [], mosse: [(9, 8, 3, 7, 1), (6, 6, 1, 3, 7), (6, 6, 3, 5, 8), (8, 4, 6, 8, 1)]
29 -> costo: 79310.79999999999, rotte: {8: [(1, 6), (6, 8), (8, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 3), (3, 7), (7, 8)]}, padri: [24, 32], figli: [28, 28], mosse: [(9, 8, 3, 7, 1), (8, 4, 6, 8, 1)]
30 -> costo: 79374.8, rotte: {8: [(1, 7), (7, 6), (6, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 3), (3, 5)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 3), (3, 8)]}, padri: [23, 23], figli: [27, 31], mosse: [(6, 6, 1, 3, 7), (6, 6, 3, 5, 8)]
31 -> costo: 79371.7, rotte: {8: [(1, 6), (6, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 3), (3, 5)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 3), (3, 7), (7, 8)]}, padri: [30], figli: [28], mosse: [(9, 8, 3, 7, 1)]
32 -> costo: 79668.09999999999, rotte: {8: [(1, 6), (6, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 8), (8, 10)], 6: [(1, 5), (5, 3)], 2: [(1, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 3), (3, 7), (7, 8)]}, padri: [23], figli: [29], mosse: [(9, 8, 3, 7, 1)]
bestSolutionIndice: 12
12 -> costo: 78640.59999999998, rotte: {8: [(1, 6), (6, 8), (8, 9)], 7: [(1, 2)], 5: [(1, 8)], 4: [(1, 7), (7, 10)], 6: [(1, 3), (3, 5)], 2: [(1, 3), (3, 11)], 3: [(1, 3)], 9: [(1, 4), (4, 8)]}, padri: [11, 11, 13], figli: [], mosse: [(6, 6, 1, 3, 7), (6, 6, 3, 5, 8), (4, 8, 1, 7, 1)]
trasportoPalletDiGamma: {8: [(6, 4), (8, 1), (9, 14)], 7: [(2, 20)], 5: [(8, 15)], 4: [(7, 1), (10, 9)], 6: [(3, 7), (5, 8)], 2: [(3, 1), (11, 6)], 3: [(3, 10)], 9: [(4, 15), (8, 2)]}
itMosseLS: 59, itMosseTS: 50
time elapsed: 1494.12s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 84816.90000000001, rotte: {7: [(1, 10), (10, 2)], 2: [(1, 5), (5, 7), (7, 8)], 4: [(1, 9)], 5: [(1, 4)], 8: [(1, 3), (3, 8)], 6: [(1, 8)], 9: [(1, 11), (11, 2)], 3: [(1, 6), (6, 9)]}, padri: [-1], figli: [1, 1, 1, 3, 3, 3, 3], mosse: [-1]
1 -> costo: 81725.3, rotte: {7: [(1, 2), (2, 10)], 2: [(1, 5), (5, 7), (7, 8)], 4: [(1, 9)], 5: [(1, 4)], 8: [(1, 3), (3, 8)], 6: [(1, 8)], 9: [(1, 11), (11, 2)], 3: [(1, 6), (6, 9)]}, padri: [0, 0, 0], figli: [2, 2], mosse: [(7, 7, 10, 2), (7, 7, 1, 2, 11), (7, 7, 2, 10, 9)]
2 -> costo: 79343.0, rotte: {7: [(1, 2), (2, 10)], 2: [(1, 5), (5, 7), (7, 8)], 4: [(1, 9)], 5: [(1, 4)], 8: [(1, 3), (3, 8)], 6: [(1, 8)], 9: [(1, 2), (2, 11)], 3: [(1, 6), (6, 9)]}, padri: [1, 1, 3, 3, 3], figli: [], mosse: [(9, 9, 1, 2, 9), (9, 9, 2, 11, 6), (7, 7, 10, 2), (7, 7, 1, 2, 11), (7, 7, 2, 10, 9)]
3 -> costo: 82434.6, rotte: {7: [(1, 10), (10, 2)], 2: [(1, 5), (5, 7), (7, 8)], 4: [(1, 9)], 5: [(1, 4)], 8: [(1, 3), (3, 8)], 6: [(1, 8)], 9: [(1, 2), (2, 11)], 3: [(1, 6), (6, 9)]}, padri: [0, 0], figli: [2, 2, 2], mosse: [(9, 9, 1, 2, 9), (9, 9, 2, 11, 6)]
bestSolutionIndice: 2
2 -> costo: 79343.0, rotte: {7: [(1, 2), (2, 10)], 2: [(1, 5), (5, 7), (7, 8)], 4: [(1, 9)], 5: [(1, 4)], 8: [(1, 3), (3, 8)], 6: [(1, 8)], 9: [(1, 2), (2, 11)], 3: [(1, 6), (6, 9)]}, padri: [1, 1, 3, 3, 3], figli: [], mosse: [(9, 9, 1, 2, 9), (9, 9, 2, 11, 6), (7, 7, 10, 2), (7, 7, 1, 2, 11), (7, 7, 2, 10, 9)]
trasportoPalletDiGamma: {7: [(2, 11), (10, 9)], 2: [(5, 8), (7, 1), (8, 1)], 4: [(9, 10)], 5: [(4, 15)], 8: [(3, 18), (8, 2)], 6: [(8, 15)], 9: [(2, 9), (11, 6)], 3: [(6, 4), (9, 4)]}
itMosseLS: 10, itMosseTS: 10
time elapsed: 284.22s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88276.0, rotte: {4: [(1, 3)], 3: [(1, 11), (11, 5)], 9: [(1, 6), (6, 4), (4, 3)], 5: [(1, 8)], 8: [(1, 2)], 7: [(1, 9), (9, 8), (8, 3)], 2: [(1, 7), (7, 5)], 6: [(1, 10), (10, 3)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85188.69999999998, rotte: {4: [(1, 3)], 3: [(1, 11), (11, 5)], 9: [(1, 4), (4, 3)], 5: [(1, 8)], 8: [(1, 2)], 7: [(1, 9), (9, 8), (8, 3)], 2: [(1, 7), (7, 6), (6, 5)], 6: [(1, 10), (10, 3)]}, padri: [0], figli: [2], mosse: [(2, 9, 7, 6, 4)]
2 -> costo: 82504.49999999997, rotte: {4: [(1, 3)], 3: [(1, 11), (11, 5)], 9: [(1, 4), (4, 3)], 5: [(1, 8)], 8: [(1, 2)], 7: [(1, 9), (9, 8), (8, 3)], 2: [(1, 7), (7, 6), (6, 5)], 6: [(1, 3), (3, 10)]}, padri: [1], figli: [3], mosse: [(6, 6, 1, 3, 6)]
3 -> costo: 80891.19999999997, rotte: {4: [(1, 3)], 3: [(1, 5), (5, 11)], 9: [(1, 4), (4, 3)], 5: [(1, 8)], 8: [(1, 2)], 7: [(1, 9), (9, 8), (8, 3)], 2: [(1, 7), (7, 6), (6, 5)], 6: [(1, 3), (3, 10)]}, padri: [2], figli: [4], mosse: [(3, 3, 11, 5)]
4 -> costo: 79846.09999999998, rotte: {4: [(1, 3)], 3: [(1, 5), (5, 11)], 9: [(1, 4), (4, 3)], 5: [(1, 8)], 8: [(1, 2)], 7: [(1, 3), (3, 9), (9, 8)], 2: [(1, 7), (7, 6), (6, 5)], 6: [(1, 3), (3, 10)]}, padri: [3], figli: [5], mosse: [(7, 7, 1, 3, 1)]
5 -> costo: 78413.29999999997, rotte: {4: [(1, 3)], 3: [(1, 5), (5, 11)], 9: [(1, 4), (4, 3)], 5: [(1, 8)], 8: [(1, 2)], 7: [(1, 3), (3, 8), (8, 9)], 2: [(1, 7), (7, 6), (6, 5)], 6: [(1, 3), (3, 10)]}, padri: [4], figli: [6], mosse: [(7, 7, 9, 8)]
6 -> costo: 78410.19999999998, rotte: {4: [(1, 3)], 3: [(1, 5), (5, 11)], 9: [(1, 4), (4, 3)], 5: [(1, 8)], 8: [(1, 2)], 7: [(1, 3), (3, 7), (7, 8), (8, 9)], 2: [(1, 6), (6, 5)], 6: [(1, 3), (3, 10)]}, padri: [5], figli: [7, 7, 7], mosse: [(7, 2, 3, 7, 1)]
7 -> costo: 78107.89999999998, rotte: {4: [(1, 3)], 3: [(1, 5), (5, 11)], 9: [(1, 4), (4, 3)], 5: [(1, 8)], 8: [(1, 2)], 7: [(1, 3), (3, 7), (7, 8), (8, 9)], 2: [(1, 5), (5, 6)], 6: [(1, 3), (3, 10)]}, padri: [6, 6, 6], figli: [], mosse: [(2, 2, 1, 5, 4), (2, 2, 5, 6, 4), (2, 2, 6, 5)]
bestSolutionIndice: 7
7 -> costo: 78107.89999999998, rotte: {4: [(1, 3)], 3: [(1, 5), (5, 11)], 9: [(1, 4), (4, 3)], 5: [(1, 8)], 8: [(1, 2)], 7: [(1, 3), (3, 7), (7, 8), (8, 9)], 2: [(1, 5), (5, 6)], 6: [(1, 3), (3, 10)]}, padri: [6, 6, 6], figli: [], mosse: [(2, 2, 1, 5, 4), (2, 2, 5, 6, 4), (2, 2, 6, 5)]
trasportoPalletDiGamma: {4: [(3, 10)], 3: [(5, 4), (11, 6)], 9: [(4, 15), (3, 1)], 5: [(8, 15)], 8: [(2, 20)], 7: [(3, 1), (7, 1), (8, 3), (9, 14)], 2: [(5, 4), (6, 4)], 6: [(3, 6), (10, 9)]}
itMosseLS: 9, itMosseTS: 3
time elapsed: 115.02s.


##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
