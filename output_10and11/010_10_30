itNSIMax: 10, itMosseTSMax: 30.
##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88497.1, rotte: {7: [(1, 3), (3, 10)], 9: [(1, 5), (5, 9)], 5: [(1, 7), (7, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 6), (6, 2), (2, 9)], 4: [(1, 2)], 8: [(1, 11), (11, 8), (8, 9)], 3: [(1, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86006.1, rotte: {7: [(1, 3), (3, 10)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 6), (6, 2), (2, 9)], 4: [(1, 2)], 8: [(1, 7), (7, 11), (11, 8), (8, 9)], 3: [(1, 8)]}, padri: [0], figli: [2], mosse: [(8, 5, 1, 7, 1)]
2 -> costo: 83634.2, rotte: {7: [(1, 3), (3, 10)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 9)], 4: [(1, 2)], 8: [(1, 6), (6, 7), (7, 11), (11, 8), (8, 9)], 3: [(1, 8)]}, padri: [1], figli: [3, 3, 12, 12], mosse: [(8, 6, 1, 6, 4)]
3 -> costo: 81824.8, rotte: {7: [(1, 3)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 9)], 4: [(1, 2)], 8: [(1, 6), (6, 7), (7, 11), (11, 8), (8, 9)], 3: [(1, 8)]}, padri: [2, 2], figli: [4, 11, 13], mosse: [(5, 7, 1, 10, 2), (5, 7, 4, 10, 2)]
4 -> costo: 81411.90000000001, rotte: {7: [(1, 3)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 9)], 4: [(1, 2)], 8: [(1, 6), (6, 7), (7, 8), (8, 11), (11, 9)], 3: [(1, 8)]}, padri: [3, 12, 12], figli: [5, 5, 8, 8, 9, 10, 14, 14], mosse: [(8, 8, 8, 11, 6), (5, 7, 1, 10, 2), (5, 7, 4, 10, 2)]
5 -> costo: 80672.90000000001, rotte: {7: [(1, 3)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 9)], 4: [(1, 2)], 8: [(1, 6), (6, 7), (7, 8), (8, 9), (9, 11)], 3: [(1, 8)]}, padri: [4, 4, 13, 13], figli: [6, 7], mosse: [(8, 8, 8, 9, 1), (8, 8, 9, 11, 6), (5, 7, 1, 10, 2), (5, 7, 4, 10, 2)]
6 -> costo: 80245.2, rotte: {7: [(1, 3)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 9)], 4: [(1, 2)], 8: [(1, 7), (7, 6), (6, 8), (8, 9), (9, 11)], 3: [(1, 8)]}, padri: [5, 8, 8, 14, 14], figli: [], mosse: [(8, 8, 7, 6, 4), (8, 8, 8, 9, 1), (8, 8, 9, 11, 6), (5, 7, 1, 10, 2), (5, 7, 4, 10, 2)]
7 -> costo: 80513.20000000003, rotte: {7: [(1, 3)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 6), (6, 9)], 4: [(1, 2)], 8: [(1, 7), (7, 8), (8, 9), (9, 11)], 3: [(1, 8)]}, padri: [5, 10, 10, 15, 15], figli: [], mosse: [(6, 8, 2, 6, 4), (8, 8, 8, 9, 1), (8, 8, 9, 11, 6), (5, 7, 1, 10, 2), (5, 7, 4, 10, 2)]
8 -> costo: 80984.2, rotte: {7: [(1, 3)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 9)], 4: [(1, 2)], 8: [(1, 7), (7, 6), (6, 8), (8, 11), (11, 9)], 3: [(1, 8)]}, padri: [4, 16, 16], figli: [6, 6], mosse: [(8, 8, 7, 6, 4), (5, 7, 1, 10, 2), (5, 7, 4, 10, 2)]
9 -> costo: 81175.3, rotte: {7: [(1, 3)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 9)], 4: [(1, 2)], 8: [(1, 6), (6, 8), (8, 7), (7, 11), (11, 9)], 3: [(1, 8)]}, padri: [4], figli: [], mosse: [(8, 8, 8, 7, 1)]
10 -> costo: 81252.20000000003, rotte: {7: [(1, 3)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 6), (6, 9)], 4: [(1, 2)], 8: [(1, 7), (7, 8), (8, 11), (11, 9)], 3: [(1, 8)]}, padri: [4, 11], figli: [7, 7], mosse: [(6, 8, 2, 6, 4), (8, 8, 8, 11, 6)]
11 -> costo: 81665.10000000002, rotte: {7: [(1, 3)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 6), (6, 9)], 4: [(1, 2)], 8: [(1, 7), (7, 11), (11, 8), (8, 9)], 3: [(1, 8)]}, padri: [3], figli: [10], mosse: [(6, 8, 2, 6, 4)]
12 -> costo: 83221.3, rotte: {7: [(1, 3), (3, 10)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 9)], 4: [(1, 2)], 8: [(1, 6), (6, 7), (7, 8), (8, 11), (11, 9)], 3: [(1, 8)]}, padri: [2], figli: [4, 4, 13, 13, 13, 16, 16], mosse: [(8, 8, 8, 11, 6)]
13 -> costo: 82482.3, rotte: {7: [(1, 3), (3, 10)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 9)], 4: [(1, 2)], 8: [(1, 6), (6, 7), (7, 8), (8, 9), (9, 11)], 3: [(1, 8)]}, padri: [12, 12], figli: [5, 5, 14, 14, 15], mosse: [(8, 8, 8, 9, 1), (8, 8, 9, 11, 6)]
14 -> costo: 82054.59999999999, rotte: {7: [(1, 3), (3, 10)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 9)], 4: [(1, 2)], 8: [(1, 7), (7, 6), (6, 8), (8, 9), (9, 11)], 3: [(1, 8)]}, padri: [13, 16], figli: [6, 6], mosse: [(8, 8, 7, 6, 4), (8, 8, 8, 9, 1)]
15 -> costo: 82322.60000000002, rotte: {7: [(1, 3), (3, 10)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 6), (6, 9)], 4: [(1, 2)], 8: [(1, 7), (7, 8), (8, 9), (9, 11)], 3: [(1, 8)]}, padri: [13], figli: [7, 7], mosse: [(6, 8, 2, 6, 4)]
16 -> costo: 82793.59999999999, rotte: {7: [(1, 3), (3, 10)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 9)], 4: [(1, 2)], 8: [(1, 7), (7, 6), (6, 8), (8, 11), (11, 9)], 3: [(1, 8)]}, padri: [12], figli: [8, 8, 14], mosse: [(8, 8, 7, 6, 4)]
bestSolutionIndice: 6
6 -> costo: 80245.2, rotte: {7: [(1, 3)], 9: [(1, 5), (5, 9)], 5: [(1, 4), (4, 10)], 2: [(1, 4)], 6: [(1, 2), (2, 9)], 4: [(1, 2)], 8: [(1, 7), (7, 6), (6, 8), (8, 9), (9, 11)], 3: [(1, 8)]}, padri: [5, 8, 8, 14, 14], figli: [], mosse: [(8, 8, 7, 6, 4), (8, 8, 8, 9, 1), (8, 8, 9, 11, 6), (5, 7, 1, 10, 2), (5, 7, 4, 10, 2)]
trasportoPalletDiGamma: {7: [(3, 18)], 9: [(5, 8), (9, 12)], 5: [(4, 5), (10, 9)], 2: [(4, 10)], 6: [(2, 10), (9, 1)], 4: [(2, 10)], 8: [(7, 1), (6, 4), (8, 8), (9, 1), (11, 6)], 3: [(8, 10)]}
itMosseLS: 35, itMosseTS: 30
time elapsed: 1124.27s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89399.1, rotte: {3: [(1, 3)], 7: [(1, 5), (5, 11), (11, 2)], 4: [(1, 9)], 8: [(1, 6), (6, 2)], 6: [(1, 7), (7, 3), (3, 8)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 10), (10, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86761.2, rotte: {3: [(1, 3)], 7: [(1, 5), (5, 11), (11, 2)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 7), (7, 3), (3, 8), (8, 6)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 10), (10, 8)]}, padri: [0], figli: [2], mosse: [(6, 8, 8, 6, 4)]
2 -> costo: 85111.9, rotte: {3: [(1, 3)], 7: [(1, 5), (5, 11), (11, 2)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 7), (7, 3), (3, 8), (8, 6)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 8), (8, 10)]}, padri: [1], figli: [3, 7], mosse: [(5, 5, 10, 8)]
3 -> costo: 83789.70000000001, rotte: {3: [(1, 3)], 7: [(1, 5), (5, 7), (7, 11), (11, 2)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 3), (3, 8), (8, 6)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 8), (8, 10)]}, padri: [2], figli: [4, 6, 6, 6, 8], mosse: [(7, 6, 5, 7, 1)]
4 -> costo: 82596.70000000001, rotte: {3: [(1, 3)], 7: [(1, 2), (2, 5), (5, 7), (7, 11)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 3), (3, 8), (8, 6)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 8), (8, 10)]}, padri: [3, 7], figli: [5, 9], mosse: [(7, 7, 1, 2, 4), (7, 6, 5, 7, 1)]
5 -> costo: 81407.40000000001, rotte: {3: [(1, 3)], 7: [(1, 5), (5, 7), (7, 11)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 3), (3, 8), (8, 6)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 8), (8, 10)]}, padri: [4, 6, 8, 13], figli: [], mosse: [(8, 7, 1, 2, 4), (8, 7, 1, 2, 4), (7, 6, 5, 7, 1), (7, 7, 5, 7, 1)]
6 -> costo: 83442.70000000001, rotte: {3: [(1, 3)], 7: [(1, 5), (5, 7), (7, 2), (2, 11)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 3), (3, 8), (8, 6)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 8), (8, 10)]}, padri: [3, 3, 3], figli: [5, 9], mosse: [(7, 7, 11, 2), (7, 7, 7, 2, 4), (7, 7, 2, 11, 6)]
7 -> costo: 83918.90000000001, rotte: {3: [(1, 3)], 7: [(1, 2), (2, 5), (5, 11)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 7), (7, 3), (3, 8), (8, 6)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 8), (8, 10)]}, padri: [2], figli: [4, 8, 15, 16], mosse: [(7, 7, 1, 2, 4)]
8 -> costo: 82729.6, rotte: {3: [(1, 3)], 7: [(1, 5), (5, 11)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 7), (7, 3), (3, 8), (8, 6)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 8), (8, 10)]}, padri: [7], figli: [5, 9, 10, 12, 13, 14], mosse: [(8, 7, 1, 2, 4)]
9 -> costo: 81686.1, rotte: {3: [(1, 3)], 7: [(1, 5), (5, 11)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 3), (3, 8), (8, 6)], 2: [(1, 8)], 9: [(1, 4), (4, 7), (7, 9)], 5: [(1, 8), (8, 10)]}, padri: [8, 13, 15], figli: [], mosse: [(9, 6, 4, 7, 1), (9, 7, 4, 7, 1), (8, 7, 1, 2, 4)]
10 -> costo: 81790.79999999999, rotte: {3: [(1, 3)], 7: [(1, 5), (5, 11)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 3), (3, 7), (7, 8), (8, 6)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 8), (8, 10)]}, padri: [8, 12, 13, 14, 16], figli: [11, 11, 11], mosse: [(6, 6, 3, 7, 1), (6, 6, 3, 7, 1), (6, 7, 3, 7, 1), (6, 6, 7, 8, 2), (8, 7, 1, 2, 4)]
11 -> costo: 81629.09999999999, rotte: {3: [(1, 3)], 7: [(1, 5), (5, 11)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 3), (3, 7), (7, 6), (6, 8)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 8), (8, 10)]}, padri: [10, 10, 10, 14], figli: [], mosse: [(6, 6, 7, 6, 4), (6, 6, 6, 8, 2), (6, 6, 8, 6), (6, 6, 6, 8, 2)]
12 -> costo: 82054.2, rotte: {3: [(1, 3)], 7: [(1, 5), (5, 11)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 3), (3, 8), (8, 6), (6, 7)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 8), (8, 10)]}, padri: [8, 13, 14, 14, 14], figli: [10], mosse: [(6, 6, 6, 7, 1), (6, 7, 6, 7, 1), (6, 6, 7, 6), (6, 6, 8, 6, 4), (6, 6, 6, 7, 1)]
13 -> costo: 82202.5, rotte: {3: [(1, 3)], 7: [(1, 7), (7, 5), (5, 11)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 3), (3, 8), (8, 6)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 8), (8, 10)]}, padri: [8], figli: [5, 9, 10, 12], mosse: [(7, 6, 1, 7, 1)]
14 -> costo: 82227.3, rotte: {3: [(1, 3)], 7: [(1, 5), (5, 11)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 3), (3, 8), (8, 7), (7, 6)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 8), (8, 10)]}, padri: [8], figli: [11, 10, 12, 12, 12], mosse: [(6, 6, 8, 7, 1)]
15 -> costo: 82875.40000000001, rotte: {3: [(1, 3)], 7: [(1, 2), (2, 5), (5, 11)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 3), (3, 8), (8, 6)], 2: [(1, 8)], 9: [(1, 4), (4, 7), (7, 9)], 5: [(1, 8), (8, 10)]}, padri: [7], figli: [9], mosse: [(9, 6, 4, 7, 1)]
16 -> costo: 82980.09999999999, rotte: {3: [(1, 3)], 7: [(1, 2), (2, 5), (5, 11)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 3), (3, 7), (7, 8), (8, 6)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 8), (8, 10)]}, padri: [7], figli: [10], mosse: [(6, 6, 3, 7, 1)]
bestSolutionIndice: 5
5 -> costo: 81407.40000000001, rotte: {3: [(1, 3)], 7: [(1, 5), (5, 7), (7, 11)], 4: [(1, 9)], 8: [(1, 2)], 6: [(1, 3), (3, 8), (8, 6)], 2: [(1, 8)], 9: [(1, 4), (4, 9)], 5: [(1, 8), (8, 10)]}, padri: [4, 6, 8, 13], figli: [], mosse: [(8, 7, 1, 2, 4), (8, 7, 1, 2, 4), (7, 6, 5, 7, 1), (7, 7, 5, 7, 1)]
trasportoPalletDiGamma: {3: [(3, 10)], 7: [(5, 8), (7, 1), (11, 6)], 4: [(9, 10)], 8: [(2, 20)], 6: [(3, 8), (8, 2), (6, 4)], 2: [(8, 10)], 9: [(4, 15), (9, 4)], 5: [(8, 6), (10, 9)]}
itMosseLS: 35, itMosseTS: 30
time elapsed: 1193.58s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 91476.30000000002, rotte: {9: [(1, 5), (5, 2)], 4: [(1, 10), (10, 4)], 3: [(1, 11), (11, 2)], 6: [(1, 7), (7, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 9), (9, 2)], 7: [(1, 8), (8, 2)], 2: [(1, 6)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 88495.80000000002, rotte: {9: [(1, 5), (5, 2)], 4: [(1, 4), (4, 10)], 3: [(1, 11), (11, 2)], 6: [(1, 7), (7, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 9), (9, 2)], 7: [(1, 8), (8, 2)], 2: [(1, 6)]}, padri: [0], figli: [2], mosse: [(4, 4, 1, 4, 1)]
2 -> costo: 85543.40000000001, rotte: {9: [(1, 5), (5, 2)], 4: [(1, 4), (4, 10)], 3: [(1, 11), (11, 2)], 6: [(1, 7), (7, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 2), (2, 9)], 7: [(1, 8), (8, 2)], 2: [(1, 6)]}, padri: [1], figli: [3], mosse: [(5, 5, 1, 2, 1)]
3 -> costo: 82734.70000000001, rotte: {9: [(1, 5), (5, 2)], 4: [(1, 4), (4, 10)], 3: [(1, 11), (11, 2)], 6: [(1, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 2), (2, 9)], 7: [(1, 7), (7, 8), (8, 2)], 2: [(1, 6)]}, padri: [2], figli: [4], mosse: [(7, 6, 1, 7, 1)]
4 -> costo: 80352.40000000001, rotte: {9: [(1, 5), (5, 2)], 4: [(1, 4), (4, 10)], 3: [(1, 2), (2, 11)], 6: [(1, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 2), (2, 9)], 7: [(1, 7), (7, 8), (8, 2)], 2: [(1, 6)]}, padri: [3], figli: [5], mosse: [(3, 3, 1, 2, 4)]
5 -> costo: 79104.80000000002, rotte: {9: [(1, 5), (5, 2)], 4: [(1, 4), (4, 10)], 3: [(1, 2), (2, 11)], 6: [(1, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 2), (2, 9)], 7: [(1, 2), (2, 7), (7, 8)], 2: [(1, 6)]}, padri: [4], figli: [6, 6, 6, 12, 12, 12, 15], mosse: [(7, 7, 1, 2, 1)]
6 -> costo: 78331.70000000001, rotte: {9: [(1, 2), (2, 5)], 4: [(1, 4), (4, 10)], 3: [(1, 2), (2, 11)], 6: [(1, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 2), (2, 9)], 7: [(1, 2), (2, 7), (7, 8)], 2: [(1, 6)]}, padri: [5, 5, 5], figli: [7, 10, 14, 16], mosse: [(9, 9, 5, 2), (9, 9, 1, 2, 12), (9, 9, 2, 5, 8)]
7 -> costo: 78001.1, rotte: {9: [(1, 2), (2, 5)], 4: [(1, 10)], 3: [(1, 2), (2, 11)], 6: [(1, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 2), (2, 9)], 7: [(1, 2), (2, 7), (7, 8)], 2: [(1, 6)]}, padri: [6, 12, 12, 12], figli: [8, 9], mosse: [(6, 4, 1, 4, 1), (9, 9, 5, 2), (9, 9, 1, 2, 12), (9, 9, 2, 5, 8)]
8 -> costo: 77089.0, rotte: {9: [(1, 2), (2, 5)], 4: [(1, 2), (2, 10)], 3: [(1, 2), (2, 11)], 6: [(1, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 2), (2, 9)], 7: [(1, 7), (7, 8)], 2: [(1, 6)]}, padri: [7, 9, 13, 13, 13], figli: [], mosse: [(4, 7, 1, 2, 1), (5, 7, 1, 2, 1), (9, 9, 5, 2), (9, 9, 1, 2, 12), (9, 9, 2, 5, 8)]
9 -> costo: 77356.90000000002, rotte: {9: [(1, 2), (2, 5)], 4: [(1, 2), (2, 10)], 3: [(1, 2), (2, 11)], 6: [(1, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 9)], 7: [(1, 2), (2, 7), (7, 8)], 2: [(1, 6)]}, padri: [7, 14, 14, 14], figli: [8], mosse: [(4, 5, 1, 2, 1), (9, 9, 5, 2), (9, 9, 1, 2, 12), (9, 9, 2, 5, 8)]
10 -> costo: 78073.40000000001, rotte: {9: [(1, 2), (2, 5)], 4: [(1, 4), (4, 10)], 3: [(1, 2), (2, 11)], 6: [(1, 4), (4, 2)], 8: [(1, 3), (3, 2)], 5: [(1, 2), (2, 9)], 7: [(1, 7), (7, 8)], 2: [(1, 6)]}, padri: [6, 15, 15, 15], figli: [11, 11], mosse: [(6, 7, 4, 2, 1), (9, 9, 5, 2), (9, 9, 1, 2, 12), (9, 9, 2, 5, 8)]
11 -> costo: 77961.70000000001, rotte: {9: [(1, 2), (2, 5)], 4: [(1, 4), (4, 10)], 3: [(1, 2), (2, 11)], 6: [(1, 2), (2, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 2), (2, 9)], 7: [(1, 7), (7, 8)], 2: [(1, 6)]}, padri: [10, 10, 16, 16, 16], figli: [], mosse: [(6, 6, 1, 2, 1), (6, 6, 2, 4, 14), (9, 9, 5, 2), (9, 9, 1, 2, 12), (9, 9, 2, 5, 8)]
12 -> costo: 78774.20000000001, rotte: {9: [(1, 5), (5, 2)], 4: [(1, 10)], 3: [(1, 2), (2, 11)], 6: [(1, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 2), (2, 9)], 7: [(1, 2), (2, 7), (7, 8)], 2: [(1, 6)]}, padri: [5], figli: [13, 7, 7, 7, 14, 14, 14], mosse: [(6, 4, 1, 4, 1)]
13 -> costo: 77862.1, rotte: {9: [(1, 5), (5, 2)], 4: [(1, 2), (2, 10)], 3: [(1, 2), (2, 11)], 6: [(1, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 2), (2, 9)], 7: [(1, 7), (7, 8)], 2: [(1, 6)]}, padri: [12, 14], figli: [8, 8, 8], mosse: [(4, 7, 1, 2, 1), (5, 7, 1, 2, 1)]
14 -> costo: 78130.00000000003, rotte: {9: [(1, 5), (5, 2)], 4: [(1, 2), (2, 10)], 3: [(1, 2), (2, 11)], 6: [(1, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 9)], 7: [(1, 2), (2, 7), (7, 8)], 2: [(1, 6)]}, padri: [12], figli: [9, 9, 9, 13], mosse: [(4, 5, 1, 2, 1)]
15 -> costo: 78846.5, rotte: {9: [(1, 5), (5, 2)], 4: [(1, 4), (4, 10)], 3: [(1, 2), (2, 11)], 6: [(1, 4), (4, 2)], 8: [(1, 3), (3, 2)], 5: [(1, 2), (2, 9)], 7: [(1, 7), (7, 8)], 2: [(1, 6)]}, padri: [5], figli: [10, 10, 10, 16, 16, 16, 16], mosse: [(6, 7, 4, 2, 1)]
16 -> costo: 78734.8, rotte: {9: [(1, 5), (5, 2)], 4: [(1, 4), (4, 10)], 3: [(1, 2), (2, 11)], 6: [(1, 2), (2, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 2), (2, 9)], 7: [(1, 7), (7, 8)], 2: [(1, 6)]}, padri: [15, 15], figli: [11, 11, 11], mosse: [(6, 6, 1, 2, 1), (6, 6, 2, 4, 14)]
bestSolutionIndice: 8
8 -> costo: 77089.0, rotte: {9: [(1, 2), (2, 5)], 4: [(1, 2), (2, 10)], 3: [(1, 2), (2, 11)], 6: [(1, 4)], 8: [(1, 3), (3, 2)], 5: [(1, 2), (2, 9)], 7: [(1, 7), (7, 8)], 2: [(1, 6)]}, padri: [7, 9, 13, 13, 13], figli: [], mosse: [(4, 7, 1, 2, 1), (5, 7, 1, 2, 1), (9, 9, 5, 2), (9, 9, 1, 2, 12), (9, 9, 2, 5, 8)]
trasportoPalletDiGamma: {9: [(2, 12), (5, 8)], 4: [(2, 1), (10, 9)], 3: [(2, 4), (11, 6)], 6: [(4, 15)], 8: [(3, 18), (2, 2)], 5: [(2, 1), (9, 14)], 7: [(7, 1), (8, 18)], 2: [(6, 4)]}
itMosseLS: 37, itMosseTS: 30
time elapsed: 805.34s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 90802.0, rotte: {9: [(1, 11), (11, 5), (5, 3)], 8: [(1, 7), (7, 8), (8, 4)], 7: [(1, 6), (6, 2), (2, 4)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 9), (9, 3)], 3: [(1, 10), (10, 4)], 4: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 87404.4, rotte: {9: [(1, 11), (11, 5), (5, 3)], 8: [(1, 7), (7, 8), (8, 4)], 7: [(1, 6), (6, 2), (2, 4)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 9)], 3: [(1, 10), (10, 4)], 4: [(1, 4)]}, padri: [0], figli: [2], mosse: [(9, 5, 1, 3, 1)]
2 -> costo: 84336.0, rotte: {9: [(1, 5), (5, 3), (3, 11)], 8: [(1, 7), (7, 8), (8, 4)], 7: [(1, 6), (6, 2), (2, 4)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 9)], 3: [(1, 10), (10, 4)], 4: [(1, 4)]}, padri: [1], figli: [3], mosse: [(9, 9, 3, 11, 6)]
3 -> costo: 81355.49999999999, rotte: {9: [(1, 5), (5, 3), (3, 11)], 8: [(1, 7), (7, 8), (8, 4)], 7: [(1, 6), (6, 2), (2, 4)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 9)], 3: [(1, 4), (4, 10)], 4: [(1, 4)]}, padri: [2], figli: [4], mosse: [(3, 3, 10, 4)]
4 -> costo: 78847.29999999999, rotte: {9: [(1, 5), (5, 3), (3, 11)], 8: [(1, 7), (7, 8)], 7: [(1, 6), (6, 2), (2, 4)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 9)], 3: [(1, 4), (4, 10)], 4: [(1, 4)]}, padri: [3], figli: [5], mosse: [(7, 8, 1, 4, 1)]
5 -> costo: 78171.99999999999, rotte: {9: [(1, 5), (5, 3), (3, 11)], 8: [(1, 7), (7, 8)], 7: [(1, 2), (2, 4), (4, 6)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 9)], 3: [(1, 4), (4, 10)], 4: [(1, 4)]}, padri: [4], figli: [6], mosse: [(7, 7, 4, 6, 4)]
6 -> costo: 77841.4, rotte: {9: [(1, 5), (5, 3), (3, 11)], 8: [(1, 7), (7, 8)], 7: [(1, 2), (2, 4), (4, 6)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 9)], 3: [(1, 10)], 4: [(1, 4)]}, padri: [5], figli: [7, 12, 13, 14], mosse: [(7, 3, 1, 4, 1)]
7 -> costo: 77554.59999999999, rotte: {9: [(1, 5), (5, 3), (3, 11)], 8: [(1, 7), (7, 8)], 7: [(1, 4), (4, 2), (2, 6)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 9)], 3: [(1, 10)], 4: [(1, 4)]}, padri: [6], figli: [8, 9, 10, 11], mosse: [(7, 7, 4, 2, 10)]
8 -> costo: 77430.3, rotte: {9: [(1, 5), (5, 7), (7, 3), (3, 11)], 8: [(1, 8)], 7: [(1, 4), (4, 2), (2, 6)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 9)], 3: [(1, 10)], 4: [(1, 4)]}, padri: [7, 9, 10, 12], figli: [], mosse: [(9, 8, 5, 7, 1), (9, 3, 5, 7, 1), (9, 5, 5, 7, 1), (7, 7, 4, 2, 10)]
9 -> costo: 77461.0, rotte: {9: [(1, 5), (5, 3), (3, 11)], 8: [(1, 8)], 7: [(1, 4), (4, 2), (2, 6)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 9)], 3: [(1, 7), (7, 10)], 4: [(1, 4)]}, padri: [7, 10, 13], figli: [8], mosse: [(3, 8, 1, 7, 1), (3, 5, 1, 7, 1), (7, 7, 4, 2, 10)]
10 -> costo: 77512.3, rotte: {9: [(1, 5), (5, 3), (3, 11)], 8: [(1, 8)], 7: [(1, 4), (4, 2), (2, 6)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 7), (7, 9)], 3: [(1, 10)], 4: [(1, 4)]}, padri: [7, 14], figli: [8, 9], mosse: [(5, 8, 1, 7, 1), (7, 7, 4, 2, 10)]
11 -> costo: 77554.5, rotte: {9: [(1, 5), (5, 3), (3, 11)], 8: [(1, 8)], 7: [(1, 4), (4, 2), (2, 7), (7, 6)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 9)], 3: [(1, 10)], 4: [(1, 4)]}, padri: [7], figli: [], mosse: [(7, 8, 2, 7, 1)]
12 -> costo: 77717.09999999999, rotte: {9: [(1, 5), (5, 7), (7, 3), (3, 11)], 8: [(1, 8)], 7: [(1, 2), (2, 4), (4, 6)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 9)], 3: [(1, 10)], 4: [(1, 4)]}, padri: [6, 13, 14], figli: [8], mosse: [(9, 8, 5, 7, 1), (9, 3, 5, 7, 1), (9, 5, 5, 7, 1)]
13 -> costo: 77747.79999999999, rotte: {9: [(1, 5), (5, 3), (3, 11)], 8: [(1, 8)], 7: [(1, 2), (2, 4), (4, 6)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 9)], 3: [(1, 7), (7, 10)], 4: [(1, 4)]}, padri: [6, 14], figli: [9, 12], mosse: [(3, 8, 1, 7, 1), (3, 5, 1, 7, 1)]
14 -> costo: 77799.09999999999, rotte: {9: [(1, 5), (5, 3), (3, 11)], 8: [(1, 8)], 7: [(1, 2), (2, 4), (4, 6)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 7), (7, 9)], 3: [(1, 10)], 4: [(1, 4)]}, padri: [6], figli: [10, 12, 13], mosse: [(5, 8, 1, 7, 1)]
bestSolutionIndice: 8
8 -> costo: 77430.3, rotte: {9: [(1, 5), (5, 7), (7, 3), (3, 11)], 8: [(1, 8)], 7: [(1, 4), (4, 2), (2, 6)], 2: [(1, 2)], 6: [(1, 3)], 5: [(1, 9)], 3: [(1, 10)], 4: [(1, 4)]}, padri: [7, 9, 10, 12], figli: [], mosse: [(9, 8, 5, 7, 1), (9, 3, 5, 7, 1), (9, 5, 5, 7, 1), (7, 7, 4, 2, 10)]
trasportoPalletDiGamma: {9: [(5, 8), (7, 1), (3, 3), (11, 6)], 8: [(8, 18)], 7: [(4, 5), (2, 10), (6, 4)], 2: [(2, 10)], 6: [(3, 15)], 5: [(9, 14)], 3: [(10, 9)], 4: [(4, 10)]}
itMosseLS: 23, itMosseTS: 15
time elapsed: 484.29s.


##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
