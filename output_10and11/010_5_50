itNSIMax: 5, itMosseTSMax: 50.
##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88440.70000000001, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 10), (10, 5)], 9: [(1, 2)], 6: [(1, 11), (11, 3), (3, 8)], 8: [(1, 6), (6, 4), (4, 5), (5, 8)], 7: [(1, 7), (7, 9), (9, 8)], 3: [(1, 9)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85075.5, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 10), (10, 5)], 9: [(1, 2)], 6: [(1, 11), (11, 3), (3, 8)], 8: [(1, 4), (4, 5), (5, 6), (6, 8)], 7: [(1, 7), (7, 9), (9, 8)], 3: [(1, 9)]}, padri: [0], figli: [2], mosse: [(8, 8, 5, 6, 4)]
2 -> costo: 82244.8, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 10)], 9: [(1, 2)], 6: [(1, 11), (11, 3), (3, 8)], 8: [(1, 4), (4, 5), (5, 6), (6, 8)], 7: [(1, 7), (7, 9), (9, 8)], 3: [(1, 9)]}, padri: [1], figli: [3, 12, 16], mosse: [(8, 5, 1, 5, 6)]
3 -> costo: 79805.8, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 11), (11, 10)], 9: [(1, 2)], 6: [(1, 3), (3, 8)], 8: [(1, 4), (4, 5), (5, 6), (6, 8)], 7: [(1, 7), (7, 9), (9, 8)], 3: [(1, 9)]}, padri: [2, 12, 12, 12], figli: [4, 4, 4, 4, 7, 7, 7, 7, 7, 10, 10, 14, 14, 14, 14, 17, 17], mosse: [(5, 6, 1, 11, 6), (5, 5, 1, 11, 6), (5, 5, 11, 10, 9), (5, 5, 10, 11)]
4 -> costo: 78458.5, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 11), (11, 10)], 9: [(1, 2)], 6: [(1, 3)], 8: [(1, 4), (4, 5), (5, 6), (6, 8)], 7: [(1, 7), (7, 9), (9, 8)], 3: [(1, 9)]}, padri: [3, 3, 3, 3, 13, 13, 13], figli: [5, 11], mosse: [(8, 6, 1, 8, 1), (8, 6, 4, 8, 1), (8, 6, 5, 8, 1), (8, 6, 6, 8, 1), (5, 5, 1, 11, 6), (5, 5, 11, 10, 9), (5, 5, 10, 11)]
5 -> costo: 78316.5, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 11), (11, 10)], 9: [(1, 2)], 6: [(1, 3)], 8: [(1, 4), (4, 5), (5, 6), (6, 8)], 7: [(1, 8), (8, 7), (7, 9)], 3: [(1, 9)]}, padri: [4, 10, 10, 10, 10, 14, 14, 14], figli: [6], mosse: [(7, 7, 1, 8, 15), (8, 6, 1, 8, 1), (8, 6, 4, 8, 1), (8, 6, 5, 8, 1), (8, 6, 6, 8, 1), (5, 5, 1, 11, 6), (5, 5, 11, 10, 9), (5, 5, 10, 11)]
6 -> costo: 76983.7, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 11), (11, 10)], 9: [(1, 2)], 6: [(1, 3)], 8: [(1, 4), (4, 5), (5, 6), (6, 8)], 7: [(1, 7), (7, 8), (8, 9)], 3: [(1, 9)]}, padri: [5, 11, 11, 11, 11, 15, 15, 15], figli: [], mosse: [(7, 7, 7, 8, 15), (8, 6, 1, 8, 1), (8, 6, 4, 8, 1), (8, 6, 5, 8, 1), (8, 6, 6, 8, 1), (5, 5, 1, 11, 6), (5, 5, 11, 10, 9), (5, 5, 10, 11)]
7 -> costo: 79235.1, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 11), (11, 10)], 9: [(1, 2)], 6: [(1, 3), (3, 8)], 8: [(1, 4), (4, 5), (5, 6)], 7: [(1, 7), (7, 9), (9, 8)], 3: [(1, 9)]}, padri: [3, 3, 16, 16, 16], figli: [8], mosse: [(6, 8, 1, 8, 2), (6, 8, 3, 8, 2), (5, 5, 1, 11, 6), (5, 5, 11, 10, 9), (5, 5, 10, 11)]
8 -> costo: 79093.1, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 11), (11, 10)], 9: [(1, 2)], 6: [(1, 3), (3, 8)], 8: [(1, 4), (4, 5), (5, 6)], 7: [(1, 8), (8, 7), (7, 9)], 3: [(1, 9)]}, padri: [7, 10, 10, 17], figli: [9], mosse: [(7, 7, 1, 8, 15), (6, 8, 1, 8, 2), (6, 8, 3, 8, 2), (5, 5, 1, 11, 6)]
9 -> costo: 77760.30000000002, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 11), (11, 10)], 9: [(1, 2)], 6: [(1, 3), (3, 8)], 8: [(1, 4), (4, 5), (5, 6)], 7: [(1, 7), (7, 8), (8, 9)], 3: [(1, 9)]}, padri: [8, 11, 11, 18, 18, 18], figli: [], mosse: [(7, 7, 7, 8, 15), (6, 8, 1, 8, 2), (6, 8, 3, 8, 2), (5, 5, 1, 11, 6), (5, 5, 11, 10, 9), (5, 5, 10, 11)]
10 -> costo: 79663.8, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 11), (11, 10)], 9: [(1, 2)], 6: [(1, 3), (3, 8)], 8: [(1, 4), (4, 5), (5, 6), (6, 8)], 7: [(1, 8), (8, 7), (7, 9)], 3: [(1, 9)]}, padri: [3], figli: [5, 5, 5, 5, 11, 11, 11, 11, 8, 8], mosse: [(7, 7, 1, 8, 15)]
11 -> costo: 78331.00000000001, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 11), (11, 10)], 9: [(1, 2)], 6: [(1, 3), (3, 8)], 8: [(1, 4), (4, 5), (5, 6), (6, 8)], 7: [(1, 7), (7, 8), (8, 9)], 3: [(1, 9)]}, padri: [10], figli: [6, 6, 6, 6, 9, 9], mosse: [(7, 7, 7, 8, 15)]
12 -> costo: 80488.3, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 10), (10, 11)], 9: [(1, 2)], 6: [(1, 3), (3, 8)], 8: [(1, 4), (4, 5), (5, 6), (6, 8)], 7: [(1, 7), (7, 9), (9, 8)], 3: [(1, 9)]}, padri: [2], figli: [13, 13, 13, 13, 3, 3, 3, 16, 16, 16], mosse: [(5, 6, 10, 11, 6)]
13 -> costo: 79141.0, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 10), (10, 11)], 9: [(1, 2)], 6: [(1, 3)], 8: [(1, 4), (4, 5), (5, 6), (6, 8)], 7: [(1, 7), (7, 9), (9, 8)], 3: [(1, 9)]}, padri: [12, 12, 12, 12], figli: [4, 4, 4, 14, 14, 14], mosse: [(8, 6, 1, 8, 1), (8, 6, 4, 8, 1), (8, 6, 5, 8, 1), (8, 6, 6, 8, 1)]
14 -> costo: 78999.0, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 10), (10, 11)], 9: [(1, 2)], 6: [(1, 3)], 8: [(1, 4), (4, 5), (5, 6), (6, 8)], 7: [(1, 8), (8, 7), (7, 9)], 3: [(1, 9)]}, padri: [13], figli: [15, 5, 5, 5], mosse: [(7, 7, 1, 8, 15)]
15 -> costo: 77666.20000000001, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 10), (10, 11)], 9: [(1, 2)], 6: [(1, 3)], 8: [(1, 4), (4, 5), (5, 6), (6, 8)], 7: [(1, 7), (7, 8), (8, 9)], 3: [(1, 9)]}, padri: [14], figli: [6, 6, 6], mosse: [(7, 7, 7, 8, 15)]
16 -> costo: 79917.6, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 10), (10, 11)], 9: [(1, 2)], 6: [(1, 3), (3, 8)], 8: [(1, 4), (4, 5), (5, 6)], 7: [(1, 7), (7, 9), (9, 8)], 3: [(1, 9)]}, padri: [12], figli: [7, 7, 7, 17, 17, 17], mosse: [(6, 8, 1, 8, 2)]
17 -> costo: 79775.6, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 10), (10, 11)], 9: [(1, 2)], 6: [(1, 3), (3, 8)], 8: [(1, 4), (4, 5), (5, 6)], 7: [(1, 8), (8, 7), (7, 9)], 3: [(1, 9)]}, padri: [16], figli: [18, 8], mosse: [(7, 7, 1, 8, 15)]
18 -> costo: 78442.80000000002, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 10), (10, 11)], 9: [(1, 2)], 6: [(1, 3), (3, 8)], 8: [(1, 4), (4, 5), (5, 6)], 7: [(1, 7), (7, 8), (8, 9)], 3: [(1, 9)]}, padri: [17], figli: [9, 9, 9], mosse: [(7, 7, 7, 8, 15)]
bestSolutionIndice: 6
6 -> costo: 76983.7, rotte: {4: [(1, 3)], 2: [(1, 4)], 5: [(1, 11), (11, 10)], 9: [(1, 2)], 6: [(1, 3)], 8: [(1, 4), (4, 5), (5, 6), (6, 8)], 7: [(1, 7), (7, 8), (8, 9)], 3: [(1, 9)]}, padri: [5, 11, 11, 11, 11, 15, 15, 15], figli: [], mosse: [(7, 7, 7, 8, 15), (8, 6, 1, 8, 1), (8, 6, 4, 8, 1), (8, 6, 5, 8, 1), (8, 6, 6, 8, 1), (5, 5, 1, 11, 6), (5, 5, 11, 10, 9), (5, 5, 10, 11)]
trasportoPalletDiGamma: {4: [(3, 10)], 2: [(4, 10)], 5: [(11, 6), (10, 9)], 9: [(2, 20)], 6: [(3, 8)], 8: [(4, 5), (5, 8), (6, 4), (8, 3)], 7: [(7, 1), (8, 15), (9, 4)], 3: [(9, 10)]}
itMosseLS: 56, itMosseTS: 50
time elapsed: 1239.47s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 87391.6, rotte: {5: [(1, 7), (7, 6), (6, 11)], 2: [(1, 10), (10, 11)], 7: [(1, 8), (8, 4)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 9), (9, 4)], 4: [(1, 5), (5, 11)], 9: [(1, 3), (3, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 84250.90000000001, rotte: {5: [(1, 7), (7, 6), (6, 11)], 2: [(1, 10), (10, 11)], 7: [(1, 8), (8, 4)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 9), (9, 4)], 4: [(1, 5)], 9: [(1, 3), (3, 4)]}, padri: [0], figli: [2], mosse: [(5, 4, 1, 11, 2)]
2 -> costo: 81410.2, rotte: {5: [(1, 7), (7, 6), (6, 11)], 2: [(1, 10), (10, 11)], 7: [(1, 8), (8, 4)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 4), (4, 9)], 4: [(1, 5)], 9: [(1, 3), (3, 4)]}, padri: [1], figli: [3], mosse: [(6, 6, 9, 4)]
3 -> costo: 79506.2, rotte: {5: [(1, 7), (7, 6), (6, 11)], 2: [(1, 10)], 7: [(1, 8), (8, 4)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 4), (4, 9)], 4: [(1, 5)], 9: [(1, 3), (3, 4)]}, padri: [2], figli: [4, 4, 4, 16, 16, 16], mosse: [(5, 2, 1, 11, 1)]
4 -> costo: 78186.7, rotte: {5: [(1, 7), (7, 6), (6, 11)], 2: [(1, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 4), (4, 9)], 4: [(1, 5)], 9: [(1, 3), (3, 4)]}, padri: [3, 3, 3], figli: [5, 11, 13, 15, 15, 15, 17], mosse: [(7, 7, 8, 4), (7, 7, 1, 4, 2), (7, 7, 4, 8, 18)]
5 -> costo: 77412.90000000001, rotte: {5: [(1, 7), (7, 6), (6, 11)], 2: [(1, 4), (4, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 9)], 4: [(1, 5)], 9: [(1, 3), (3, 4)]}, padri: [4, 16, 16, 16], figli: [6, 8, 8, 8, 10, 10, 10, 12, 18], mosse: [(2, 6, 1, 4, 1), (7, 7, 8, 4), (7, 7, 1, 4, 2), (7, 7, 4, 8, 18)]
6 -> costo: 76999.80000000002, rotte: {5: [(1, 6), (6, 7), (7, 11)], 2: [(1, 4), (4, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 9)], 4: [(1, 5)], 9: [(1, 3), (3, 4)]}, padri: [5, 10, 11, 17, 17, 17], figli: [7, 7, 7, 9, 9, 9], mosse: [(5, 5, 6, 7, 1), (5, 6, 6, 7, 1), (2, 6, 1, 4, 1), (7, 7, 8, 4), (7, 7, 1, 4, 2), (7, 7, 4, 8, 18)]
7 -> costo: 76703.50000000001, rotte: {5: [(1, 6), (6, 7), (7, 11)], 2: [(1, 4), (4, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 9)], 4: [(1, 5)], 9: [(1, 4), (4, 3)]}, padri: [6, 6, 6, 8, 9, 12, 18, 18, 18], figli: [], mosse: [(9, 9, 1, 4, 2), (9, 9, 4, 3, 18), (9, 9, 3, 4), (5, 5, 6, 7, 1), (5, 6, 6, 7, 1), (2, 6, 1, 4, 1), (7, 7, 8, 4), (7, 7, 1, 4, 2), (7, 7, 4, 8, 18)]
8 -> costo: 77116.6, rotte: {5: [(1, 7), (7, 6), (6, 11)], 2: [(1, 4), (4, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 9)], 4: [(1, 5)], 9: [(1, 4), (4, 3)]}, padri: [5, 5, 5, 15, 19], figli: [7, 9], mosse: [(9, 9, 1, 4, 2), (9, 9, 4, 3, 18), (9, 9, 3, 4), (2, 6, 1, 4, 1), (7, 7, 8, 4)]
9 -> costo: 76865.0, rotte: {5: [(1, 6), (6, 11)], 2: [(1, 4), (4, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 7), (7, 9)], 4: [(1, 5)], 9: [(1, 4), (4, 3)]}, padri: [8, 10, 10, 10], figli: [7], mosse: [(6, 5, 1, 7, 1), (9, 9, 1, 4, 2), (9, 9, 4, 3, 18), (9, 9, 3, 4)]
10 -> costo: 77161.3, rotte: {5: [(1, 6), (6, 11)], 2: [(1, 4), (4, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 7), (7, 9)], 4: [(1, 5)], 9: [(1, 3), (3, 4)]}, padri: [5], figli: [9, 9, 9, 6, 12, 18], mosse: [(6, 5, 1, 7, 1)]
11 -> costo: 77773.6, rotte: {5: [(1, 6), (6, 7), (7, 11)], 2: [(1, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 4), (4, 9)], 4: [(1, 5)], 9: [(1, 3), (3, 4)]}, padri: [4, 13], figli: [6, 12, 12, 12, 18], mosse: [(5, 5, 6, 7, 1), (5, 2, 6, 7, 1)]
12 -> costo: 77477.3, rotte: {5: [(1, 6), (6, 7), (7, 11)], 2: [(1, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 4), (4, 9)], 4: [(1, 5)], 9: [(1, 4), (4, 3)]}, padri: [11, 11, 11, 14, 15], figli: [7], mosse: [(9, 9, 1, 4, 2), (9, 9, 4, 3, 18), (9, 9, 3, 4), (5, 2, 6, 7, 1), (5, 5, 6, 7, 1)]
13 -> costo: 77883.8, rotte: {5: [(1, 6), (6, 11)], 2: [(1, 7), (7, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 4), (4, 9)], 4: [(1, 5)], 9: [(1, 3), (3, 4)]}, padri: [4], figli: [14, 14, 14, 11], mosse: [(2, 5, 1, 7, 1)]
14 -> costo: 77587.5, rotte: {5: [(1, 6), (6, 11)], 2: [(1, 7), (7, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 4), (4, 9)], 4: [(1, 5)], 9: [(1, 4), (4, 3)]}, padri: [13, 13, 13, 15], figli: [12], mosse: [(9, 9, 1, 4, 2), (9, 9, 4, 3, 18), (9, 9, 3, 4), (2, 5, 1, 7, 1)]
15 -> costo: 77890.4, rotte: {5: [(1, 7), (7, 6), (6, 11)], 2: [(1, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 4), (4, 9)], 4: [(1, 5)], 9: [(1, 4), (4, 3)]}, padri: [4, 4, 4], figli: [8, 12, 14], mosse: [(9, 9, 1, 4, 2), (9, 9, 4, 3, 18), (9, 9, 3, 4)]
16 -> costo: 78732.40000000001, rotte: {5: [(1, 7), (7, 6), (6, 11)], 2: [(1, 4), (4, 10)], 7: [(1, 8), (8, 4)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 9)], 4: [(1, 5)], 9: [(1, 3), (3, 4)]}, padri: [3], figli: [5, 5, 5, 17, 17, 17, 19], mosse: [(2, 6, 1, 4, 1)]
17 -> costo: 78319.3, rotte: {5: [(1, 6), (6, 7), (7, 11)], 2: [(1, 4), (4, 10)], 7: [(1, 8), (8, 4)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 9)], 4: [(1, 5)], 9: [(1, 3), (3, 4)]}, padri: [16], figli: [6, 6, 6, 18, 18, 18, 18, 18], mosse: [(5, 5, 6, 7, 1)]
18 -> costo: 78023.0, rotte: {5: [(1, 6), (6, 7), (7, 11)], 2: [(1, 4), (4, 10)], 7: [(1, 8), (8, 4)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 9)], 4: [(1, 5)], 9: [(1, 4), (4, 3)]}, padri: [17, 17, 17], figli: [7, 7, 7], mosse: [(9, 9, 1, 4, 2), (9, 9, 4, 3, 18), (9, 9, 3, 4)]
19 -> costo: 78436.1, rotte: {5: [(1, 7), (7, 6), (6, 11)], 2: [(1, 4), (4, 10)], 7: [(1, 8), (8, 4)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 9)], 4: [(1, 5)], 9: [(1, 4), (4, 3)]}, padri: [16], figli: [8], mosse: [(9, 9, 1, 4, 2)]
bestSolutionIndice: 7
7 -> costo: 76703.50000000001, rotte: {5: [(1, 6), (6, 7), (7, 11)], 2: [(1, 4), (4, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 4)], 8: [(1, 2)], 6: [(1, 9)], 4: [(1, 5)], 9: [(1, 4), (4, 3)]}, padri: [6, 6, 6, 8, 9, 12, 18, 18, 18], figli: [], mosse: [(9, 9, 1, 4, 2), (9, 9, 4, 3, 18), (9, 9, 3, 4), (5, 5, 6, 7, 1), (5, 6, 6, 7, 1), (2, 6, 1, 4, 1), (7, 7, 8, 4), (7, 7, 1, 4, 2), (7, 7, 4, 8, 18)]
trasportoPalletDiGamma: {5: [(6, 4), (7, 1), (11, 6)], 2: [(4, 1), (10, 9)], 7: [(4, 2), (8, 18)], 3: [(4, 10)], 8: [(2, 20)], 6: [(9, 14)], 4: [(5, 8)], 9: [(4, 2), (3, 18)]}
itMosseLS: 56, itMosseTS: 50
time elapsed: 1500.95s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 90115.19999999998, rotte: {3: [(1, 4)], 8: [(1, 8), (8, 9)], 9: [(1, 10), (10, 7), (7, 3), (3, 9)], 7: [(1, 2)], 2: [(1, 6), (6, 3)], 6: [(1, 11), (11, 9)], 5: [(1, 5), (5, 4), (4, 9)], 4: [(1, 3)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86142.29999999999, rotte: {3: [(1, 4)], 8: [(1, 8), (8, 9)], 9: [(1, 7), (7, 3), (3, 10), (10, 9)], 7: [(1, 2)], 2: [(1, 6), (6, 3)], 6: [(1, 11), (11, 9)], 5: [(1, 5), (5, 4), (4, 9)], 4: [(1, 3)]}, padri: [0], figli: [2, 2], mosse: [(9, 9, 3, 10, 9)]
2 -> costo: 83933.2, rotte: {3: [(1, 4)], 8: [(1, 8), (8, 9)], 9: [(1, 7), (7, 3), (3, 10), (10, 9)], 7: [(1, 2)], 2: [(1, 6)], 6: [(1, 11), (11, 9)], 5: [(1, 5), (5, 4), (4, 9)], 4: [(1, 3)]}, padri: [1, 1], figli: [3, 11, 13], mosse: [(9, 2, 1, 3, 6), (9, 2, 7, 3, 6)]
3 -> costo: 82997.5, rotte: {3: [(1, 4)], 8: [(1, 8), (8, 9)], 9: [(1, 3), (3, 10), (10, 9)], 7: [(1, 2)], 2: [(1, 7), (7, 6)], 6: [(1, 11), (11, 9)], 5: [(1, 5), (5, 4), (4, 9)], 4: [(1, 3)]}, padri: [2, 11, 11, 11], figli: [4, 9, 9, 9], mosse: [(2, 9, 1, 7, 1), (2, 2, 6, 7), (2, 2, 1, 7, 1), (2, 2, 7, 6, 4)]
4 -> costo: 80540.9, rotte: {3: [(1, 4)], 8: [(1, 8), (8, 9)], 9: [(1, 3), (3, 10), (10, 9)], 7: [(1, 2)], 2: [(1, 7), (7, 6)], 6: [(1, 11), (11, 9)], 5: [(1, 4), (4, 5), (5, 9)], 4: [(1, 3)]}, padri: [3], figli: [5, 5, 5, 8, 8, 8, 10, 10, 10], mosse: [(5, 5, 4, 5, 8)]
5 -> costo: 79203.79999999999, rotte: {3: [(1, 4)], 8: [(1, 8)], 9: [(1, 3), (3, 10), (10, 9)], 7: [(1, 2)], 2: [(1, 7), (7, 6)], 6: [(1, 11), (11, 9)], 5: [(1, 4), (4, 5), (5, 9)], 4: [(1, 3)]}, padri: [4, 4, 4, 9], figli: [6, 7], mosse: [(9, 8, 1, 9, 2), (9, 8, 3, 9, 2), (9, 8, 10, 9, 2), (5, 5, 4, 5, 8)]
6 -> costo: 78994.49999999999, rotte: {3: [(1, 4)], 8: [(1, 7), (7, 8)], 9: [(1, 3), (3, 10), (10, 9)], 7: [(1, 2)], 2: [(1, 6)], 6: [(1, 11), (11, 9)], 5: [(1, 4), (4, 5), (5, 9)], 4: [(1, 3)]}, padri: [5], figli: [], mosse: [(8, 2, 1, 7, 1)]
7 -> costo: 79193.40000000001, rotte: {3: [(1, 4)], 8: [(1, 8)], 9: [(1, 3), (3, 10), (10, 9)], 7: [(1, 2)], 2: [(1, 4), (4, 7), (7, 6)], 6: [(1, 11), (11, 9)], 5: [(1, 5), (5, 9)], 4: [(1, 3)]}, padri: [5, 8, 8, 8], figli: [], mosse: [(2, 5, 1, 4, 5), (9, 8, 1, 9, 2), (9, 8, 3, 9, 2), (9, 8, 10, 9, 2)]
8 -> costo: 80530.5, rotte: {3: [(1, 4)], 8: [(1, 8), (8, 9)], 9: [(1, 3), (3, 10), (10, 9)], 7: [(1, 2)], 2: [(1, 4), (4, 7), (7, 6)], 6: [(1, 11), (11, 9)], 5: [(1, 5), (5, 9)], 4: [(1, 3)]}, padri: [4], figli: [7, 7, 7], mosse: [(2, 5, 1, 4, 5)]
9 -> costo: 81660.4, rotte: {3: [(1, 4)], 8: [(1, 8)], 9: [(1, 3), (3, 10), (10, 9)], 7: [(1, 2)], 2: [(1, 7), (7, 6)], 6: [(1, 11), (11, 9)], 5: [(1, 5), (5, 4), (4, 9)], 4: [(1, 3)]}, padri: [3, 3, 3, 12, 12, 12], figli: [5, 10], mosse: [(9, 8, 1, 9, 2), (9, 8, 3, 9, 2), (9, 8, 10, 9, 2), (2, 2, 6, 7), (2, 2, 1, 7, 1), (2, 2, 7, 6, 4)]
10 -> costo: 81451.09999999999, rotte: {3: [(1, 4)], 8: [(1, 7), (7, 8)], 9: [(1, 3), (3, 10), (10, 9)], 7: [(1, 2)], 2: [(1, 6)], 6: [(1, 11), (11, 9)], 5: [(1, 5), (5, 4), (4, 9)], 4: [(1, 3)]}, padri: [9], figli: [], mosse: [(8, 2, 1, 7, 1)]
11 -> costo: 83257.8, rotte: {3: [(1, 4)], 8: [(1, 8), (8, 9)], 9: [(1, 3), (3, 10), (10, 9)], 7: [(1, 2)], 2: [(1, 6), (6, 7)], 6: [(1, 11), (11, 9)], 5: [(1, 5), (5, 4), (4, 9)], 4: [(1, 3)]}, padri: [2], figli: [12, 12, 12, 3, 3, 3], mosse: [(2, 9, 6, 7, 1)]
12 -> costo: 81920.7, rotte: {3: [(1, 4)], 8: [(1, 8)], 9: [(1, 3), (3, 10), (10, 9)], 7: [(1, 2)], 2: [(1, 6), (6, 7)], 6: [(1, 11), (11, 9)], 5: [(1, 5), (5, 4), (4, 9)], 4: [(1, 3)]}, padri: [11, 11, 11], figli: [9, 9, 9], mosse: [(9, 8, 1, 9, 2), (9, 8, 3, 9, 2), (9, 8, 10, 9, 2)]
13 -> costo: 83832.9, rotte: {3: [(1, 4)], 8: [(1, 8), (8, 9)], 9: [(1, 3), (3, 7), (7, 10), (10, 9)], 7: [(1, 2)], 2: [(1, 6)], 6: [(1, 11), (11, 9)], 5: [(1, 5), (5, 4), (4, 9)], 4: [(1, 3)]}, padri: [2], figli: [14, 14], mosse: [(9, 9, 3, 7, 1)]
14 -> costo: 83755.09999999999, rotte: {3: [(1, 4)], 8: [(1, 8), (8, 9)], 9: [(1, 3), (3, 7), (7, 9), (9, 10)], 7: [(1, 2)], 2: [(1, 6)], 6: [(1, 11), (11, 9)], 5: [(1, 5), (5, 4), (4, 9)], 4: [(1, 3)]}, padri: [13, 13], figli: [], mosse: [(9, 9, 7, 9, 1), (9, 9, 9, 10, 9)]
bestSolutionIndice: 6
6 -> costo: 78994.49999999999, rotte: {3: [(1, 4)], 8: [(1, 7), (7, 8)], 9: [(1, 3), (3, 10), (10, 9)], 7: [(1, 2)], 2: [(1, 6)], 6: [(1, 11), (11, 9)], 5: [(1, 4), (4, 5), (5, 9)], 4: [(1, 3)]}, padri: [5], figli: [], mosse: [(8, 2, 1, 7, 1)]
trasportoPalletDiGamma: {3: [(4, 10)], 8: [(7, 1), (8, 18)], 9: [(3, 8), (10, 9), (9, 3)], 7: [(2, 20)], 2: [(6, 4)], 6: [(11, 6), (9, 9)], 5: [(4, 5), (5, 8), (9, 2)], 4: [(3, 10)]}
itMosseLS: 32, itMosseTS: 31
time elapsed: 874.20s.


##########################################################################################
##########################################################################################
