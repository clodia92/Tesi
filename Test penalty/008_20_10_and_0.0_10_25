itNSIMax: 20, itMosseTSMax: 10, beta: 0.0, penalty: 10%, uk2Increased: 25%.
##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 156106.4, rotte: {5: [(1, 7), (7, 3)], 11: [(1, 5), (5, 4)], 3: [(1, 6)], 2: [(1, 2)], 9: [(1, 8), (8, 9), (9, 3)], 6: [(1, 3)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 6), (6, 3)], 4: [(1, 2), (2, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 139161.78, rotte: {5: [(1, 3)], 11: [(1, 5), (5, 4)], 3: [(1, 6)], 2: [(1, 2)], 9: [(1, 8), (8, 9), (9, 3)], 6: [(1, 3)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 6), (6, 7)], 4: [(1, 2), (2, 4)]}, padri: [0], figli: [2], mosse: [(5, 10, 7, 3)], infeasibleK2: [10]
2 -> costo: 129594.18, rotte: {5: [(1, 9)], 11: [(1, 5), (5, 4)], 3: [(1, 6)], 2: [(1, 2)], 9: [(1, 8), (8, 3)], 6: [(1, 3)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 6), (6, 7)], 4: [(1, 2), (2, 4)]}, padri: [1], figli: [3], mosse: [(5, 9, 3, 9)], infeasibleK2: [10]
3 -> costo: 123101.45000000001, rotte: {5: [(1, 9)], 11: [(1, 4)], 3: [(1, 6)], 2: [(1, 2)], 9: [(1, 8), (8, 3)], 6: [(1, 3)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 6), (6, 5), (5, 7)], 4: [(1, 2), (2, 4)]}, padri: [2], figli: [4], mosse: [(10, 11, 6, 5, 5)], infeasibleK2: [10]
4 -> costo: 120348.65000000001, rotte: {5: [(1, 9)], 11: [(1, 4)], 3: [(1, 6)], 2: [(1, 2)], 9: [(1, 8), (8, 3)], 6: [(1, 3)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 6), (6, 5), (5, 7)], 4: [(1, 2)]}, padri: [3], figli: [5, 8], mosse: [(7, 4, 1, 4, 3)], infeasibleK2: [10]
5 -> costo: 117036.38, rotte: {5: [(1, 9)], 11: [(1, 4)], 3: [(1, 7)], 2: [(1, 2)], 9: [(1, 8), (8, 3)], 6: [(1, 3)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 6), (6, 5)], 4: [(1, 2)]}, padri: [4], figli: [6, 7], mosse: [(3, 10, 6, 7)], infeasibleK2: [10]
6 -> costo: 116287.57999999999, rotte: {5: [(1, 9)], 11: [(1, 4)], 3: [(1, 7)], 2: [(1, 2)], 9: [(1, 8)], 6: [(1, 3)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 6), (6, 5)], 4: [(1, 2)]}, padri: [5], figli: [], mosse: [(6, 9, 1, 3, 7)], infeasibleK2: [10]
7 -> costo: 114790.20000000001, rotte: {5: [(1, 9)], 11: [(1, 4)], 3: [(1, 7)], 2: [(1, 2)], 9: [(1, 3)], 6: [(1, 8)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 6), (6, 5)], 4: [(1, 2)]}, padri: [5, 15], figli: [], mosse: [(9, 6, 8, 3), (10, 10, 1, 6, 14)], infeasibleK2: []
8 -> costo: 117261.80000000002, rotte: {5: [(1, 9)], 11: [(1, 4)], 3: [(1, 6)], 2: [(1, 2)], 9: [(1, 8), (8, 3)], 6: [(1, 3)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 5), (5, 7)], 4: [(1, 2)]}, padri: [4], figli: [9, 12], mosse: [(3, 10, 1, 6, 9)], infeasibleK2: []
9 -> costo: 115539.0, rotte: {5: [(1, 9)], 11: [(1, 4)], 3: [(1, 6), (6, 5)], 2: [(1, 2)], 9: [(1, 8), (8, 3)], 6: [(1, 3)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 7)], 4: [(1, 2)]}, padri: [8], figli: [10, 11], mosse: [(3, 10, 6, 5, 5)], infeasibleK2: []
10 -> costo: 114790.20000000001, rotte: {5: [(1, 9)], 11: [(1, 4)], 3: [(1, 6), (6, 5)], 2: [(1, 2)], 9: [(1, 8)], 6: [(1, 3)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 7)], 4: [(1, 2)]}, padri: [9], figli: [], mosse: [(6, 9, 1, 3, 7)], infeasibleK2: []
11 -> costo: 114790.20000000001, rotte: {5: [(1, 9)], 11: [(1, 4)], 3: [(1, 6), (6, 5)], 2: [(1, 2)], 9: [(1, 3)], 6: [(1, 8)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 7)], 4: [(1, 2)]}, padri: [9], figli: [], mosse: [(9, 6, 8, 3)], infeasibleK2: []
12 -> costo: 115735.7, rotte: {5: [(1, 9)], 11: [(1, 4)], 3: [(1, 7)], 2: [(1, 2)], 9: [(1, 8), (8, 3)], 6: [(1, 3)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 5), (5, 6)], 4: [(1, 2)]}, padri: [8], figli: [13, 15], mosse: [(3, 10, 6, 7)], infeasibleK2: []
13 -> costo: 114986.9, rotte: {5: [(1, 9)], 11: [(1, 4)], 3: [(1, 7)], 2: [(1, 2)], 9: [(1, 8)], 6: [(1, 3)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 5), (5, 6)], 4: [(1, 2)]}, padri: [12], figli: [14, 14, 14], mosse: [(6, 9, 1, 3, 7)], infeasibleK2: []
14 -> costo: 114790.2, rotte: {5: [(1, 9)], 11: [(1, 4)], 3: [(1, 7)], 2: [(1, 2)], 9: [(1, 8)], 6: [(1, 3)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 6), (6, 5)], 4: [(1, 2)]}, padri: [13, 13, 13], figli: [], mosse: [(10, 10, 1, 6, 14), (10, 10, 6, 5, 5), (10, 10, 5, 6)], infeasibleK2: []
15 -> costo: 114986.90000000001, rotte: {5: [(1, 9)], 11: [(1, 4)], 3: [(1, 7)], 2: [(1, 2)], 9: [(1, 3)], 6: [(1, 8)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 5), (5, 6)], 4: [(1, 2)]}, padri: [12], figli: [7], mosse: [(9, 6, 8, 3)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 156106.4, rotte: {5: [(1, 7), (7, 3)], 11: [(1, 5), (5, 4)], 3: [(1, 6)], 2: [(1, 2)], 9: [(1, 8), (8, 9), (9, 3)], 6: [(1, 3)], 7: [(1, 4)], 8: [(1, 9)], 10: [(1, 6), (6, 3)], 4: [(1, 2), (2, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {5: [(7, 3), (3, 2)], 11: [(5, 5), (4, 10)], 3: [(6, 5)], 2: [(2, 5)], 9: [(8, 1), (9, 3), (3, 4)], 6: [(3, 5)], 7: [(4, 5)], 8: [(9, 5)], 10: [(6, 9), (3, 1)], 4: [(2, 1), (4, 3)]}
itMosseLS: 18, itMosseTS: 10
time elapsed: 96.13s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 149475.90000000002, rotte: {5: [(1, 3)], 9: [(1, 4)], 2: [(1, 8), (8, 2), (2, 6)], 7: [(1, 5)], 11: [(1, 7), (7, 9), (9, 6)], 6: [(1, 2)], 3: [(1, 6)], 4: [(1, 9)], 8: [(1, 3)], 10: [(1, 4), (4, 3)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 132561.0, rotte: {5: [(1, 3)], 9: [(1, 4)], 2: [(1, 8), (8, 2), (2, 7)], 7: [(1, 5)], 11: [(1, 9), (9, 6)], 6: [(1, 2)], 3: [(1, 6)], 4: [(1, 9)], 8: [(1, 3)], 10: [(1, 4), (4, 3)]}, padri: [0], figli: [2], mosse: [(2, 11, 6, 7)], infeasibleK2: []
2 -> costo: 125981.80000000002, rotte: {5: [(1, 3)], 9: [(1, 3)], 2: [(1, 8), (8, 2), (2, 7)], 7: [(1, 5)], 11: [(1, 9), (9, 6)], 6: [(1, 2)], 3: [(1, 6)], 4: [(1, 9)], 8: [(1, 3)], 10: [(1, 4)]}, padri: [1], figli: [3], mosse: [(9, 10, 4, 3)], infeasibleK2: []
3 -> costo: 119423.40000000001, rotte: {5: [(1, 3)], 9: [(1, 3)], 2: [(1, 8), (8, 2), (2, 7)], 7: [(1, 5)], 11: [(1, 9)], 6: [(1, 2)], 3: [(1, 6)], 4: [(1, 9)], 8: [(1, 3)], 10: [(1, 4)]}, padri: [2], figli: [4], mosse: [(3, 11, 1, 6, 9)], infeasibleK2: []
4 -> costo: 116739.5, rotte: {5: [(1, 3)], 9: [(1, 3)], 2: [(1, 2), (2, 7)], 7: [(1, 5)], 11: [(1, 9)], 6: [(1, 8)], 3: [(1, 6)], 4: [(1, 9)], 8: [(1, 3)], 10: [(1, 4)]}, padri: [3], figli: [5, 12], mosse: [(2, 6, 8, 2)], infeasibleK2: []
5 -> costo: 113781.9, rotte: {5: [(1, 3)], 9: [(1, 3)], 2: [(1, 5), (5, 7)], 7: [(1, 2)], 11: [(1, 9)], 6: [(1, 8)], 3: [(1, 6)], 4: [(1, 9)], 8: [(1, 3)], 10: [(1, 4)]}, padri: [4], figli: [6, 7, 11], mosse: [(2, 7, 2, 5)], infeasibleK2: []
6 -> costo: 112059.09999999999, rotte: {5: [(1, 3)], 9: [(1, 3)], 2: [(1, 7)], 7: [(1, 2)], 11: [(1, 9)], 6: [(1, 8)], 3: [(1, 6), (6, 5)], 4: [(1, 9)], 8: [(1, 3)], 10: [(1, 4)]}, padri: [5, 11, 11, 11], figli: [], mosse: [(3, 2, 6, 5, 5), (3, 3, 1, 6, 14), (3, 3, 6, 5, 5), (3, 3, 5, 6)], infeasibleK2: []
7 -> costo: 112255.8, rotte: {5: [(1, 3)], 9: [(1, 3)], 2: [(1, 5), (5, 6)], 7: [(1, 2)], 11: [(1, 9)], 6: [(1, 8)], 3: [(1, 7)], 4: [(1, 9)], 8: [(1, 3)], 10: [(1, 4)]}, padri: [5], figli: [8, 9, 10], mosse: [(2, 3, 7, 6)], infeasibleK2: []
8 -> costo: 112059.09999999999, rotte: {5: [(1, 3)], 9: [(1, 3)], 2: [(1, 6), (6, 5)], 7: [(1, 2)], 11: [(1, 9)], 6: [(1, 8)], 3: [(1, 7)], 4: [(1, 9)], 8: [(1, 3)], 10: [(1, 4)]}, padri: [7], figli: [], mosse: [(2, 2, 1, 6, 14)], infeasibleK2: []
9 -> costo: 112059.09999999999, rotte: {5: [(1, 3)], 9: [(1, 3)], 2: [(1, 6), (6, 5)], 7: [(1, 2)], 11: [(1, 9)], 6: [(1, 8)], 3: [(1, 7)], 4: [(1, 9)], 8: [(1, 3)], 10: [(1, 4)]}, padri: [7], figli: [], mosse: [(2, 2, 6, 5, 5)], infeasibleK2: []
10 -> costo: 112059.09999999999, rotte: {5: [(1, 3)], 9: [(1, 3)], 2: [(1, 6), (6, 5)], 7: [(1, 2)], 11: [(1, 9)], 6: [(1, 8)], 3: [(1, 7)], 4: [(1, 9)], 8: [(1, 3)], 10: [(1, 4)]}, padri: [7], figli: [], mosse: [(2, 2, 5, 6)], infeasibleK2: []
11 -> costo: 112255.79999999999, rotte: {5: [(1, 3)], 9: [(1, 3)], 2: [(1, 7)], 7: [(1, 2)], 11: [(1, 9)], 6: [(1, 8)], 3: [(1, 5), (5, 6)], 4: [(1, 9)], 8: [(1, 3)], 10: [(1, 4)]}, padri: [5], figli: [6, 6, 6], mosse: [(3, 2, 1, 5, 5)], infeasibleK2: []
12 -> costo: 114468.90000000001, rotte: {5: [(1, 3)], 9: [(1, 3)], 2: [(1, 6), (6, 7)], 7: [(1, 5)], 11: [(1, 9)], 6: [(1, 8)], 3: [(1, 2)], 4: [(1, 9)], 8: [(1, 3)], 10: [(1, 4)]}, padri: [4], figli: [13], mosse: [(2, 3, 2, 6)], infeasibleK2: []
13 -> costo: 112059.1, rotte: {5: [(1, 3)], 9: [(1, 3)], 2: [(1, 6), (6, 5)], 7: [(1, 7)], 11: [(1, 9)], 6: [(1, 8)], 3: [(1, 2)], 4: [(1, 9)], 8: [(1, 3)], 10: [(1, 4)]}, padri: [12], figli: [], mosse: [(2, 7, 7, 5)], infeasibleK2: []
bestSolutionIndice: 1
1 -> costo: 132561.0, rotte: {5: [(1, 3)], 9: [(1, 4)], 2: [(1, 8), (8, 2), (2, 7)], 7: [(1, 5)], 11: [(1, 9), (9, 6)], 6: [(1, 2)], 3: [(1, 6)], 4: [(1, 9)], 8: [(1, 3)], 10: [(1, 4), (4, 3)]}, padri: [0], figli: [2], mosse: [(2, 11, 6, 7)], infeasibleK2: []
trasportoPalletDiGamma: {5: [(3, 5)], 9: [(4, 10)], 2: [(8, 1), (2, 1), (7, 3)], 7: [(5, 5)], 11: [(9, 3), (6, 9)], 6: [(2, 5)], 3: [(6, 5)], 4: [(9, 5)], 8: [(3, 5)], 10: [(4, 8), (3, 2)]}
itMosseLS: 16, itMosseTS: 10
time elapsed: 90.62s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 141882.5, rotte: {9: [(1, 7), (7, 9), (9, 3)], 8: [(1, 4)], 5: [(1, 6)], 7: [(1, 8), (8, 3)], 11: [(1, 2), (2, 4)], 4: [(1, 9)], 2: [(1, 3)], 10: [(1, 5), (5, 6)], 6: [(1, 4)], 3: [(1, 6)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 129235.9, rotte: {9: [(1, 9), (9, 3)], 8: [(1, 4)], 5: [(1, 6)], 7: [(1, 8), (8, 3)], 11: [(1, 2), (2, 4)], 4: [(1, 9)], 2: [(1, 3)], 10: [(1, 5), (5, 6)], 6: [(1, 4)], 3: [(1, 6), (6, 7)]}, padri: [0], figli: [2], mosse: [(3, 9, 6, 7, 3)], infeasibleK2: []
2 -> costo: 124807.70000000001, rotte: {9: [(1, 3)], 8: [(1, 4)], 5: [(1, 6)], 7: [(1, 8), (8, 3)], 11: [(1, 2), (2, 4)], 4: [(1, 9)], 2: [(1, 9)], 10: [(1, 5), (5, 6)], 6: [(1, 4)], 3: [(1, 6), (6, 7)]}, padri: [1], figli: [3], mosse: [(9, 2, 9, 3)], infeasibleK2: []
3 -> costo: 121536.50000000001, rotte: {9: [(1, 3)], 8: [(1, 4)], 5: [(1, 7)], 7: [(1, 8), (8, 3)], 11: [(1, 2), (2, 4)], 4: [(1, 9)], 2: [(1, 9)], 10: [(1, 5), (5, 6)], 6: [(1, 4)], 3: [(1, 6)]}, padri: [2], figli: [4], mosse: [(5, 3, 6, 7)], infeasibleK2: []
4 -> costo: 118783.70000000001, rotte: {9: [(1, 3)], 8: [(1, 4)], 5: [(1, 7)], 7: [(1, 8), (8, 3)], 11: [(1, 4)], 4: [(1, 9)], 2: [(1, 9)], 10: [(1, 5), (5, 6)], 6: [(1, 2)], 3: [(1, 6)]}, padri: [3], figli: [5, 8, 11], mosse: [(11, 6, 2, 4)], infeasibleK2: []
5 -> costo: 117725.6, rotte: {9: [(1, 3)], 8: [(1, 4)], 5: [(1, 7)], 7: [(1, 8), (8, 3)], 11: [(1, 4)], 4: [(1, 9)], 2: [(1, 9)], 10: [(1, 6)], 6: [(1, 2)], 3: [(1, 5)]}, padri: [4], figli: [6, 7, 12, 13], mosse: [(10, 3, 5, 6)], infeasibleK2: []
6 -> costo: 116976.8, rotte: {9: [(1, 3)], 8: [(1, 4)], 5: [(1, 7)], 7: [(1, 8)], 11: [(1, 4)], 4: [(1, 9)], 2: [(1, 9)], 10: [(1, 6)], 6: [(1, 2)], 3: [(1, 5)]}, padri: [5, 11, 13], figli: [], mosse: [(9, 7, 1, 3, 4), (10, 3, 5, 6), (10, 3, 5, 6)], infeasibleK2: []
7 -> costo: 116976.8, rotte: {9: [(1, 8)], 8: [(1, 4)], 5: [(1, 7)], 7: [(1, 3)], 11: [(1, 4)], 4: [(1, 9)], 2: [(1, 9)], 10: [(1, 6)], 6: [(1, 2)], 3: [(1, 5)]}, padri: [5], figli: [], mosse: [(9, 7, 3, 8)], infeasibleK2: []
8 -> costo: 117725.6, rotte: {9: [(1, 3)], 8: [(1, 4)], 5: [(1, 7)], 7: [(1, 8), (8, 3)], 11: [(1, 4)], 4: [(1, 9)], 2: [(1, 9)], 10: [(1, 5)], 6: [(1, 2)], 3: [(1, 6)]}, padri: [4], figli: [9, 10], mosse: [(3, 10, 1, 6, 4)], infeasibleK2: []
9 -> costo: 116976.8, rotte: {9: [(1, 3)], 8: [(1, 4)], 5: [(1, 7)], 7: [(1, 8)], 11: [(1, 4)], 4: [(1, 9)], 2: [(1, 9)], 10: [(1, 5)], 6: [(1, 2)], 3: [(1, 6)]}, padri: [8], figli: [], mosse: [(9, 7, 1, 3, 4)], infeasibleK2: []
10 -> costo: 116976.8, rotte: {9: [(1, 8)], 8: [(1, 4)], 5: [(1, 7)], 7: [(1, 3)], 11: [(1, 4)], 4: [(1, 9)], 2: [(1, 9)], 10: [(1, 5)], 6: [(1, 2)], 3: [(1, 6)]}, padri: [8], figli: [], mosse: [(9, 7, 3, 8)], infeasibleK2: []
11 -> costo: 118034.90000000001, rotte: {9: [(1, 3)], 8: [(1, 4)], 5: [(1, 7)], 7: [(1, 8)], 11: [(1, 4)], 4: [(1, 9)], 2: [(1, 9)], 10: [(1, 5), (5, 6)], 6: [(1, 2)], 3: [(1, 6)]}, padri: [4], figli: [6, 12, 13], mosse: [(9, 7, 1, 3, 4)], infeasibleK2: []
12 -> costo: 116976.8, rotte: {9: [(1, 3)], 8: [(1, 4)], 5: [(1, 7)], 7: [(1, 8)], 11: [(1, 4)], 4: [(1, 9)], 2: [(1, 9)], 10: [(1, 5)], 6: [(1, 2)], 3: [(1, 6)]}, padri: [5, 11], figli: [], mosse: [(3, 10, 1, 6, 4)], infeasibleK2: []
13 -> costo: 117838.20000000001, rotte: {9: [(1, 3)], 8: [(1, 4)], 5: [(1, 7)], 7: [(1, 8)], 11: [(1, 4)], 4: [(1, 9)], 2: [(1, 9)], 10: [(1, 6), (6, 5)], 6: [(1, 2)], 3: [(1, 6)]}, padri: [11], figli: [14, 6], mosse: [(10, 10, 1, 6, 4)], infeasibleK2: []
14 -> costo: 116976.8, rotte: {9: [(1, 3)], 8: [(1, 4)], 5: [(1, 7)], 7: [(1, 8)], 11: [(1, 4)], 4: [(1, 9)], 2: [(1, 9)], 10: [(1, 5)], 6: [(1, 2)], 3: [(1, 6)]}, padri: [13], figli: [], mosse: [(3, 10, 1, 6, 4)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 141882.5, rotte: {9: [(1, 7), (7, 9), (9, 3)], 8: [(1, 4)], 5: [(1, 6)], 7: [(1, 8), (8, 3)], 11: [(1, 2), (2, 4)], 4: [(1, 9)], 2: [(1, 3)], 10: [(1, 5), (5, 6)], 6: [(1, 4)], 3: [(1, 6)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {9: [(7, 3), (9, 3), (3, 3)], 8: [(4, 5)], 5: [(6, 5)], 7: [(8, 1), (3, 4)], 11: [(2, 6), (4, 8)], 4: [(9, 5)], 2: [(3, 5)], 10: [(5, 5), (6, 4)], 6: [(4, 5)], 3: [(6, 5)]}
itMosseLS: 16, itMosseTS: 10
time elapsed: 99.95s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 148986.2, rotte: {8: [(1, 5)], 9: [(1, 8), (8, 9), (9, 4)], 6: [(1, 4)], 10: [(1, 2), (2, 4)], 11: [(1, 7), (7, 6), (6, 3)], 2: [(1, 6)], 3: [(1, 3)], 4: [(1, 9)], 7: [(1, 4)], 5: [(1, 6)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 137086.0, rotte: {8: [(1, 5)], 9: [(1, 8), (8, 9), (9, 4)], 6: [(1, 4)], 10: [(1, 2), (2, 4)], 11: [(1, 7), (7, 6)], 2: [(1, 3)], 3: [(1, 3)], 4: [(1, 9)], 7: [(1, 4)], 5: [(1, 6)]}, padri: [0], figli: [2], mosse: [(11, 2, 3, 6)], infeasibleK2: []
2 -> costo: 128822.5, rotte: {8: [(1, 5)], 9: [(1, 8), (8, 4)], 6: [(1, 9)], 10: [(1, 2), (2, 4)], 11: [(1, 7), (7, 6)], 2: [(1, 3)], 3: [(1, 3)], 4: [(1, 9)], 7: [(1, 4)], 5: [(1, 6)]}, padri: [1], figli: [3], mosse: [(9, 6, 9, 4)], infeasibleK2: []
3 -> costo: 122427.5, rotte: {8: [(1, 5)], 9: [(1, 8), (8, 4)], 6: [(1, 9)], 10: [(1, 2), (2, 4)], 11: [(1, 7)], 2: [(1, 3)], 3: [(1, 3)], 4: [(1, 9)], 7: [(1, 4)], 5: [(1, 6)]}, padri: [2], figli: [4], mosse: [(5, 11, 1, 6, 9)], infeasibleK2: []
4 -> costo: 117802.2, rotte: {8: [(1, 5)], 9: [(1, 4)], 6: [(1, 9)], 10: [(1, 2), (2, 4)], 11: [(1, 7)], 2: [(1, 3)], 3: [(1, 3)], 4: [(1, 9)], 7: [(1, 8)], 5: [(1, 6)]}, padri: [3, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7], figli: [5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7], mosse: [(9, 7, 8, 4), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6), (10, 9, 1, 2, 6)], infeasibleK2: []
5 -> costo: 115049.4, rotte: {8: [(1, 5)], 9: [(1, 4)], 6: [(1, 9)], 10: [(1, 2)], 11: [(1, 7)], 2: [(1, 3)], 3: [(1, 3)], 4: [(1, 9)], 7: [(1, 8)], 5: [(1, 6)]}, padri: [4, 7], figli: [], mosse: [(9, 10, 1, 4, 4), (9, 10, 2, 4)], infeasibleK2: []
6 -> costo: 115049.40000000001, rotte: {8: [(1, 5)], 9: [(1, 2)], 6: [(1, 9)], 10: [(1, 4)], 11: [(1, 7)], 2: [(1, 3)], 3: [(1, 3)], 4: [(1, 9)], 7: [(1, 8)], 5: [(1, 6)]}, padri: [4, 7], figli: [], mosse: [(9, 10, 4, 2), (10, 9, 1, 4, 14)], infeasibleK2: []
7 -> costo: 117802.20000000001, rotte: {8: [(1, 5)], 9: [(1, 2), (2, 4)], 6: [(1, 9)], 10: [(1, 4)], 11: [(1, 7)], 2: [(1, 3)], 3: [(1, 3)], 4: [(1, 9)], 7: [(1, 8)], 5: [(1, 6)]}, padri: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], figli: [5, 6, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], mosse: [(9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6), (9, 10, 1, 2, 6)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 148986.2, rotte: {8: [(1, 5)], 9: [(1, 8), (8, 9), (9, 4)], 6: [(1, 4)], 10: [(1, 2), (2, 4)], 11: [(1, 7), (7, 6), (6, 3)], 2: [(1, 6)], 3: [(1, 3)], 4: [(1, 9)], 7: [(1, 4)], 5: [(1, 6)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {8: [(5, 5)], 9: [(8, 1), (9, 3), (4, 4)], 6: [(4, 5)], 10: [(2, 6), (4, 4)], 11: [(7, 3), (6, 4), (3, 7)], 2: [(6, 5)], 3: [(3, 5)], 4: [(9, 5)], 7: [(4, 5)], 5: [(6, 5)]}
itMosseLS: 1187, itMosseTS: 4
time elapsed: 3315.16s.


##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
