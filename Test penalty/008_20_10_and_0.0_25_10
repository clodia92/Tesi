itNSIMax: 20, itMosseTSMax: 10, beta: 0.0, penalty: 25%, uk2Increased: 10%.
##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 146925.29999999996, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 6)], 11: [(1, 9), (9, 6), (6, 4)], 7: [(1, 2)], 4: [(1, 7), (7, 2), (2, 4)], 8: [(1, 5)], 9: [(1, 8), (8, 3), (3, 4)], 2: [(1, 4)], 6: [(1, 3)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 133253.6, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 6)], 11: [(1, 9), (9, 6), (6, 7)], 7: [(1, 2)], 4: [(1, 2), (2, 4)], 8: [(1, 5)], 9: [(1, 8), (8, 3), (3, 4)], 2: [(1, 4)], 6: [(1, 3)]}, padri: [0], figli: [2], mosse: [(11, 4, 4, 7)], infeasibleK2: []
2 -> costo: 126695.2, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 9)], 11: [(1, 6), (6, 7)], 7: [(1, 2)], 4: [(1, 2), (2, 4)], 8: [(1, 5)], 9: [(1, 8), (8, 3), (3, 4)], 2: [(1, 4)], 6: [(1, 3)]}, padri: [1], figli: [3], mosse: [(10, 11, 6, 9)], infeasibleK2: []
3 -> costo: 122475.99999999999, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 9)], 11: [(1, 6), (6, 7)], 7: [(1, 2)], 4: [(1, 2), (2, 4)], 8: [(1, 5)], 9: [(1, 8), (8, 3)], 2: [(1, 4)], 6: [(1, 3)]}, padri: [2], figli: [4], mosse: [(2, 9, 1, 4, 4)], infeasibleK2: []
4 -> costo: 119723.19999999998, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 9)], 11: [(1, 6), (6, 7)], 7: [(1, 2)], 4: [(1, 4)], 8: [(1, 5)], 9: [(1, 8), (8, 3)], 2: [(1, 2)], 6: [(1, 3)]}, padri: [3], figli: [5, 10, 15], mosse: [(4, 2, 2, 4)], infeasibleK2: []
5 -> costo: 117313.4, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 9)], 11: [(1, 7)], 7: [(1, 2)], 4: [(1, 4)], 8: [(1, 6), (6, 5)], 9: [(1, 8), (8, 3)], 2: [(1, 2)], 6: [(1, 3)]}, padri: [4], figli: [6, 8, 9], mosse: [(8, 11, 1, 6, 14)], infeasibleK2: []
6 -> costo: 116564.6, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 9)], 11: [(1, 7)], 7: [(1, 2)], 4: [(1, 4)], 8: [(1, 6), (6, 5)], 9: [(1, 8)], 2: [(1, 2)], 6: [(1, 3)]}, padri: [5, 16], figli: [], mosse: [(3, 9, 1, 3, 2), (8, 8, 1, 6, 14)], infeasibleK2: []
7 -> costo: 116564.6, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 9)], 11: [(1, 7)], 7: [(1, 2)], 4: [(1, 4)], 8: [(1, 6), (6, 5)], 9: [(1, 8)], 2: [(1, 2)], 6: [(1, 3)]}, padri: [5], figli: [], mosse: [(6, 9, 1, 3, 2)], infeasibleK2: []
8 -> costo: 116564.59999999999, rotte: {5: [(1, 4)], 3: [(1, 8)], 10: [(1, 9)], 11: [(1, 7)], 7: [(1, 2)], 4: [(1, 4)], 8: [(1, 6), (6, 5)], 9: [(1, 3)], 2: [(1, 2)], 6: [(1, 3)]}, padri: [5], figli: [], mosse: [(3, 9, 3, 8)], infeasibleK2: []
9 -> costo: 116564.6, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 9)], 11: [(1, 7)], 7: [(1, 2)], 4: [(1, 4)], 8: [(1, 6), (6, 5)], 9: [(1, 3)], 2: [(1, 2)], 6: [(1, 8)]}, padri: [5], figli: [], mosse: [(9, 6, 8, 3)], infeasibleK2: []
10 -> costo: 117313.4, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 9)], 11: [(1, 6), (6, 5)], 7: [(1, 2)], 4: [(1, 4)], 8: [(1, 7)], 9: [(1, 8), (8, 3)], 2: [(1, 2)], 6: [(1, 3)]}, padri: [4], figli: [11, 12, 13, 14], mosse: [(11, 8, 7, 5)], infeasibleK2: []
11 -> costo: 116564.6, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 9)], 11: [(1, 6), (6, 5)], 7: [(1, 2)], 4: [(1, 4)], 8: [(1, 7)], 9: [(1, 8)], 2: [(1, 2)], 6: [(1, 3)]}, padri: [10], figli: [], mosse: [(3, 9, 1, 3, 2)], infeasibleK2: []
12 -> costo: 116564.6, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 9)], 11: [(1, 6), (6, 5)], 7: [(1, 2)], 4: [(1, 4)], 8: [(1, 7)], 9: [(1, 8)], 2: [(1, 2)], 6: [(1, 3)]}, padri: [10], figli: [], mosse: [(6, 9, 1, 3, 2)], infeasibleK2: []
13 -> costo: 116564.6, rotte: {5: [(1, 4)], 3: [(1, 8)], 10: [(1, 9)], 11: [(1, 6), (6, 5)], 7: [(1, 2)], 4: [(1, 4)], 8: [(1, 7)], 9: [(1, 3)], 2: [(1, 2)], 6: [(1, 3)]}, padri: [10], figli: [], mosse: [(3, 9, 3, 8)], infeasibleK2: []
14 -> costo: 116564.6, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 9)], 11: [(1, 6), (6, 5)], 7: [(1, 2)], 4: [(1, 4)], 8: [(1, 7)], 9: [(1, 3)], 2: [(1, 2)], 6: [(1, 8)]}, padri: [10], figli: [], mosse: [(9, 6, 8, 3)], infeasibleK2: []
15 -> costo: 117510.09999999999, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 9)], 11: [(1, 7)], 7: [(1, 2)], 4: [(1, 4)], 8: [(1, 5), (5, 6)], 9: [(1, 8), (8, 3)], 2: [(1, 2)], 6: [(1, 3)]}, padri: [4], figli: [16], mosse: [(8, 11, 5, 6, 14)], infeasibleK2: []
16 -> costo: 116761.3, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 9)], 11: [(1, 7)], 7: [(1, 2)], 4: [(1, 4)], 8: [(1, 5), (5, 6)], 9: [(1, 8)], 2: [(1, 2)], 6: [(1, 3)]}, padri: [15], figli: [6], mosse: [(3, 9, 1, 3, 2)], infeasibleK2: []
bestSolutionIndice: 1
1 -> costo: 133253.6, rotte: {5: [(1, 4)], 3: [(1, 3)], 10: [(1, 6)], 11: [(1, 9), (9, 6), (6, 7)], 7: [(1, 2)], 4: [(1, 2), (2, 4)], 8: [(1, 5)], 9: [(1, 8), (8, 3), (3, 4)], 2: [(1, 4)], 6: [(1, 3)]}, padri: [0], figli: [2], mosse: [(11, 4, 4, 7)], infeasibleK2: []
trasportoPalletDiGamma: {5: [(4, 5)], 3: [(3, 5)], 10: [(6, 10)], 11: [(9, 8), (6, 4), (7, 3)], 7: [(2, 5)], 4: [(2, 1), (4, 4)], 8: [(5, 5)], 9: [(8, 1), (3, 2), (4, 4)], 2: [(4, 5)], 6: [(3, 5)]}
itMosseLS: 17, itMosseTS: 10
time elapsed: 97.27s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 160251.39999999997, rotte: {8: [(1, 7), (7, 9)], 5: [(1, 6)], 2: [(1, 2)], 9: [(1, 8), (8, 4)], 3: [(1, 9)], 7: [(1, 4)], 4: [(1, 3)], 11: [(1, 5), (5, 3), (3, 9)], 6: [(1, 6)], 10: [(1, 2), (2, 6), (6, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 143381.09999999998, rotte: {8: [(1, 7), (7, 5)], 5: [(1, 6)], 2: [(1, 2)], 9: [(1, 8), (8, 4)], 3: [(1, 9)], 7: [(1, 4)], 4: [(1, 3)], 11: [(1, 3), (3, 9)], 6: [(1, 6)], 10: [(1, 2), (2, 6), (6, 4)]}, padri: [0], figli: [2], mosse: [(8, 11, 9, 5)], infeasibleK2: []
2 -> costo: 134878.19999999998, rotte: {8: [(1, 7), (7, 5)], 5: [(1, 6)], 2: [(1, 2)], 9: [(1, 8), (8, 4)], 3: [(1, 9)], 7: [(1, 4)], 4: [(1, 3)], 11: [(1, 3), (3, 9)], 6: [(1, 6)], 10: [(1, 2), (2, 4)]}, padri: [1], figli: [3], mosse: [(5, 10, 1, 6, 4)], infeasibleK2: []
3 -> costo: 128752.6, rotte: {8: [(1, 7), (7, 5)], 5: [(1, 6)], 2: [(1, 2)], 9: [(1, 8), (8, 4)], 3: [(1, 9)], 7: [(1, 4)], 4: [(1, 9)], 11: [(1, 3)], 6: [(1, 6)], 10: [(1, 2), (2, 4)]}, padri: [2], figli: [4], mosse: [(4, 11, 3, 9)], infeasibleK2: []
4 -> costo: 124092.6, rotte: {8: [(1, 6), (6, 5)], 5: [(1, 7)], 2: [(1, 2)], 9: [(1, 8), (8, 4)], 3: [(1, 9)], 7: [(1, 4)], 4: [(1, 9)], 11: [(1, 3)], 6: [(1, 6)], 10: [(1, 2), (2, 4)]}, padri: [3], figli: [5], mosse: [(8, 5, 7, 6)], infeasibleK2: []
5 -> costo: 119467.30000000002, rotte: {8: [(1, 6), (6, 5)], 5: [(1, 7)], 2: [(1, 2)], 9: [(1, 4)], 3: [(1, 9)], 7: [(1, 8)], 4: [(1, 9)], 11: [(1, 3)], 6: [(1, 6)], 10: [(1, 2), (2, 4)]}, padri: [4], figli: [6, 9, 12, 15], mosse: [(9, 7, 8, 4)], infeasibleK2: []
6 -> costo: 116714.50000000001, rotte: {8: [(1, 6), (6, 5)], 5: [(1, 7)], 2: [(1, 2)], 9: [(1, 4)], 3: [(1, 9)], 7: [(1, 8)], 4: [(1, 9)], 11: [(1, 3)], 6: [(1, 6)], 10: [(1, 2)]}, padri: [5], figli: [7, 8], mosse: [(9, 10, 1, 4, 4)], infeasibleK2: []
7 -> costo: 115853.1, rotte: {8: [(1, 5)], 5: [(1, 7)], 2: [(1, 2)], 9: [(1, 4)], 3: [(1, 9)], 7: [(1, 8)], 4: [(1, 9)], 11: [(1, 3)], 6: [(1, 6)], 10: [(1, 2)]}, padri: [6], figli: [], mosse: [(6, 8, 1, 6, 9)], infeasibleK2: []
8 -> costo: 115853.09999999999, rotte: {8: [(1, 6)], 5: [(1, 7)], 2: [(1, 2)], 9: [(1, 4)], 3: [(1, 9)], 7: [(1, 8)], 4: [(1, 9)], 11: [(1, 3)], 6: [(1, 5)], 10: [(1, 2)]}, padri: [6], figli: [], mosse: [(8, 6, 5, 6)], infeasibleK2: []
9 -> costo: 116714.5, rotte: {8: [(1, 6), (6, 5)], 5: [(1, 7)], 2: [(1, 2)], 9: [(1, 2)], 3: [(1, 9)], 7: [(1, 8)], 4: [(1, 9)], 11: [(1, 3)], 6: [(1, 6)], 10: [(1, 4)]}, padri: [5], figli: [10, 11], mosse: [(9, 10, 4, 2)], infeasibleK2: []
10 -> costo: 115853.1, rotte: {8: [(1, 5)], 5: [(1, 7)], 2: [(1, 2)], 9: [(1, 2)], 3: [(1, 9)], 7: [(1, 8)], 4: [(1, 9)], 11: [(1, 3)], 6: [(1, 6)], 10: [(1, 4)]}, padri: [9], figli: [], mosse: [(6, 8, 1, 6, 9)], infeasibleK2: []
11 -> costo: 115853.09999999999, rotte: {8: [(1, 6)], 5: [(1, 7)], 2: [(1, 2)], 9: [(1, 2)], 3: [(1, 9)], 7: [(1, 8)], 4: [(1, 9)], 11: [(1, 3)], 6: [(1, 5)], 10: [(1, 4)]}, padri: [9], figli: [], mosse: [(8, 6, 5, 6)], infeasibleK2: []
12 -> costo: 117838.20000000001, rotte: {8: [(1, 6), (6, 5)], 5: [(1, 7)], 2: [(1, 2)], 9: [(1, 4)], 3: [(1, 9)], 7: [(1, 8)], 4: [(1, 9)], 11: [(1, 3)], 6: [(1, 6)], 10: [(1, 4)]}, padri: [5], figli: [13, 14], mosse: [(2, 10, 1, 2, 1)], infeasibleK2: []
13 -> costo: 116976.8, rotte: {8: [(1, 5)], 5: [(1, 7)], 2: [(1, 2)], 9: [(1, 4)], 3: [(1, 9)], 7: [(1, 8)], 4: [(1, 9)], 11: [(1, 3)], 6: [(1, 6)], 10: [(1, 4)]}, padri: [12], figli: [], mosse: [(6, 8, 1, 6, 9)], infeasibleK2: []
14 -> costo: 116976.79999999999, rotte: {8: [(1, 6)], 5: [(1, 7)], 2: [(1, 2)], 9: [(1, 4)], 3: [(1, 9)], 7: [(1, 8)], 4: [(1, 9)], 11: [(1, 3)], 6: [(1, 5)], 10: [(1, 4)]}, padri: [12], figli: [], mosse: [(8, 6, 5, 6)], infeasibleK2: []
15 -> costo: 117838.20000000001, rotte: {8: [(1, 6), (6, 5)], 5: [(1, 7)], 2: [(1, 4)], 9: [(1, 4)], 3: [(1, 9)], 7: [(1, 8)], 4: [(1, 9)], 11: [(1, 3)], 6: [(1, 6)], 10: [(1, 2)]}, padri: [5], figli: [16, 17], mosse: [(2, 10, 2, 4)], infeasibleK2: []
16 -> costo: 116976.80000000002, rotte: {8: [(1, 5)], 5: [(1, 7)], 2: [(1, 4)], 9: [(1, 4)], 3: [(1, 9)], 7: [(1, 8)], 4: [(1, 9)], 11: [(1, 3)], 6: [(1, 6)], 10: [(1, 2)]}, padri: [15], figli: [], mosse: [(6, 8, 1, 6, 9)], infeasibleK2: []
17 -> costo: 116976.8, rotte: {8: [(1, 6)], 5: [(1, 7)], 2: [(1, 4)], 9: [(1, 4)], 3: [(1, 9)], 7: [(1, 8)], 4: [(1, 9)], 11: [(1, 3)], 6: [(1, 5)], 10: [(1, 2)]}, padri: [15], figli: [], mosse: [(8, 6, 5, 6)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 160251.39999999997, rotte: {8: [(1, 7), (7, 9)], 5: [(1, 6)], 2: [(1, 2)], 9: [(1, 8), (8, 4)], 3: [(1, 9)], 7: [(1, 4)], 4: [(1, 3)], 11: [(1, 5), (5, 3), (3, 9)], 6: [(1, 6)], 10: [(1, 2), (2, 6), (6, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {8: [(7, 3), (9, 2)], 5: [(6, 5)], 2: [(2, 5)], 9: [(8, 1), (4, 9)], 3: [(9, 5)], 7: [(4, 5)], 4: [(3, 5)], 11: [(5, 5), (3, 7), (9, 1)], 6: [(6, 5)], 10: [(2, 1), (6, 4), (4, 4)]}
itMosseLS: 17, itMosseTS: 10
time elapsed: 101.23s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 157330.1, rotte: {5: [(1, 7), (7, 2), (2, 9)], 10: [(1, 4)], 7: [(1, 3)], 11: [(1, 6), (6, 9)], 8: [(1, 8), (8, 4), (4, 9)], 3: [(1, 2)], 9: [(1, 5), (5, 3)], 2: [(1, 9)], 4: [(1, 4)], 6: [(1, 3)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 140914.00000000003, rotte: {5: [(1, 3), (3, 2), (2, 9)], 10: [(1, 4)], 7: [(1, 3)], 11: [(1, 6), (6, 9)], 8: [(1, 8), (8, 4), (4, 9)], 3: [(1, 2)], 9: [(1, 5), (5, 7)], 2: [(1, 9)], 4: [(1, 4)], 6: [(1, 3)]}, padri: [0], figli: [2], mosse: [(5, 9, 7, 3)], infeasibleK2: []
2 -> costo: 127865.50000000001, rotte: {5: [(1, 3), (3, 2), (2, 9)], 10: [(1, 4)], 7: [(1, 3)], 11: [(1, 9)], 8: [(1, 8), (8, 4), (4, 6)], 3: [(1, 2)], 9: [(1, 5), (5, 7)], 2: [(1, 9)], 4: [(1, 4)], 6: [(1, 3)]}, padri: [1], figli: [3], mosse: [(11, 8, 6, 9)], infeasibleK2: []
3 -> costo: 120982.90000000001, rotte: {5: [(1, 3), (3, 2)], 10: [(1, 4)], 7: [(1, 3)], 11: [(1, 9)], 8: [(1, 8), (8, 4), (4, 6)], 3: [(1, 9)], 9: [(1, 5), (5, 7)], 2: [(1, 9)], 4: [(1, 4)], 6: [(1, 3)]}, padri: [2], figli: [4], mosse: [(5, 3, 9, 2)], infeasibleK2: []
4 -> costo: 116357.6, rotte: {5: [(1, 3), (3, 2)], 10: [(1, 4)], 7: [(1, 3)], 11: [(1, 9)], 8: [(1, 4), (4, 6)], 3: [(1, 9)], 9: [(1, 5), (5, 7)], 2: [(1, 9)], 4: [(1, 8)], 6: [(1, 3)]}, padri: [3], figli: [5], mosse: [(8, 4, 8, 4)], infeasibleK2: []
5 -> costo: 113481.6, rotte: {5: [(1, 3), (3, 2)], 10: [(1, 6)], 7: [(1, 3)], 11: [(1, 9)], 8: [(1, 4)], 3: [(1, 9)], 9: [(1, 5), (5, 7)], 2: [(1, 9)], 4: [(1, 8)], 6: [(1, 3)]}, padri: [4], figli: [6], mosse: [(10, 8, 4, 6)], infeasibleK2: []
6 -> costo: 111758.79999999999, rotte: {5: [(1, 3), (3, 2)], 10: [(1, 6), (6, 5)], 7: [(1, 3)], 11: [(1, 9)], 8: [(1, 4)], 3: [(1, 9)], 9: [(1, 7)], 2: [(1, 9)], 4: [(1, 8)], 6: [(1, 3)]}, padri: [5], figli: [7, 8, 9, 10, 11, 16], mosse: [(10, 9, 6, 5, 5)], infeasibleK2: []
7 -> costo: 110284.70000000001, rotte: {5: [(1, 3)], 10: [(1, 6), (6, 5)], 7: [(1, 3)], 11: [(1, 9)], 8: [(1, 4)], 3: [(1, 9)], 9: [(1, 7)], 2: [(1, 9)], 4: [(1, 8)], 6: [(1, 2)]}, padri: [6], figli: [], mosse: [(5, 6, 2, 3)], infeasibleK2: []
8 -> costo: 110284.70000000001, rotte: {5: [(1, 3)], 10: [(1, 6), (6, 5)], 7: [(1, 2)], 11: [(1, 9)], 8: [(1, 4)], 3: [(1, 9)], 9: [(1, 7)], 2: [(1, 9)], 4: [(1, 8)], 6: [(1, 3)]}, padri: [6], figli: [], mosse: [(5, 7, 2, 3)], infeasibleK2: []
9 -> costo: 110284.70000000001, rotte: {5: [(1, 2)], 10: [(1, 6), (6, 5)], 7: [(1, 3)], 11: [(1, 9)], 8: [(1, 4)], 3: [(1, 9)], 9: [(1, 7)], 2: [(1, 9)], 4: [(1, 8)], 6: [(1, 3)]}, padri: [6], figli: [], mosse: [(6, 5, 1, 3, 2)], infeasibleK2: []
10 -> costo: 110284.70000000001, rotte: {5: [(1, 2)], 10: [(1, 6), (6, 5)], 7: [(1, 3)], 11: [(1, 9)], 8: [(1, 4)], 3: [(1, 9)], 9: [(1, 7)], 2: [(1, 9)], 4: [(1, 8)], 6: [(1, 3)]}, padri: [6], figli: [], mosse: [(7, 5, 1, 3, 2)], infeasibleK2: []
11 -> costo: 111033.5, rotte: {5: [(1, 2)], 10: [(1, 6), (6, 5)], 7: [(1, 3)], 11: [(1, 9)], 8: [(1, 4)], 3: [(1, 9)], 9: [(1, 7)], 2: [(1, 9)], 4: [(1, 8), (8, 3)], 6: [(1, 3)]}, padri: [6], figli: [12, 13, 14, 15, 17], mosse: [(4, 5, 8, 3, 2)], infeasibleK2: []
12 -> costo: 110284.70000000001, rotte: {5: [(1, 2)], 10: [(1, 6), (6, 5)], 7: [(1, 3)], 11: [(1, 9)], 8: [(1, 4)], 3: [(1, 9)], 9: [(1, 7)], 2: [(1, 9)], 4: [(1, 8)], 6: [(1, 3)]}, padri: [11], figli: [], mosse: [(6, 4, 1, 3, 2)], infeasibleK2: []
13 -> costo: 110284.70000000001, rotte: {5: [(1, 2)], 10: [(1, 6), (6, 5)], 7: [(1, 3)], 11: [(1, 9)], 8: [(1, 4)], 3: [(1, 9)], 9: [(1, 7)], 2: [(1, 9)], 4: [(1, 8)], 6: [(1, 3)]}, padri: [11], figli: [], mosse: [(7, 4, 1, 3, 2)], infeasibleK2: []
14 -> costo: 110284.70000000001, rotte: {5: [(1, 2)], 10: [(1, 6), (6, 5)], 7: [(1, 3)], 11: [(1, 9)], 8: [(1, 4)], 3: [(1, 9)], 9: [(1, 7)], 2: [(1, 9)], 4: [(1, 3)], 6: [(1, 8)]}, padri: [11], figli: [], mosse: [(4, 6, 8, 3)], infeasibleK2: []
15 -> costo: 110284.69999999998, rotte: {5: [(1, 2)], 10: [(1, 6), (6, 5)], 7: [(1, 8)], 11: [(1, 9)], 8: [(1, 4)], 3: [(1, 9)], 9: [(1, 7)], 2: [(1, 9)], 4: [(1, 3)], 6: [(1, 3)]}, padri: [11, 16], figli: [], mosse: [(7, 4, 3, 8), (7, 4, 3, 8)], infeasibleK2: []
16 -> costo: 111268.90000000001, rotte: {5: [(1, 2)], 10: [(1, 6), (6, 5)], 7: [(1, 3)], 11: [(1, 9)], 8: [(1, 4)], 3: [(1, 9)], 9: [(1, 7)], 2: [(1, 9)], 4: [(1, 3), (3, 8)], 6: [(1, 3)]}, padri: [6], figli: [15, 17], mosse: [(4, 5, 1, 3, 2)], infeasibleK2: []
17 -> costo: 110284.70000000001, rotte: {5: [(1, 2)], 10: [(1, 6), (6, 5)], 7: [(1, 3)], 11: [(1, 9)], 8: [(1, 4)], 3: [(1, 9)], 9: [(1, 7)], 2: [(1, 9)], 4: [(1, 3)], 6: [(1, 8)]}, padri: [11, 16], figli: [], mosse: [(4, 6, 8, 3)], infeasibleK2: []
bestSolutionIndice: 1
1 -> costo: 140914.00000000003, rotte: {5: [(1, 3), (3, 2), (2, 9)], 10: [(1, 4)], 7: [(1, 3)], 11: [(1, 6), (6, 9)], 8: [(1, 8), (8, 4), (4, 9)], 3: [(1, 2)], 9: [(1, 5), (5, 7)], 2: [(1, 9)], 4: [(1, 4)], 6: [(1, 3)]}, padri: [0], figli: [2], mosse: [(5, 9, 7, 3)], infeasibleK2: []
trasportoPalletDiGamma: {5: [(3, 2), (2, 1), (9, 1)], 10: [(4, 10)], 7: [(3, 5)], 11: [(6, 14), (9, 1)], 8: [(8, 1), (4, 3), (9, 1)], 3: [(2, 5)], 9: [(5, 5), (7, 3)], 2: [(9, 5)], 4: [(4, 5)], 6: [(3, 5)]}
itMosseLS: 18, itMosseTS: 10
time elapsed: 91.47s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 143532.5, rotte: {4: [(1, 9)], 3: [(1, 4)], 6: [(1, 3)], 9: [(1, 6)], 10: [(1, 5), (5, 3)], 7: [(1, 2)], 5: [(1, 7), (7, 6)], 2: [(1, 8), (8, 2)], 8: [(1, 9), (9, 3)], 11: [(1, 4), (4, 6)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 131617.0, rotte: {4: [(1, 9)], 3: [(1, 4)], 6: [(1, 3)], 9: [(1, 6)], 10: [(1, 3)], 7: [(1, 2)], 5: [(1, 7), (7, 5), (5, 6)], 2: [(1, 8), (8, 2)], 8: [(1, 9), (9, 3)], 11: [(1, 4), (4, 6)]}, padri: [0], figli: [2], mosse: [(5, 10, 7, 5, 5)], infeasibleK2: []
2 -> costo: 125013.69999999998, rotte: {4: [(1, 9)], 3: [(1, 4)], 6: [(1, 3)], 9: [(1, 6)], 10: [(1, 3)], 7: [(1, 2)], 5: [(1, 5), (5, 6)], 2: [(1, 8), (8, 2)], 8: [(1, 9), (9, 3)], 11: [(1, 4), (4, 7)]}, padri: [1], figli: [3], mosse: [(5, 11, 7, 6)], infeasibleK2: []
3 -> costo: 120585.49999999999, rotte: {4: [(1, 9)], 3: [(1, 4)], 6: [(1, 3)], 9: [(1, 6)], 10: [(1, 3)], 7: [(1, 2)], 5: [(1, 5), (5, 6)], 2: [(1, 8), (8, 2)], 8: [(1, 9)], 11: [(1, 4), (4, 7)]}, padri: [2], figli: [4], mosse: [(6, 8, 1, 3, 2)], infeasibleK2: []
4 -> costo: 117901.59999999999, rotte: {4: [(1, 9)], 3: [(1, 4)], 6: [(1, 3)], 9: [(1, 6)], 10: [(1, 3)], 7: [(1, 2)], 5: [(1, 5), (5, 6)], 2: [(1, 8)], 8: [(1, 9)], 11: [(1, 4), (4, 7)]}, padri: [3], figli: [5], mosse: [(7, 2, 1, 2, 1)], infeasibleK2: []
5 -> costo: 116107.50000000001, rotte: {4: [(1, 9)], 3: [(1, 7)], 6: [(1, 3)], 9: [(1, 6)], 10: [(1, 3)], 7: [(1, 2)], 5: [(1, 5), (5, 6)], 2: [(1, 8)], 8: [(1, 9)], 11: [(1, 4)]}, padri: [4], figli: [6, 7, 8, 8, 9, 9, 8], mosse: [(3, 11, 4, 7)], infeasibleK2: []
6 -> costo: 115049.40000000002, rotte: {4: [(1, 9)], 3: [(1, 7)], 6: [(1, 3)], 9: [(1, 5)], 10: [(1, 3)], 7: [(1, 2)], 5: [(1, 6)], 2: [(1, 8)], 8: [(1, 9)], 11: [(1, 4)]}, padri: [5, 8, 9], figli: [], mosse: [(9, 5, 6, 5), (9, 5, 6, 5), (5, 9, 1, 6, 10)], infeasibleK2: []
7 -> costo: 115049.40000000001, rotte: {4: [(1, 9)], 3: [(1, 7)], 6: [(1, 3)], 9: [(1, 6)], 10: [(1, 3)], 7: [(1, 2)], 5: [(1, 5)], 2: [(1, 8)], 8: [(1, 9)], 11: [(1, 4)]}, padri: [5, 8, 9], figli: [], mosse: [(9, 5, 1, 6, 4), (9, 5, 1, 6, 4), (9, 5, 5, 6)], infeasibleK2: []
8 -> costo: 115910.80000000002, rotte: {4: [(1, 9)], 3: [(1, 7)], 6: [(1, 3)], 9: [(1, 6)], 10: [(1, 3)], 7: [(1, 2)], 5: [(1, 6), (6, 5)], 2: [(1, 8)], 8: [(1, 9)], 11: [(1, 4)]}, padri: [5, 5, 5], figli: [7, 6], mosse: [(5, 5, 1, 6, 4), (5, 5, 6, 5, 5), (5, 5, 5, 6)], infeasibleK2: []
9 -> costo: 115910.80000000002, rotte: {4: [(1, 9)], 3: [(1, 7)], 6: [(1, 3)], 9: [(1, 6), (6, 5)], 10: [(1, 3)], 7: [(1, 2)], 5: [(1, 6)], 2: [(1, 8)], 8: [(1, 9)], 11: [(1, 4)]}, padri: [5, 5], figli: [6, 7], mosse: [(9, 5, 6, 5, 5)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 143532.5, rotte: {4: [(1, 9)], 3: [(1, 4)], 6: [(1, 3)], 9: [(1, 6)], 10: [(1, 5), (5, 3)], 7: [(1, 2)], 5: [(1, 7), (7, 6)], 2: [(1, 8), (8, 2)], 8: [(1, 9), (9, 3)], 11: [(1, 4), (4, 6)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {4: [(9, 5)], 3: [(4, 5)], 6: [(3, 5)], 9: [(6, 10)], 10: [(5, 5), (3, 5)], 7: [(2, 5)], 5: [(7, 3), (6, 2)], 2: [(8, 1), (2, 1)], 8: [(9, 3), (3, 2)], 11: [(4, 13), (6, 2)]}
itMosseLS: 15, itMosseTS: 10
time elapsed: 96.66s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 159316.9, rotte: {8: [(1, 8), (8, 9), (9, 6)], 4: [(1, 7), (7, 6)], 2: [(1, 3)], 10: [(1, 4)], 3: [(1, 9)], 7: [(1, 6)], 9: [(1, 5), (5, 3), (3, 6)], 11: [(1, 2), (2, 4), (4, 6)], 6: [(1, 3)], 5: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 140577.9, rotte: {8: [(1, 8), (8, 9), (9, 6)], 4: [(1, 7), (7, 6)], 2: [(1, 3)], 10: [(1, 4)], 3: [(1, 9)], 7: [(1, 3)], 9: [(1, 5), (5, 6)], 11: [(1, 2), (2, 4), (4, 6)], 6: [(1, 3)], 5: [(1, 4)]}, padri: [0], figli: [2], mosse: [(7, 9, 6, 3)], infeasibleK2: []
2 -> costo: 133101.0, rotte: {8: [(1, 8), (8, 9), (9, 6)], 4: [(1, 6)], 2: [(1, 3)], 10: [(1, 4)], 3: [(1, 9)], 7: [(1, 3)], 9: [(1, 5), (5, 6)], 11: [(1, 2), (2, 4), (4, 7)], 6: [(1, 3)], 5: [(1, 4)]}, padri: [1], figli: [3], mosse: [(4, 11, 7, 6)], infeasibleK2: []
3 -> costo: 123361.1, rotte: {8: [(1, 9), (9, 6)], 4: [(1, 8)], 2: [(1, 3)], 10: [(1, 4)], 3: [(1, 9)], 7: [(1, 3)], 9: [(1, 5), (5, 6)], 11: [(1, 2), (2, 4), (4, 7)], 6: [(1, 3)], 5: [(1, 4)]}, padri: [2], figli: [4], mosse: [(8, 4, 8, 6)], infeasibleK2: []
4 -> costo: 116802.70000000001, rotte: {8: [(1, 9)], 4: [(1, 8)], 2: [(1, 3)], 10: [(1, 4)], 3: [(1, 9)], 7: [(1, 3)], 9: [(1, 5), (5, 6)], 11: [(1, 2), (2, 4), (4, 7)], 6: [(1, 3)], 5: [(1, 4)]}, padri: [3], figli: [5], mosse: [(9, 8, 1, 6, 6)], infeasibleK2: []
5 -> costo: 114049.90000000001, rotte: {8: [(1, 9)], 4: [(1, 8)], 2: [(1, 3)], 10: [(1, 4)], 3: [(1, 9)], 7: [(1, 3)], 9: [(1, 5), (5, 6)], 11: [(1, 4), (4, 7)], 6: [(1, 3)], 5: [(1, 2)]}, padri: [4], figli: [6, 8, 12], mosse: [(11, 5, 2, 4)], infeasibleK2: []
6 -> costo: 112255.8, rotte: {8: [(1, 9)], 4: [(1, 8)], 2: [(1, 3)], 10: [(1, 7)], 3: [(1, 9)], 7: [(1, 3)], 9: [(1, 5), (5, 6)], 11: [(1, 4)], 6: [(1, 3)], 5: [(1, 2)]}, padri: [5], figli: [7, 7, 7, 13, 13, 13], mosse: [(10, 11, 4, 7)], infeasibleK2: []
7 -> costo: 112059.1, rotte: {8: [(1, 9)], 4: [(1, 8)], 2: [(1, 3)], 10: [(1, 7)], 3: [(1, 9)], 7: [(1, 3)], 9: [(1, 6), (6, 5)], 11: [(1, 4)], 6: [(1, 3)], 5: [(1, 2)]}, padri: [6, 6, 6, 12], figli: [], mosse: [(9, 9, 1, 6, 14), (9, 9, 6, 5, 5), (9, 9, 5, 6), (10, 11, 4, 7)], infeasibleK2: []
8 -> costo: 112255.80000000002, rotte: {8: [(1, 9)], 4: [(1, 8)], 2: [(1, 3)], 10: [(1, 4)], 3: [(1, 9)], 7: [(1, 3)], 9: [(1, 5), (5, 6)], 11: [(1, 7)], 6: [(1, 3)], 5: [(1, 2)]}, padri: [5], figli: [9, 10, 11], mosse: [(10, 11, 1, 4, 8)], infeasibleK2: []
9 -> costo: 112059.1, rotte: {8: [(1, 9)], 4: [(1, 8)], 2: [(1, 3)], 10: [(1, 4)], 3: [(1, 9)], 7: [(1, 3)], 9: [(1, 6), (6, 5)], 11: [(1, 7)], 6: [(1, 3)], 5: [(1, 2)]}, padri: [8], figli: [], mosse: [(9, 9, 1, 6, 14)], infeasibleK2: []
10 -> costo: 112059.1, rotte: {8: [(1, 9)], 4: [(1, 8)], 2: [(1, 3)], 10: [(1, 4)], 3: [(1, 9)], 7: [(1, 3)], 9: [(1, 6), (6, 5)], 11: [(1, 7)], 6: [(1, 3)], 5: [(1, 2)]}, padri: [8], figli: [], mosse: [(9, 9, 6, 5, 5)], infeasibleK2: []
11 -> costo: 112059.1, rotte: {8: [(1, 9)], 4: [(1, 8)], 2: [(1, 3)], 10: [(1, 4)], 3: [(1, 9)], 7: [(1, 3)], 9: [(1, 6), (6, 5)], 11: [(1, 7)], 6: [(1, 3)], 5: [(1, 2)]}, padri: [8], figli: [], mosse: [(9, 9, 5, 6)], infeasibleK2: []
12 -> costo: 113853.2, rotte: {8: [(1, 9)], 4: [(1, 8)], 2: [(1, 3)], 10: [(1, 4)], 3: [(1, 9)], 7: [(1, 3)], 9: [(1, 6), (6, 5)], 11: [(1, 4), (4, 7)], 6: [(1, 3)], 5: [(1, 2)]}, padri: [5], figli: [7, 13], mosse: [(9, 9, 1, 6, 14)], infeasibleK2: []
13 -> costo: 112059.1, rotte: {8: [(1, 9)], 4: [(1, 8)], 2: [(1, 3)], 10: [(1, 4)], 3: [(1, 9)], 7: [(1, 3)], 9: [(1, 6), (6, 5)], 11: [(1, 7)], 6: [(1, 3)], 5: [(1, 2)]}, padri: [6, 6, 6, 12], figli: [], mosse: [(10, 11, 1, 4, 8)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 159316.9, rotte: {8: [(1, 8), (8, 9), (9, 6)], 4: [(1, 7), (7, 6)], 2: [(1, 3)], 10: [(1, 4)], 3: [(1, 9)], 7: [(1, 6)], 9: [(1, 5), (5, 3), (3, 6)], 11: [(1, 2), (2, 4), (4, 6)], 6: [(1, 3)], 5: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {8: [(8, 1), (9, 3), (6, 1)], 4: [(7, 3), (6, 2)], 2: [(3, 5)], 10: [(4, 10)], 3: [(9, 5)], 7: [(6, 5)], 9: [(5, 5), (3, 2), (6, 3)], 11: [(2, 6), (4, 3), (6, 3)], 6: [(3, 5)], 5: [(4, 5)]}
itMosseLS: 16, itMosseTS: 10
time elapsed: 89.30s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 150041.90000000002, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 7), (7, 3)], 9: [(1, 3)], 2: [(1, 4)], 5: [(1, 5)], 11: [(1, 8), (8, 6), (6, 4)], 10: [(1, 2), (2, 4)], 8: [(1, 9), (9, 4)], 4: [(1, 6)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 138090.09999999998, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 7), (7, 6)], 9: [(1, 3)], 2: [(1, 4)], 5: [(1, 5)], 11: [(1, 8), (8, 3), (3, 4)], 10: [(1, 2), (2, 4)], 8: [(1, 9), (9, 4)], 4: [(1, 6)]}, padri: [0], figli: [2], mosse: [(3, 11, 3, 6)], infeasibleK2: []
2 -> costo: 131695.09999999998, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 6)], 9: [(1, 3)], 2: [(1, 4)], 5: [(1, 5)], 11: [(1, 8), (8, 3), (3, 4)], 10: [(1, 2), (2, 4)], 8: [(1, 9), (9, 4)], 4: [(1, 7)]}, padri: [1], figli: [3], mosse: [(3, 4, 7, 6)], infeasibleK2: []
3 -> costo: 126621.9, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 6)], 9: [(1, 3)], 2: [(1, 9)], 5: [(1, 5)], 11: [(1, 8), (8, 3), (3, 4)], 10: [(1, 2), (2, 4)], 8: [(1, 4)], 4: [(1, 7)]}, padri: [2], figli: [4], mosse: [(2, 8, 4, 9)], infeasibleK2: []
4 -> costo: 122402.69999999998, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 6)], 9: [(1, 3)], 2: [(1, 9)], 5: [(1, 5)], 11: [(1, 8), (8, 3)], 10: [(1, 2), (2, 4)], 8: [(1, 4)], 4: [(1, 7)]}, padri: [3], figli: [5, 8, 11], mosse: [(8, 11, 1, 4, 7)], infeasibleK2: []
5 -> costo: 119649.9, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 6)], 9: [(1, 3)], 2: [(1, 9)], 5: [(1, 5)], 11: [(1, 8), (8, 3)], 10: [(1, 4)], 8: [(1, 2)], 4: [(1, 7)]}, padri: [4], figli: [6, 7, 12, 13, 14], mosse: [(10, 8, 2, 4)], infeasibleK2: []
6 -> costo: 118901.1, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 6)], 9: [(1, 3)], 2: [(1, 9)], 5: [(1, 5)], 11: [(1, 8)], 10: [(1, 4)], 8: [(1, 2)], 4: [(1, 7)]}, padri: [5, 11, 13], figli: [], mosse: [(9, 11, 1, 3, 2), (10, 8, 2, 4), (10, 8, 1, 4, 14)], infeasibleK2: []
7 -> costo: 118901.1, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 6)], 9: [(1, 8)], 2: [(1, 9)], 5: [(1, 5)], 11: [(1, 3)], 10: [(1, 4)], 8: [(1, 2)], 4: [(1, 7)]}, padri: [5], figli: [], mosse: [(9, 11, 3, 8)], infeasibleK2: []
8 -> costo: 119649.9, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 6)], 9: [(1, 3)], 2: [(1, 9)], 5: [(1, 5)], 11: [(1, 8), (8, 3)], 10: [(1, 2)], 8: [(1, 4)], 4: [(1, 7)]}, padri: [4], figli: [9, 10], mosse: [(8, 10, 1, 4, 4)], infeasibleK2: []
9 -> costo: 118901.1, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 6)], 9: [(1, 3)], 2: [(1, 9)], 5: [(1, 5)], 11: [(1, 8)], 10: [(1, 2)], 8: [(1, 4)], 4: [(1, 7)]}, padri: [8], figli: [], mosse: [(9, 11, 1, 3, 2)], infeasibleK2: []
10 -> costo: 118901.1, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 6)], 9: [(1, 8)], 2: [(1, 9)], 5: [(1, 5)], 11: [(1, 3)], 10: [(1, 2)], 8: [(1, 4)], 4: [(1, 7)]}, padri: [8], figli: [], mosse: [(9, 11, 3, 8)], infeasibleK2: []
11 -> costo: 121653.9, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 6)], 9: [(1, 3)], 2: [(1, 9)], 5: [(1, 5)], 11: [(1, 8)], 10: [(1, 2), (2, 4)], 8: [(1, 4)], 4: [(1, 7)]}, padrifigli: [6, 12, 13, 14, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13, 13], mosse: [(9, 11, 1, 3, 2), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6)], infeasibleK2: []
12 -> costo: 118901.1, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 6)], 9: [(1, 3)], 2: [(1, 9)], 5: [(1, 5)], 11: [(1, 8)], 10: [(1, 2)], 8: [(1, 4)], 4: [(1, 7)]}, padri: [5, 11], figli: [], mosse: [(8, 10, 1, 4, 4)], infeasibleK2: []
13 -> costo: 121653.90000000002, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 6)], 9: [(1, 3)], 2: [(1, 9)], 5: [(1, 5)], 11: [(1, 8)], 10: [(1, 4)], 8: [(1, 2), (2, 4)], 4: [(1, 7)]}, padrifigli: [6, 14, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11, 11], mosse: [(8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6)], infeasibleK2: []
14 -> costo: 118901.1, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 6)], 9: [(1, 3)], 2: [(1, 9)], 5: [(1, 5)], 11: [(1, 8)], 10: [(1, 2)], 8: [(1, 4)], 4: [(1, 7)]}, padri: [5, 11, 13], figli: [], mosse: [(10, 8, 4, 2)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 150041.90000000002, rotte: {7: [(1, 9)], 6: [(1, 6)], 3: [(1, 7), (7, 3)], 9: [(1, 3)], 2: [(1, 4)], 5: [(1, 5)], 11: [(1, 8), (8, 6), (6, 4)], 10: [(1, 2), (2, 4)], 8: [(1, 9), (9, 4)], 4: [(1, 6)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {7: [(9, 5)], 6: [(6, 5)], 3: [(7, 3), (3, 2)], 9: [(3, 10)], 2: [(4, 5)], 5: [(5, 5)], 11: [(8, 1), (6, 4), (4, 7)], 10: [(2, 6), (4, 4)], 8: [(9, 3), (4, 2)], 4: [(6, 5)]}
itMosseLS: 1065, itMosseTS: 10
time elapsed: 3124.29s.


##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
