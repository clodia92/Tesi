itNSIMax: 50, itMosseTSMax: 5, beta: 0.0, penalty: 25%, uk2Increased: 25%.
##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 140926.1, rotte: {5: [(1, 3)], 8: [(1, 2)], 4: [(1, 8), (8, 4)], 3: [(1, 5)], 11: [(1, 6), (6, 4)], 10: [(1, 9), (9, 3)], 6: [(1, 7), (7, 4)], 7: [(1, 4)], 2: [(1, 3)], 9: [(1, 2), (2, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 134150.6, rotte: {5: [(1, 3)], 8: [(1, 2)], 4: [(1, 8), (8, 4)], 3: [(1, 5)], 11: [(1, 6), (6, 4)], 10: [(1, 9), (9, 3)], 6: [(1, 7)], 7: [(1, 4)], 2: [(1, 3)], 9: [(1, 2), (2, 4)]}, padri: [0], figli: [2], mosse: [(4, 6, 1, 4, 2)], infeasibleK2: []
2 -> costo: 128370.9, rotte: {5: [(1, 3)], 8: [(1, 2)], 4: [(1, 8), (8, 4)], 3: [(1, 4)], 11: [(1, 6), (6, 5)], 10: [(1, 9), (9, 3)], 6: [(1, 7)], 7: [(1, 4)], 2: [(1, 3)], 9: [(1, 2), (2, 4)]}, padri: [1], figli: [3], mosse: [(3, 11, 5, 4)], infeasibleK2: []
3 -> costo: 123745.6, rotte: {5: [(1, 3)], 8: [(1, 2)], 4: [(1, 8)], 3: [(1, 4)], 11: [(1, 6), (6, 5)], 10: [(1, 9), (9, 3)], 6: [(1, 7)], 7: [(1, 4)], 2: [(1, 3)], 9: [(1, 2), (2, 4)]}, padri: [2], figli: [4], mosse: [(3, 4, 1, 4, 6)], infeasibleK2: []
4 -> costo: 119317.4, rotte: {5: [(1, 3)], 8: [(1, 2)], 4: [(1, 8)], 3: [(1, 4)], 11: [(1, 6), (6, 5)], 10: [(1, 3)], 6: [(1, 7)], 7: [(1, 4)], 2: [(1, 9)], 9: [(1, 2), (2, 4)]}, padri: [3], figli: [5, 6, 8, 9, 10], mosse: [(10, 2, 9, 3)], infeasibleK2: []
5 -> costo: 116564.59999999999, rotte: {5: [(1, 3)], 8: [(1, 2)], 4: [(1, 8)], 3: [(1, 4)], 11: [(1, 6), (6, 5)], 10: [(1, 3)], 6: [(1, 7)], 7: [(1, 4)], 2: [(1, 9)], 9: [(1, 2)]}, padri: [4], figli: [], mosse: [(3, 9, 1, 4, 6)], infeasibleK2: []
6 -> costo: 116564.6, rotte: {5: [(1, 3)], 8: [(1, 2)], 4: [(1, 8)], 3: [(1, 2)], 11: [(1, 6), (6, 5)], 10: [(1, 3)], 6: [(1, 7)], 7: [(1, 4)], 2: [(1, 9)], 9: [(1, 4)]}, padri: [4], figli: [], mosse: [(3, 9, 4, 2)], infeasibleK2: []
7 -> costo: 116564.59999999999, rotte: {5: [(1, 3)], 8: [(1, 2)], 4: [(1, 8)], 3: [(1, 4)], 11: [(1, 6), (6, 5)], 10: [(1, 3)], 6: [(1, 7)], 7: [(1, 4)], 2: [(1, 9)], 9: [(1, 2)]}, padri: [4], figli: [], mosse: [(7, 9, 1, 4, 6)], infeasibleK2: []
8 -> costo: 116564.59999999999, rotte: {5: [(1, 3)], 8: [(1, 2)], 4: [(1, 8)], 3: [(1, 4)], 11: [(1, 6), (6, 5)], 10: [(1, 3)], 6: [(1, 7)], 7: [(1, 2)], 2: [(1, 9)], 9: [(1, 4)]}, padri: [4], figli: [], mosse: [(7, 9, 4, 2)], infeasibleK2: []
9 -> costo: 117688.29999999999, rotte: {5: [(1, 3)], 8: [(1, 2)], 4: [(1, 8)], 3: [(1, 4)], 11: [(1, 6), (6, 5)], 10: [(1, 3)], 6: [(1, 7)], 7: [(1, 4)], 2: [(1, 9)], 9: [(1, 4)]}, padri: [4], figli: [], mosse: [(8, 9, 1, 2, 1)], infeasibleK2: []
10 -> costo: 117688.3, rotte: {5: [(1, 3)], 8: [(1, 4)], 4: [(1, 8)], 3: [(1, 4)], 11: [(1, 6), (6, 5)], 10: [(1, 3)], 6: [(1, 7)], 7: [(1, 4)], 2: [(1, 9)], 9: [(1, 2)]}, padri: [4], figli: [], mosse: [(8, 9, 2, 4)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 140926.1, rotte: {5: [(1, 3)], 8: [(1, 2)], 4: [(1, 8), (8, 4)], 3: [(1, 5)], 11: [(1, 6), (6, 4)], 10: [(1, 9), (9, 3)], 6: [(1, 7), (7, 4)], 7: [(1, 4)], 2: [(1, 3)], 9: [(1, 2), (2, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {5: [(3, 5)], 8: [(2, 5)], 4: [(8, 1), (4, 4)], 3: [(5, 5)], 11: [(6, 14), (4, 1)], 10: [(9, 8), (3, 2)], 6: [(7, 3), (4, 2)], 7: [(4, 5)], 2: [(3, 5)], 9: [(2, 1), (4, 6)]}
itMosseLS: 10, itMosseTS: 5
time elapsed: 34.48s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 138139.0, rotte: {11: [(1, 6), (6, 4)], 6: [(1, 8), (8, 4)], 9: [(1, 3)], 7: [(1, 5)], 5: [(1, 7), (7, 4)], 3: [(1, 9)], 10: [(1, 2), (2, 4)], 2: [(1, 4)], 8: [(1, 3), (3, 4)], 4: [(1, 9)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 133441.55, rotte: {11: [(1, 6), (6, 7)], 6: [(1, 8), (8, 4)], 9: [(1, 3)], 7: [(1, 5)], 5: [(1, 4)], 3: [(1, 9)], 10: [(1, 2), (2, 4)], 2: [(1, 4)], 8: [(1, 3), (3, 4)], 4: [(1, 9)]}, padri: [0], figli: [2], mosse: [(11, 5, 4, 7)], infeasibleK2: [11]
2 -> costo: 128816.25, rotte: {11: [(1, 6), (6, 7)], 6: [(1, 8)], 9: [(1, 3)], 7: [(1, 5)], 5: [(1, 4)], 3: [(1, 9)], 10: [(1, 2), (2, 4)], 2: [(1, 4)], 8: [(1, 3), (3, 4)], 4: [(1, 9)]}, padri: [1], figli: [3], mosse: [(2, 6, 1, 4, 4)], infeasibleK2: [11]
3 -> costo: 124597.05, rotte: {11: [(1, 6), (6, 7)], 6: [(1, 8)], 9: [(1, 3)], 7: [(1, 5)], 5: [(1, 4)], 3: [(1, 9)], 10: [(1, 2), (2, 4)], 2: [(1, 3)], 8: [(1, 4)], 4: [(1, 9)]}, padri: [2], figli: [4], mosse: [(2, 8, 4, 3)], infeasibleK2: [11]
4 -> costo: 121844.25, rotte: {11: [(1, 6), (6, 7)], 6: [(1, 8)], 9: [(1, 3)], 7: [(1, 5)], 5: [(1, 4)], 3: [(1, 9)], 10: [(1, 2)], 2: [(1, 3)], 8: [(1, 4)], 4: [(1, 9)]}, padri: [3], figli: [5, 6, 7, 8], mosse: [(5, 10, 1, 4, 4)], infeasibleK2: [11]
5 -> costo: 117729.95, rotte: {11: [(1, 6), (6, 5)], 6: [(1, 8)], 9: [(1, 3)], 7: [(1, 7)], 5: [(1, 4)], 3: [(1, 9)], 10: [(1, 2)], 2: [(1, 3)], 8: [(1, 4)], 4: [(1, 9)]}, padri: [4], figli: [], mosse: [(11, 7, 7, 5)], infeasibleK2: [11]
6 -> costo: 113986.5, rotte: {11: [(1, 7)], 6: [(1, 8)], 9: [(1, 3)], 7: [(1, 6), (6, 5)], 5: [(1, 4)], 3: [(1, 9)], 10: [(1, 2)], 2: [(1, 3)], 8: [(1, 4)], 4: [(1, 9)]}, padri: [4, 7], figli: [], mosse: [(7, 11, 1, 6, 14), (7, 11, 6, 5, 5)], infeasibleK2: []
7 -> costo: 115709.3, rotte: {11: [(1, 5), (5, 7)], 6: [(1, 8)], 9: [(1, 3)], 7: [(1, 6)], 5: [(1, 4)], 3: [(1, 9)], 10: [(1, 2)], 2: [(1, 3)], 8: [(1, 4)], 4: [(1, 9)]}, padri: [4], figli: [6, 8], mosse: [(11, 7, 6, 5)], infeasibleK2: []
8 -> costo: 114183.2, rotte: {11: [(1, 5), (5, 6)], 6: [(1, 8)], 9: [(1, 3)], 7: [(1, 7)], 5: [(1, 4)], 3: [(1, 9)], 10: [(1, 2)], 2: [(1, 3)], 8: [(1, 4)], 4: [(1, 9)]}, padri: [7], figli: [9, 10, 11], mosse: [(11, 7, 7, 6)], infeasibleK2: []
9 -> costo: 113986.5, rotte: {11: [(1, 6), (6, 5)], 6: [(1, 8)], 9: [(1, 3)], 7: [(1, 7)], 5: [(1, 4)], 3: [(1, 9)], 10: [(1, 2)], 2: [(1, 3)], 8: [(1, 4)], 4: [(1, 9)]}, padri: [8], figli: [], mosse: [(11, 11, 1, 6, 14)], infeasibleK2: []
10 -> costo: 113986.5, rotte: {11: [(1, 6), (6, 5)], 6: [(1, 8)], 9: [(1, 3)], 7: [(1, 7)], 5: [(1, 4)], 3: [(1, 9)], 10: [(1, 2)], 2: [(1, 3)], 8: [(1, 4)], 4: [(1, 9)]}, padri: [8], figli: [], mosse: [(11, 11, 5, 6)], infeasibleK2: []
11 -> costo: 113986.5, rotte: {11: [(1, 6), (6, 5)], 6: [(1, 8)], 9: [(1, 3)], 7: [(1, 7)], 5: [(1, 4)], 3: [(1, 9)], 10: [(1, 2)], 2: [(1, 3)], 8: [(1, 4)], 4: [(1, 9)]}, padri: [8], figli: [], mosse: [(11, 11, 6, 5, 5)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 138139.0, rotte: {11: [(1, 6), (6, 4)], 6: [(1, 8), (8, 4)], 9: [(1, 3)], 7: [(1, 5)], 5: [(1, 7), (7, 4)], 3: [(1, 9)], 10: [(1, 2), (2, 4)], 2: [(1, 4)], 8: [(1, 3), (3, 4)], 4: [(1, 9)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {11: [(6, 14), (4, 1)], 6: [(8, 1), (4, 4)], 9: [(3, 10)], 7: [(5, 5)], 5: [(7, 3), (4, 2)], 3: [(9, 5)], 10: [(2, 6), (4, 4)], 2: [(4, 5)], 8: [(3, 2), (4, 2)], 4: [(9, 3)]}
itMosseLS: 12, itMosseTS: 5
time elapsed: 35.88s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 155571.59999999998, rotte: {5: [(1, 7), (7, 3)], 6: [(1, 6)], 7: [(1, 5)], 9: [(1, 2), (2, 4)], 11: [(1, 8), (8, 3), (3, 6), (6, 4)], 8: [(1, 4)], 2: [(1, 3)], 10: [(1, 9), (9, 6)], 3: [(1, 6)], 4: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 143809.3, rotte: {5: [(1, 3)], 6: [(1, 6)], 7: [(1, 5), (5, 7)], 9: [(1, 2), (2, 4)], 11: [(1, 8), (8, 3), (3, 6), (6, 4)], 8: [(1, 4)], 2: [(1, 3)], 10: [(1, 9), (9, 6)], 3: [(1, 6)], 4: [(1, 4)]}, padri: [0], figli: [2], mosse: [(7, 5, 5, 7, 3)], infeasibleK2: []
2 -> costo: 137168.19999999998, rotte: {5: [(1, 3)], 6: [(1, 4)], 7: [(1, 5), (5, 7)], 9: [(1, 2), (2, 4)], 11: [(1, 8), (8, 3), (3, 6)], 8: [(1, 4)], 2: [(1, 3)], 10: [(1, 9), (9, 6)], 3: [(1, 6)], 4: [(1, 4)]}, padri: [1], figli: [3], mosse: [(6, 11, 6, 4)], infeasibleK2: []
3 -> costo: 129471.09999999999, rotte: {5: [(1, 3)], 6: [(1, 4)], 7: [(1, 5), (5, 7)], 9: [(1, 2), (2, 4)], 11: [(1, 8), (8, 3)], 8: [(1, 4)], 2: [(1, 3)], 10: [(1, 9), (9, 6)], 3: [(1, 6)], 4: [(1, 4)]}, padri: [2], figli: [4], mosse: [(3, 11, 1, 6, 7)], infeasibleK2: []
4 -> costo: 122912.7, rotte: {5: [(1, 3)], 6: [(1, 4)], 7: [(1, 5), (5, 7)], 9: [(1, 2), (2, 4)], 11: [(1, 8), (8, 3)], 8: [(1, 4)], 2: [(1, 3)], 10: [(1, 6)], 3: [(1, 9)], 4: [(1, 4)]}, padri: [3], figli: [5], mosse: [(10, 3, 9, 6)], infeasibleK2: []
5 -> costo: 120159.9, rotte: {5: [(1, 3)], 6: [(1, 4)], 7: [(1, 5), (5, 7)], 9: [(1, 2)], 11: [(1, 8), (8, 3)], 8: [(1, 4)], 2: [(1, 3)], 10: [(1, 6)], 3: [(1, 9)], 4: [(1, 4)]}, padri: [4], figli: [6], mosse: [(4, 9, 1, 4, 4)], infeasibleK2: []
6 -> costo: 118633.8, rotte: {5: [(1, 3)], 6: [(1, 4)], 7: [(1, 5), (5, 6)], 9: [(1, 2)], 11: [(1, 8), (8, 3)], 8: [(1, 4)], 2: [(1, 3)], 10: [(1, 7)], 3: [(1, 9)], 4: [(1, 4)]}, padri: [5], figli: [7, 9], mosse: [(7, 10, 7, 6)], infeasibleK2: []
7 -> costo: 117884.99999999999, rotte: {5: [(1, 3)], 6: [(1, 4)], 7: [(1, 5), (5, 6)], 9: [(1, 2)], 11: [(1, 8)], 8: [(1, 4)], 2: [(1, 3)], 10: [(1, 7)], 3: [(1, 9)], 4: [(1, 4)]}, padri: [6], figli: [8, 8, 8], mosse: [(2, 11, 1, 3, 5)], infeasibleK2: []
8 -> costo: 117688.3, rotte: {5: [(1, 3)], 6: [(1, 4)], 7: [(1, 6), (6, 5)], 9: [(1, 2)], 11: [(1, 8)], 8: [(1, 4)], 2: [(1, 3)], 10: [(1, 7)], 3: [(1, 9)], 4: [(1, 4)]}, padri: [7, 7, 7], figli: [], mosse: [(7, 7, 5, 6), (7, 7, 1, 6, 14), (7, 7, 6, 5, 5)], infeasibleK2: []
9 -> costo: 117884.99999999999, rotte: {5: [(1, 8)], 6: [(1, 4)], 7: [(1, 5), (5, 6)], 9: [(1, 2)], 11: [(1, 3)], 8: [(1, 4)], 2: [(1, 3)], 10: [(1, 7)], 3: [(1, 9)], 4: [(1, 4)]}, padri: [6], figli: [10, 11], mosse: [(5, 11, 3, 8)], infeasibleK2: []
10 -> costo: 117688.3, rotte: {5: [(1, 8)], 6: [(1, 4)], 7: [(1, 6), (6, 5)], 9: [(1, 2)], 11: [(1, 3)], 8: [(1, 4)], 2: [(1, 3)], 10: [(1, 7)], 3: [(1, 9)], 4: [(1, 4)]}, padri: [9], figli: [], mosse: [(7, 7, 1, 6, 14)], infeasibleK2: []
11 -> costo: 117688.3, rotte: {5: [(1, 8)], 6: [(1, 4)], 7: [(1, 6), (6, 5)], 9: [(1, 2)], 11: [(1, 3)], 8: [(1, 4)], 2: [(1, 3)], 10: [(1, 7)], 3: [(1, 9)], 4: [(1, 4)]}, padri: [9], figli: [], mosse: [(7, 7, 5, 6)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 155571.59999999998, rotte: {5: [(1, 7), (7, 3)], 6: [(1, 6)], 7: [(1, 5)], 9: [(1, 2), (2, 4)], 11: [(1, 8), (8, 3), (3, 6), (6, 4)], 8: [(1, 4)], 2: [(1, 3)], 10: [(1, 9), (9, 6)], 3: [(1, 6)], 4: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {5: [(7, 3), (3, 2)], 6: [(6, 5)], 7: [(5, 5)], 9: [(2, 6), (4, 4)], 11: [(8, 1), (3, 5), (6, 2), (4, 4)], 8: [(4, 5)], 2: [(3, 5)], 10: [(9, 8), (6, 2)], 3: [(6, 5)], 4: [(4, 5)]}
itMosseLS: 13, itMosseTS: 5
time elapsed: 35.88s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 136376.8, rotte: {5: [(1, 8), (8, 3)], 3: [(1, 9)], 4: [(1, 4)], 11: [(1, 6), (6, 4)], 8: [(1, 5)], 7: [(1, 7), (7, 4)], 2: [(1, 3)], 9: [(1, 2), (2, 3)], 10: [(1, 9), (9, 4)], 6: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 131679.34999999998, rotte: {5: [(1, 8), (8, 3)], 3: [(1, 9)], 4: [(1, 4)], 11: [(1, 6), (6, 7)], 8: [(1, 5)], 7: [(1, 4)], 2: [(1, 3)], 9: [(1, 2), (2, 3)], 10: [(1, 9), (9, 4)], 6: [(1, 4)]}, padri: [0], figli: [2], mosse: [(11, 7, 4, 7)], infeasibleK2: [11]
2 -> costo: 126606.15, rotte: {5: [(1, 8), (8, 3)], 3: [(1, 9)], 4: [(1, 4)], 11: [(1, 6), (6, 7)], 8: [(1, 5)], 7: [(1, 4)], 2: [(1, 3)], 9: [(1, 2), (2, 3)], 10: [(1, 9)], 6: [(1, 4)]}, padri: [1], figli: [3], mosse: [(4, 10, 1, 4, 5)], infeasibleK2: [11]
3 -> costo: 122491.84999999999, rotte: {5: [(1, 8), (8, 3)], 3: [(1, 9)], 4: [(1, 4)], 11: [(1, 6), (6, 5)], 8: [(1, 7)], 7: [(1, 4)], 2: [(1, 3)], 9: [(1, 2), (2, 3)], 10: [(1, 9)], 6: [(1, 4)]}, padri: [2], figli: [4, 7], mosse: [(11, 8, 7, 5)], infeasibleK2: [11]
4 -> costo: 120406.15, rotte: {5: [(1, 8), (8, 3)], 3: [(1, 9)], 4: [(1, 4)], 11: [(1, 6), (6, 5)], 8: [(1, 7)], 7: [(1, 4)], 2: [(1, 3)], 9: [(1, 2)], 10: [(1, 9)], 6: [(1, 4)]}, padri: [3], figli: [5, 6], mosse: [(2, 9, 1, 3, 3)], infeasibleK2: [11]
5 -> costo: 119657.35, rotte: {5: [(1, 3)], 3: [(1, 9)], 4: [(1, 4)], 11: [(1, 6), (6, 5)], 8: [(1, 7)], 7: [(1, 4)], 2: [(1, 8)], 9: [(1, 2)], 10: [(1, 9)], 6: [(1, 4)]}, padri: [4], figli: [], mosse: [(5, 2, 8, 3)], infeasibleK2: [11]
6 -> costo: 115913.9, rotte: {5: [(1, 8)], 3: [(1, 9)], 4: [(1, 4)], 11: [(1, 6), (6, 5)], 8: [(1, 7)], 7: [(1, 4)], 2: [(1, 3)], 9: [(1, 2)], 10: [(1, 9)], 6: [(1, 4)]}, padri: [4], figli: [], mosse: [(2, 5, 1, 3, 4)], infeasibleK2: []
7 -> costo: 116662.7, rotte: {5: [(1, 8), (8, 3)], 3: [(1, 9)], 4: [(1, 4)], 11: [(1, 6), (6, 5)], 8: [(1, 7)], 7: [(1, 4)], 2: [(1, 2)], 9: [(1, 3)], 10: [(1, 9)], 6: [(1, 4)]}, padri: [3], figli: [8, 9], mosse: [(2, 9, 3, 2)], infeasibleK2: []
8 -> costo: 115913.9, rotte: {5: [(1, 8)], 3: [(1, 9)], 4: [(1, 4)], 11: [(1, 6), (6, 5)], 8: [(1, 7)], 7: [(1, 4)], 2: [(1, 2)], 9: [(1, 3)], 10: [(1, 9)], 6: [(1, 4)]}, padri: [7], figli: [], mosse: [(9, 5, 1, 3, 4)], infeasibleK2: []
9 -> costo: 115913.90000000001, rotte: {5: [(1, 3)], 3: [(1, 9)], 4: [(1, 4)], 11: [(1, 6), (6, 5)], 8: [(1, 7)], 7: [(1, 4)], 2: [(1, 2)], 9: [(1, 8)], 10: [(1, 9)], 6: [(1, 4)]}, padri: [7], figli: [], mosse: [(5, 9, 8, 3)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 136376.8, rotte: {5: [(1, 8), (8, 3)], 3: [(1, 9)], 4: [(1, 4)], 11: [(1, 6), (6, 4)], 8: [(1, 5)], 7: [(1, 7), (7, 4)], 2: [(1, 3)], 9: [(1, 2), (2, 3)], 10: [(1, 9), (9, 4)], 6: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {5: [(8, 1), (3, 4)], 3: [(9, 5)], 4: [(4, 5)], 11: [(6, 14), (4, 1)], 8: [(5, 5)], 7: [(7, 3), (4, 2)], 2: [(3, 5)], 9: [(2, 6), (3, 3)], 10: [(9, 3), (4, 5)], 6: [(4, 5)]}
itMosseLS: 9, itMosseTS: 5
time elapsed: 32.24s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 142890.4, rotte: {7: [(1, 9)], 6: [(1, 5)], 2: [(1, 6)], 9: [(1, 2), (2, 4)], 3: [(1, 3)], 10: [(1, 4)], 8: [(1, 7), (7, 6)], 11: [(1, 8), (8, 3), (3, 4), (4, 6)], 5: [(1, 9), (9, 4)], 4: [(1, 6)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 135413.5, rotte: {7: [(1, 9)], 6: [(1, 5)], 2: [(1, 6)], 9: [(1, 2), (2, 4)], 3: [(1, 3)], 10: [(1, 4)], 8: [(1, 6)], 11: [(1, 8), (8, 3), (3, 4), (4, 7)], 5: [(1, 9), (9, 4)], 4: [(1, 6)]}, padri: [0], figli: [2], mosse: [(8, 11, 7, 6)], infeasibleK2: []
2 -> costo: 133722.525, rotte: {7: [(1, 9)], 6: [(1, 5)], 2: [(1, 6)], 9: [(1, 2), (2, 4)], 3: [(1, 3)], 10: [(1, 4)], 8: [(1, 6)], 11: [(1, 8), (8, 3), (3, 4), (4, 7)], 5: [(1, 9)], 4: [(1, 6)]}, padri: [1], figli: [3], mosse: [(9, 5, 1, 4, 2)], infeasibleK2: [9]
3 -> costo: 130562.45000000001, rotte: {7: [(1, 9)], 6: [(1, 5)], 2: [(1, 6)], 9: [(1, 4)], 3: [(1, 3)], 10: [(1, 2)], 8: [(1, 6)], 11: [(1, 8), (8, 3), (3, 4), (4, 7)], 5: [(1, 9)], 4: [(1, 6)]}, padri: [2], figli: [4], mosse: [(9, 10, 2, 4)], infeasibleK2: [9]
4 -> costo: 129633.05000000002, rotte: {7: [(1, 9)], 6: [(1, 5)], 2: [(1, 6)], 9: [(1, 4)], 3: [(1, 3)], 10: [(1, 2)], 8: [(1, 6)], 11: [(1, 8), (8, 3), (3, 7)], 5: [(1, 9)], 4: [(1, 6)]}, padri: [3], figli: [5, 6], mosse: [(9, 11, 1, 4, 2)], infeasibleK2: [9]
5 -> costo: 126476.55000000002, rotte: {7: [(1, 9)], 6: [(1, 5)], 2: [(1, 6)], 9: [(1, 4)], 3: [(1, 7)], 10: [(1, 2)], 8: [(1, 6)], 11: [(1, 8), (8, 3)], 5: [(1, 9)], 4: [(1, 6)]}, padri: [4], figli: [], mosse: [(3, 11, 3, 7)], infeasibleK2: [9]
6 -> costo: 126315.40000000002, rotte: {7: [(1, 9)], 6: [(1, 5)], 2: [(1, 6)], 9: [(1, 4)], 3: [(1, 3)], 10: [(1, 2)], 8: [(1, 6)], 11: [(1, 8), (8, 7)], 5: [(1, 9)], 4: [(1, 6)]}, padri: [4], figli: [7], mosse: [(3, 11, 1, 3, 7)], infeasibleK2: []
7 -> costo: 121485.30000000002, rotte: {7: [(1, 9)], 6: [(1, 8)], 2: [(1, 6)], 9: [(1, 4)], 3: [(1, 3)], 10: [(1, 2)], 8: [(1, 6)], 11: [(1, 5), (5, 7)], 5: [(1, 9)], 4: [(1, 6)]}, padri: [6], figli: [8], mosse: [(6, 11, 5, 8)], infeasibleK2: []
8 -> costo: 119762.5, rotte: {7: [(1, 9)], 6: [(1, 8)], 2: [(1, 6), (6, 5)], 9: [(1, 4)], 3: [(1, 3)], 10: [(1, 2)], 8: [(1, 6)], 11: [(1, 7)], 5: [(1, 9)], 4: [(1, 6)]}, padri: [7], figli: [9, 10, 11, 12], mosse: [(2, 11, 6, 5, 5)], infeasibleK2: []
9 -> costo: 118901.1, rotte: {7: [(1, 9)], 6: [(1, 8)], 2: [(1, 6)], 9: [(1, 4)], 3: [(1, 3)], 10: [(1, 2)], 8: [(1, 6)], 11: [(1, 7)], 5: [(1, 9)], 4: [(1, 5)]}, padri: [8], figli: [], mosse: [(2, 4, 5, 6)], infeasibleK2: []
10 -> costo: 118901.1, rotte: {7: [(1, 9)], 6: [(1, 8)], 2: [(1, 5)], 9: [(1, 4)], 3: [(1, 3)], 10: [(1, 2)], 8: [(1, 6)], 11: [(1, 7)], 5: [(1, 9)], 4: [(1, 6)]}, padri: [8], figli: [], mosse: [(4, 2, 1, 6, 5)], infeasibleK2: []
11 -> costo: 118901.1, rotte: {7: [(1, 9)], 6: [(1, 8)], 2: [(1, 6)], 9: [(1, 4)], 3: [(1, 3)], 10: [(1, 2)], 8: [(1, 5)], 11: [(1, 7)], 5: [(1, 9)], 4: [(1, 6)]}, padri: [8], figli: [], mosse: [(2, 8, 5, 6)], infeasibleK2: []
12 -> costo: 118901.1, rotte: {7: [(1, 9)], 6: [(1, 8)], 2: [(1, 5)], 9: [(1, 4)], 3: [(1, 3)], 10: [(1, 2)], 8: [(1, 6)], 11: [(1, 7)], 5: [(1, 9)], 4: [(1, 6)]}, padri: [8], figli: [], mosse: [(8, 2, 1, 6, 5)], infeasibleK2: []
bestSolutionIndice: 1
1 -> costo: 135413.5, rotte: {7: [(1, 9)], 6: [(1, 5)], 2: [(1, 6)], 9: [(1, 2), (2, 4)], 3: [(1, 3)], 10: [(1, 4)], 8: [(1, 6)], 11: [(1, 8), (8, 3), (3, 4), (4, 7)], 5: [(1, 9), (9, 4)], 4: [(1, 6)]}, padri: [0], figli: [2], mosse: [(8, 11, 7, 6)], infeasibleK2: []
trasportoPalletDiGamma: {7: [(9, 5)], 6: [(5, 5)], 2: [(6, 5)], 9: [(2, 6), (4, 4)], 3: [(3, 5)], 10: [(4, 10)], 8: [(6, 4)], 11: [(8, 1), (3, 7), (4, 2), (7, 3)], 5: [(9, 3), (4, 2)], 4: [(6, 5)]}
itMosseLS: 12, itMosseTS: 5
time elapsed: 42.27s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 144802.9, rotte: {2: [(1, 5)], 9: [(1, 4)], 3: [(1, 6)], 5: [(1, 9)], 10: [(1, 7), (7, 3)], 4: [(1, 3)], 8: [(1, 2)], 7: [(1, 8), (8, 2), (2, 9)], 6: [(1, 4)], 11: [(1, 6), (6, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 133040.6, rotte: {2: [(1, 5), (5, 7)], 9: [(1, 4)], 3: [(1, 6)], 5: [(1, 9)], 10: [(1, 3)], 4: [(1, 3)], 8: [(1, 2)], 7: [(1, 8), (8, 2), (2, 9)], 6: [(1, 4)], 11: [(1, 6), (6, 4)]}, padri: [0], figli: [2], mosse: [(2, 10, 5, 7, 3)], infeasibleK2: []
2 -> costo: 126158.0, rotte: {2: [(1, 5), (5, 7)], 9: [(1, 4)], 3: [(1, 6)], 5: [(1, 9)], 10: [(1, 3)], 4: [(1, 3)], 8: [(1, 9)], 7: [(1, 8), (8, 2)], 6: [(1, 4)], 11: [(1, 6), (6, 4)]}, padri: [1], figli: [3], mosse: [(8, 7, 2, 9)], infeasibleK2: []
3 -> costo: 119516.9, rotte: {2: [(1, 5), (5, 7)], 9: [(1, 4)], 3: [(1, 6)], 5: [(1, 9)], 10: [(1, 3)], 4: [(1, 3)], 8: [(1, 9)], 7: [(1, 8), (8, 2)], 6: [(1, 4)], 11: [(1, 4)]}, padri: [2], figli: [4], mosse: [(3, 11, 1, 6, 9)], infeasibleK2: []
4 -> costo: 117990.8, rotte: {2: [(1, 5), (5, 6)], 9: [(1, 4)], 3: [(1, 7)], 5: [(1, 9)], 10: [(1, 3)], 4: [(1, 3)], 8: [(1, 9)], 7: [(1, 8), (8, 2)], 6: [(1, 4)], 11: [(1, 4)]}, padri: [3], figli: [5], mosse: [(2, 3, 7, 6)], infeasibleK2: []
5 -> costo: 116859.40000000001, rotte: {2: [(1, 5), (5, 6)], 9: [(1, 4)], 3: [(1, 7)], 5: [(1, 9)], 10: [(1, 3)], 4: [(1, 8), (8, 3)], 8: [(1, 9)], 7: [(1, 2)], 6: [(1, 4)], 11: [(1, 4)]}, padri: [4], figli: [6, 8], mosse: [(4, 7, 1, 8, 1)], infeasibleK2: []
6 -> costo: 116110.6, rotte: {2: [(1, 5), (5, 6)], 9: [(1, 4)], 3: [(1, 7)], 5: [(1, 9)], 10: [(1, 8)], 4: [(1, 3)], 8: [(1, 9)], 7: [(1, 2)], 6: [(1, 4)], 11: [(1, 4)]}, padri: [5], figli: [7, 7, 7], mosse: [(10, 4, 3, 8)], infeasibleK2: []
7 -> costo: 115913.90000000001, rotte: {2: [(1, 6), (6, 5)], 9: [(1, 4)], 3: [(1, 7)], 5: [(1, 9)], 10: [(1, 8)], 4: [(1, 3)], 8: [(1, 9)], 7: [(1, 2)], 6: [(1, 4)], 11: [(1, 4)]}, padri: [6, 6, 6, 8], figli: [], mosse: [(2, 2, 1, 6, 14), (2, 2, 5, 6), (2, 2, 6, 5, 5), (10, 4, 3, 8)], infeasibleK2: []
8 -> costo: 116662.70000000001, rotte: {2: [(1, 6), (6, 5)], 9: [(1, 4)], 3: [(1, 7)], 5: [(1, 9)], 10: [(1, 3)], 4: [(1, 8), (8, 3)], 8: [(1, 9)], 7: [(1, 2)], 6: [(1, 4)], 11: [(1, 4)]}, padri: [5], figli: [9, 7], mosse: [(2, 2, 5, 6)], infeasibleK2: []
9 -> costo: 115913.90000000001, rotte: {2: [(1, 6), (6, 5)], 9: [(1, 4)], 3: [(1, 7)], 5: [(1, 9)], 10: [(1, 3)], 4: [(1, 8)], 8: [(1, 9)], 7: [(1, 2)], 6: [(1, 4)], 11: [(1, 4)]}, padri: [8], figli: [], mosse: [(10, 4, 1, 3, 5)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 144802.9, rotte: {2: [(1, 5)], 9: [(1, 4)], 3: [(1, 6)], 5: [(1, 9)], 10: [(1, 7), (7, 3)], 4: [(1, 3)], 8: [(1, 2)], 7: [(1, 8), (8, 2), (2, 9)], 6: [(1, 4)], 11: [(1, 6), (6, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {2: [(5, 5)], 9: [(4, 10)], 3: [(6, 5)], 5: [(9, 5)], 10: [(7, 3), (3, 7)], 4: [(3, 5)], 8: [(2, 5)], 7: [(8, 1), (2, 1), (9, 3)], 6: [(4, 5)], 11: [(6, 9), (4, 3)]}
itMosseLS: 12, itMosseTS: 5
time elapsed: 33.31s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 139194.79999999996, rotte: {9: [(1, 5), (5, 6)], 8: [(1, 2)], 2: [(1, 4)], 10: [(1, 6)], 11: [(1, 9), (9, 3)], 5: [(1, 3)], 7: [(1, 7), (7, 4)], 4: [(1, 8), (8, 4)], 3: [(1, 2), (2, 4)], 6: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 132419.3, rotte: {9: [(1, 5), (5, 6)], 8: [(1, 2)], 2: [(1, 7)], 10: [(1, 6)], 11: [(1, 9), (9, 3)], 5: [(1, 3)], 7: [(1, 4)], 4: [(1, 8), (8, 4)], 3: [(1, 2), (2, 4)], 6: [(1, 4)]}, padri: [0], figli: [2], mosse: [(2, 7, 4, 7)], infeasibleK2: []
2 -> costo: 127794.00000000001, rotte: {9: [(1, 5), (5, 6)], 8: [(1, 2)], 2: [(1, 7)], 10: [(1, 6)], 11: [(1, 9), (9, 3)], 5: [(1, 3)], 7: [(1, 4)], 4: [(1, 8)], 3: [(1, 2), (2, 4)], 6: [(1, 4)]}, padri: [1], figli: [3], mosse: [(3, 4, 1, 4, 4)], infeasibleK2: []
3 -> costo: 123365.8, rotte: {9: [(1, 5), (5, 6)], 8: [(1, 2)], 2: [(1, 7)], 10: [(1, 6)], 11: [(1, 3)], 5: [(1, 9)], 7: [(1, 4)], 4: [(1, 8)], 3: [(1, 2), (2, 4)], 6: [(1, 4)]}, padri: [2], figli: [4], mosse: [(11, 5, 9, 3)], infeasibleK2: []
4 -> costo: 120613.00000000001, rotte: {9: [(1, 5), (5, 6)], 8: [(1, 2)], 2: [(1, 7)], 10: [(1, 6)], 11: [(1, 3)], 5: [(1, 9)], 7: [(1, 4)], 4: [(1, 8)], 3: [(1, 2)], 6: [(1, 4)]}, padri: [3], figli: [5, 6, 7, 7], mosse: [(6, 3, 1, 4, 6)], infeasibleK2: []
5 -> costo: 119554.90000000002, rotte: {9: [(1, 6)], 8: [(1, 2)], 2: [(1, 7)], 10: [(1, 5)], 11: [(1, 3)], 5: [(1, 9)], 7: [(1, 4)], 4: [(1, 8)], 3: [(1, 2)], 6: [(1, 4)]}, padri: [4, 7], figli: [], mosse: [(9, 10, 5, 6), (9, 10, 5, 6)], infeasibleK2: []
6 -> costo: 119554.90000000001, rotte: {9: [(1, 5)], 8: [(1, 2)], 2: [(1, 7)], 10: [(1, 6)], 11: [(1, 3)], 5: [(1, 9)], 7: [(1, 4)], 4: [(1, 8)], 3: [(1, 2)], 6: [(1, 4)]}, padri: [4, 7], figli: [], mosse: [(10, 9, 1, 6, 4), (10, 9, 1, 6, 4)], infeasibleK2: []
7 -> costo: 120416.30000000002, rotte: {9: [(1, 6), (6, 5)], 8: [(1, 2)], 2: [(1, 7)], 10: [(1, 6)], 11: [(1, 3)], 5: [(1, 9)], 7: [(1, 4)], 4: [(1, 8)], 3: [(1, 2)], 6: [(1, 4)]}, padri: [4, 4], figli: [6, 5], mosse: [(9, 9, 5, 6), (9, 9, 1, 6, 4)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 139194.79999999996, rotte: {9: [(1, 5), (5, 6)], 8: [(1, 2)], 2: [(1, 4)], 10: [(1, 6)], 11: [(1, 9), (9, 3)], 5: [(1, 3)], 7: [(1, 7), (7, 4)], 4: [(1, 8), (8, 4)], 3: [(1, 2), (2, 4)], 6: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {9: [(5, 5), (6, 4)], 8: [(2, 5)], 2: [(4, 5)], 10: [(6, 10)], 11: [(9, 8), (3, 7)], 5: [(3, 5)], 7: [(7, 3), (4, 2)], 4: [(8, 1), (4, 4)], 3: [(2, 1), (4, 2)], 6: [(4, 5)]}
itMosseLS: 10, itMosseTS: 5
time elapsed: 38.77s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 151279.9, rotte: {2: [(1, 9)], 4: [(1, 8), (8, 4)], 6: [(1, 5)], 5: [(1, 7), (7, 4)], 3: [(1, 2)], 7: [(1, 4)], 9: [(1, 6)], 11: [(1, 3), (3, 6)], 8: [(1, 9), (9, 4)], 10: [(1, 2), (2, 6), (6, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 146233.025, rotte: {2: [(1, 9)], 4: [(1, 8), (8, 4)], 6: [(1, 5)], 5: [(1, 7), (7, 4)], 3: [(1, 2)], 7: [(1, 4)], 9: [(1, 6)], 11: [(1, 3), (3, 6)], 8: [(1, 9), (9, 4)], 10: [(1, 2), (2, 4)]}, padri: [0], figli: [2], mosse: [(9, 10, 1, 6, 1)], infeasibleK2: [9]
2 -> costo: 137573.0, rotte: {2: [(1, 9)], 4: [(1, 8), (8, 4)], 6: [(1, 5)], 5: [(1, 7), (7, 4)], 3: [(1, 2)], 7: [(1, 4)], 9: [(1, 3)], 11: [(1, 6)], 8: [(1, 9), (9, 4)], 10: [(1, 2), (2, 4)]}, padri: [1], figli: [3], mosse: [(9, 11, 6, 3)], infeasibleK2: [9]
3 -> costo: 130797.5, rotte: {2: [(1, 9)], 4: [(1, 8), (8, 4)], 6: [(1, 5)], 5: [(1, 7)], 3: [(1, 2)], 7: [(1, 4)], 9: [(1, 3)], 11: [(1, 6)], 8: [(1, 9), (9, 4)], 10: [(1, 2), (2, 4)]}, padri: [2], figli: [4], mosse: [(4, 5, 1, 4, 2)], infeasibleK2: [9]
4 -> costo: 125724.30000000002, rotte: {2: [(1, 9)], 4: [(1, 8), (8, 4)], 6: [(1, 5)], 5: [(1, 7)], 3: [(1, 2)], 7: [(1, 9)], 9: [(1, 3)], 11: [(1, 6)], 8: [(1, 4)], 10: [(1, 2), (2, 4)]}, padri: [3], figli: [5], mosse: [(7, 8, 4, 9)], infeasibleK2: [9]
5 -> costo: 121099.0, rotte: {2: [(1, 9)], 4: [(1, 8)], 6: [(1, 5)], 5: [(1, 7)], 3: [(1, 2)], 7: [(1, 9)], 9: [(1, 3)], 11: [(1, 6)], 8: [(1, 4)], 10: [(1, 2), (2, 4)]}, padri: [4], figli: [6, 7, 8, 9, 10, 11], mosse: [(8, 4, 1, 4, 6)], infeasibleK2: [9]
6 -> costo: 118346.20000000001, rotte: {2: [(1, 9)], 4: [(1, 8)], 6: [(1, 5)], 5: [(1, 7)], 3: [(1, 2)], 7: [(1, 9)], 9: [(1, 3)], 11: [(1, 6)], 8: [(1, 2)], 10: [(1, 4)]}, padri: [5], figli: [], mosse: [(8, 10, 4, 2)], infeasibleK2: [9]
7 -> costo: 115853.1, rotte: {2: [(1, 9)], 4: [(1, 8)], 6: [(1, 5)], 5: [(1, 7)], 3: [(1, 2)], 7: [(1, 9)], 9: [(1, 3)], 11: [(1, 6)], 8: [(1, 4)], 10: [(1, 2)]}, padri: [5, 10], figli: [], mosse: [(8, 10, 1, 4, 5), (8, 10, 2, 4)], infeasibleK2: []
8 -> costo: 116976.8, rotte: {2: [(1, 9)], 4: [(1, 8)], 6: [(1, 5)], 5: [(1, 7)], 3: [(1, 4)], 7: [(1, 9)], 9: [(1, 3)], 11: [(1, 6)], 8: [(1, 4)], 10: [(1, 2)]}, padri: [5], figli: [], mosse: [(3, 10, 2, 4)], infeasibleK2: []
9 -> costo: 116976.8, rotte: {2: [(1, 9)], 4: [(1, 8)], 6: [(1, 5)], 5: [(1, 7)], 3: [(1, 2)], 7: [(1, 9)], 9: [(1, 3)], 11: [(1, 6)], 8: [(1, 4)], 10: [(1, 4)]}, padri: [5], figli: [], mosse: [(3, 10, 1, 2, 1)], infeasibleK2: []
10 -> costo: 118605.90000000001, rotte: {2: [(1, 9)], 4: [(1, 8)], 6: [(1, 5)], 5: [(1, 7)], 3: [(1, 2)], 7: [(1, 9)], 9: [(1, 3)], 11: [(1, 6)], 8: [(1, 2), (2, 4)], 10: [(1, 4)]}, padri: [5], figli: [7, 11], mosse: [(8, 10, 1, 2, 1)], infeasibleK2: []
11 -> costo: 115853.1, rotte: {2: [(1, 9)], 4: [(1, 8)], 6: [(1, 5)], 5: [(1, 7)], 3: [(1, 2)], 7: [(1, 9)], 9: [(1, 3)], 11: [(1, 6)], 8: [(1, 2)], 10: [(1, 4)]}, padri: [5, 10], figli: [], mosse: [(10, 8, 1, 4, 13)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 151279.9, rotte: {2: [(1, 9)], 4: [(1, 8), (8, 4)], 6: [(1, 5)], 5: [(1, 7), (7, 4)], 3: [(1, 2)], 7: [(1, 4)], 9: [(1, 6)], 11: [(1, 3), (3, 6)], 8: [(1, 9), (9, 4)], 10: [(1, 2), (2, 6), (6, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {2: [(9, 5)], 4: [(8, 1), (4, 4)], 6: [(5, 5)], 5: [(7, 3), (4, 2)], 3: [(2, 5)], 7: [(4, 5)], 9: [(6, 10)], 11: [(3, 12), (6, 3)], 8: [(9, 3), (4, 2)], 10: [(2, 1), (6, 1), (4, 5)]}
itMosseLS: 12, itMosseTS: 5
time elapsed: 41.41s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 137612.1, rotte: {6: [(1, 9)], 9: [(1, 8), (8, 2), (2, 4)], 4: [(1, 3)], 11: [(1, 5), (5, 6)], 8: [(1, 2)], 7: [(1, 7), (7, 4)], 5: [(1, 6)], 3: [(1, 4)], 2: [(1, 9), (9, 4)], 10: [(1, 3), (3, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 130836.6, rotte: {6: [(1, 9)], 9: [(1, 8), (8, 2), (2, 4)], 4: [(1, 3)], 11: [(1, 5), (5, 6)], 8: [(1, 2)], 7: [(1, 7)], 5: [(1, 6)], 3: [(1, 4)], 2: [(1, 9), (9, 4)], 10: [(1, 3), (3, 4)]}, padri: [0], figli: [2], mosse: [(2, 7, 1, 4, 2)], infeasibleK2: []
2 -> costo: 125721.40000000001, rotte: {6: [(1, 9)], 9: [(1, 2), (2, 4)], 4: [(1, 3)], 11: [(1, 5), (5, 6)], 8: [(1, 2)], 7: [(1, 7)], 5: [(1, 6)], 3: [(1, 4)], 2: [(1, 9), (9, 4)], 10: [(1, 3), (3, 8)]}, padri: [1], figli: [3], mosse: [(9, 10, 8, 4)], infeasibleK2: []
3 -> costo: 120648.20000000001, rotte: {6: [(1, 9)], 9: [(1, 2), (2, 4)], 4: [(1, 3)], 11: [(1, 5), (5, 6)], 8: [(1, 2)], 7: [(1, 7)], 5: [(1, 6)], 3: [(1, 4)], 2: [(1, 9)], 10: [(1, 3), (3, 8)]}, padri: [2], figli: [4], mosse: [(3, 2, 1, 4, 4)], infeasibleK2: []
4 -> costo: 117895.40000000001, rotte: {6: [(1, 9)], 9: [(1, 4)], 4: [(1, 3)], 11: [(1, 5), (5, 6)], 8: [(1, 2)], 7: [(1, 7)], 5: [(1, 6)], 3: [(1, 2)], 2: [(1, 9)], 10: [(1, 3), (3, 8)]}, padri: [3], figli: [5], mosse: [(9, 3, 2, 4)], infeasibleK2: []
5 -> costo: 116837.3, rotte: {6: [(1, 9)], 9: [(1, 4)], 4: [(1, 3)], 11: [(1, 5)], 8: [(1, 2)], 7: [(1, 7)], 5: [(1, 6)], 3: [(1, 2)], 2: [(1, 9)], 10: [(1, 3), (3, 8)]}, padri: [4], figli: [6, 7, 8, 8], mosse: [(5, 11, 1, 6, 9)], infeasibleK2: []
6 -> costo: 115853.1, rotte: {6: [(1, 9)], 9: [(1, 4)], 4: [(1, 8)], 11: [(1, 5)], 8: [(1, 2)], 7: [(1, 7)], 5: [(1, 6)], 3: [(1, 2)], 2: [(1, 9)], 10: [(1, 3)]}, padri: [5, 8], figli: [], mosse: [(4, 10, 3, 8), (4, 10, 3, 8)], infeasibleK2: []
7 -> costo: 115853.1, rotte: {6: [(1, 9)], 9: [(1, 4)], 4: [(1, 3)], 11: [(1, 5)], 8: [(1, 2)], 7: [(1, 7)], 5: [(1, 6)], 3: [(1, 2)], 2: [(1, 9)], 10: [(1, 8)]}, padri: [5], figli: [], mosse: [(4, 10, 1, 3, 7)], infeasibleK2: []
8 -> costo: 116601.9, rotte: {6: [(1, 9)], 9: [(1, 4)], 4: [(1, 3)], 11: [(1, 5)], 8: [(1, 2)], 7: [(1, 7)], 5: [(1, 6)], 3: [(1, 2)], 2: [(1, 9)], 10: [(1, 8), (8, 3)]}, padri: [5, 5], figli: [9, 6], mosse: [(10, 10, 3, 8), (10, 10, 1, 8, 1)], infeasibleK2: []
9 -> costo: 115853.1, rotte: {6: [(1, 9)], 9: [(1, 4)], 4: [(1, 3)], 11: [(1, 5)], 8: [(1, 2)], 7: [(1, 7)], 5: [(1, 6)], 3: [(1, 2)], 2: [(1, 9)], 10: [(1, 8)]}, padri: [8], figli: [], mosse: [(4, 10, 1, 3, 7)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 137612.1, rotte: {6: [(1, 9)], 9: [(1, 8), (8, 2), (2, 4)], 4: [(1, 3)], 11: [(1, 5), (5, 6)], 8: [(1, 2)], 7: [(1, 7), (7, 4)], 5: [(1, 6)], 3: [(1, 4)], 2: [(1, 9), (9, 4)], 10: [(1, 3), (3, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {6: [(9, 5)], 9: [(8, 1), (2, 1), (4, 6)], 4: [(3, 5)], 11: [(5, 5), (6, 9)], 8: [(2, 5)], 7: [(7, 3), (4, 2)], 5: [(6, 5)], 3: [(4, 5)], 2: [(9, 3), (4, 2)], 10: [(3, 7), (4, 3)]}
itMosseLS: 11, itMosseTS: 5
time elapsed: 39.70s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 142308.2, rotte: {10: [(1, 7), (7, 2), (2, 4)], 11: [(1, 6), (6, 4)], 3: [(1, 8), (8, 3)], 5: [(1, 9)], 2: [(1, 3)], 8: [(1, 2)], 6: [(1, 4)], 9: [(1, 5), (5, 4)], 7: [(1, 9), (9, 4)], 4: [(1, 3)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 133800.5, rotte: {10: [(1, 2), (2, 4)], 11: [(1, 6), (6, 4)], 3: [(1, 8), (8, 3)], 5: [(1, 9)], 2: [(1, 3)], 8: [(1, 2)], 6: [(1, 4), (4, 7)], 9: [(1, 5), (5, 4)], 7: [(1, 9), (9, 4)], 4: [(1, 3)]}, padri: [0], figli: [2], mosse: [(6, 10, 4, 7, 3)], infeasibleK2: []
2 -> costo: 123231.7, rotte: {10: [(1, 2), (2, 4)], 11: [(1, 6), (6, 5)], 3: [(1, 8), (8, 3)], 5: [(1, 9)], 2: [(1, 3)], 8: [(1, 2)], 6: [(1, 4), (4, 7)], 9: [(1, 4)], 7: [(1, 9), (9, 4)], 4: [(1, 3)]}, padri: [1], figli: [3], mosse: [(11, 9, 4, 5)], infeasibleK2: []
3 -> costo: 118158.5, rotte: {10: [(1, 2), (2, 4)], 11: [(1, 6), (6, 5)], 3: [(1, 8), (8, 3)], 5: [(1, 9)], 2: [(1, 3)], 8: [(1, 2)], 6: [(1, 4), (4, 7)], 9: [(1, 4)], 7: [(1, 9)], 4: [(1, 3)]}, padri: [2], figli: [4], mosse: [(6, 7, 1, 4, 2)], infeasibleK2: []
4 -> costo: 115405.7, rotte: {10: [(1, 4)], 11: [(1, 6), (6, 5)], 3: [(1, 8), (8, 3)], 5: [(1, 9)], 2: [(1, 3)], 8: [(1, 2)], 6: [(1, 4), (4, 7)], 9: [(1, 2)], 7: [(1, 9)], 4: [(1, 3)]}, padri: [3], figli: [5, 10], mosse: [(10, 9, 2, 4)], infeasibleK2: []
5 -> costo: 113611.6, rotte: {10: [(1, 4)], 11: [(1, 6), (6, 5)], 3: [(1, 8), (8, 3)], 5: [(1, 9)], 2: [(1, 3)], 8: [(1, 2)], 6: [(1, 7)], 9: [(1, 2)], 7: [(1, 9)], 4: [(1, 3)]}, padri: [4], figli: [6, 7, 8, 9], mosse: [(10, 6, 1, 4, 7)], infeasibleK2: []
6 -> costo: 112862.79999999999, rotte: {10: [(1, 4)], 11: [(1, 6), (6, 5)], 3: [(1, 3)], 5: [(1, 9)], 2: [(1, 8)], 8: [(1, 2)], 6: [(1, 7)], 9: [(1, 2)], 7: [(1, 9)], 4: [(1, 3)]}, padri: [5], figli: [], mosse: [(3, 2, 8, 3)], infeasibleK2: []
7 -> costo: 112862.79999999999, rotte: {10: [(1, 4)], 11: [(1, 6), (6, 5)], 3: [(1, 8)], 5: [(1, 9)], 2: [(1, 3)], 8: [(1, 2)], 6: [(1, 7)], 9: [(1, 2)], 7: [(1, 9)], 4: [(1, 3)]}, padri: [5], figli: [], mosse: [(2, 3, 1, 3, 2)], infeasibleK2: []
8 -> costo: 112862.80000000002, rotte: {10: [(1, 4)], 11: [(1, 6), (6, 5)], 3: [(1, 3)], 5: [(1, 9)], 2: [(1, 3)], 8: [(1, 2)], 6: [(1, 7)], 9: [(1, 2)], 7: [(1, 9)], 4: [(1, 8)]}, padri: [5], figli: [], mosse: [(3, 4, 8, 3)], infeasibleK2: []
9 -> costo: 112862.79999999999, rotte: {10: [(1, 4)], 11: [(1, 6), (6, 5)], 3: [(1, 8)], 5: [(1, 9)], 2: [(1, 3)], 8: [(1, 2)], 6: [(1, 7)], 9: [(1, 2)], 7: [(1, 9)], 4: [(1, 3)]}, padri: [5], figli: [], mosse: [(4, 3, 1, 3, 2)], infeasibleK2: []
10 -> costo: 113611.6, rotte: {10: [(1, 7)], 11: [(1, 6), (6, 5)], 3: [(1, 8), (8, 3)], 5: [(1, 9)], 2: [(1, 3)], 8: [(1, 2)], 6: [(1, 4)], 9: [(1, 2)], 7: [(1, 9)], 4: [(1, 3)]}, padri: [4], figli: [11], mosse: [(10, 6, 4, 7)], infeasibleK2: []
11 -> costo: 112862.8, rotte: {10: [(1, 7)], 11: [(1, 6), (6, 5)], 3: [(1, 8)], 5: [(1, 9)], 2: [(1, 3)], 8: [(1, 2)], 6: [(1, 4)], 9: [(1, 2)], 7: [(1, 9)], 4: [(1, 3)]}, padri: [10], figli: [], mosse: [(2, 3, 1, 3, 2)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 142308.2, rotte: {10: [(1, 7), (7, 2), (2, 4)], 11: [(1, 6), (6, 4)], 3: [(1, 8), (8, 3)], 5: [(1, 9)], 2: [(1, 3)], 8: [(1, 2)], 6: [(1, 4)], 9: [(1, 5), (5, 4)], 7: [(1, 9), (9, 4)], 4: [(1, 3)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {10: [(7, 3), (2, 1), (4, 5)], 11: [(6, 14), (4, 1)], 3: [(8, 1), (3, 2)], 5: [(9, 5)], 2: [(3, 5)], 8: [(2, 5)], 6: [(4, 5)], 9: [(5, 5), (4, 5)], 7: [(9, 3), (4, 2)], 4: [(3, 5)]}
itMosseLS: 11, itMosseTS: 5
time elapsed: 32.27s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 143108.30000000002, rotte: {2: [(1, 5)], 8: [(1, 3)], 5: [(1, 9)], 3: [(1, 6)], 11: [(1, 8), (8, 4)], 4: [(1, 4)], 7: [(1, 2)], 6: [(1, 7), (7, 2)], 9: [(1, 3), (3, 6)], 10: [(1, 9), (9, 6)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 133466.40000000002, rotte: {2: [(1, 5), (5, 7)], 8: [(1, 3)], 5: [(1, 9)], 3: [(1, 6)], 11: [(1, 8), (8, 4)], 4: [(1, 4)], 7: [(1, 2)], 6: [(1, 2)], 9: [(1, 3), (3, 6)], 10: [(1, 9), (9, 6)]}, padri: [0], figli: [2], mosse: [(2, 6, 5, 7, 3)], infeasibleK2: []
2 -> costo: 125769.30000000002, rotte: {2: [(1, 5), (5, 7)], 8: [(1, 3)], 5: [(1, 9)], 3: [(1, 3)], 11: [(1, 8), (8, 4)], 4: [(1, 4)], 7: [(1, 2)], 6: [(1, 2)], 9: [(1, 6)], 10: [(1, 9), (9, 6)]}, padri: [1], figli: [3], mosse: [(3, 9, 6, 3)], infeasibleK2: []
3 -> costo: 119210.90000000002, rotte: {2: [(1, 5), (5, 7)], 8: [(1, 3)], 5: [(1, 9)], 3: [(1, 3)], 11: [(1, 8), (8, 4)], 4: [(1, 4)], 7: [(1, 2)], 6: [(1, 2)], 9: [(1, 6)], 10: [(1, 9)]}, padri: [2], figli: [4], mosse: [(9, 10, 1, 6, 6)], infeasibleK2: []
4 -> costo: 114585.60000000002, rotte: {2: [(1, 5), (5, 7)], 8: [(1, 3)], 5: [(1, 9)], 3: [(1, 3)], 11: [(1, 4)], 4: [(1, 8)], 7: [(1, 2)], 6: [(1, 2)], 9: [(1, 6)], 10: [(1, 9)]}, padri: [3], figli: [5, 6, 8], mosse: [(11, 4, 8, 4)], infeasibleK2: []
5 -> costo: 112862.80000000002, rotte: {2: [(1, 7)], 8: [(1, 3)], 5: [(1, 9)], 3: [(1, 3)], 11: [(1, 4)], 4: [(1, 8)], 7: [(1, 2)], 6: [(1, 2)], 9: [(1, 6), (6, 5)], 10: [(1, 9)]}, padri: [4, 8], figli: [], mosse: [(9, 2, 6, 5, 5), (9, 9, 5, 6)], infeasibleK2: []
6 -> costo: 113059.5, rotte: {2: [(1, 5), (5, 6)], 8: [(1, 3)], 5: [(1, 9)], 3: [(1, 3)], 11: [(1, 4)], 4: [(1, 8)], 7: [(1, 2)], 6: [(1, 2)], 9: [(1, 7)], 10: [(1, 9)]}, padri: [4], figli: [7, 7, 7], mosse: [(2, 9, 7, 6)], infeasibleK2: []
7 -> costo: 112862.79999999999, rotte: {2: [(1, 6), (6, 5)], 8: [(1, 3)], 5: [(1, 9)], 3: [(1, 3)], 11: [(1, 4)], 4: [(1, 8)], 7: [(1, 2)], 6: [(1, 2)], 9: [(1, 7)], 10: [(1, 9)]}, padri: [6, 6, 6], figli: [], mosse: [(2, 2, 1, 6, 14), (2, 2, 5, 6), (2, 2, 6, 5, 5)], infeasibleK2: []
8 -> costo: 113059.50000000001, rotte: {2: [(1, 7)], 8: [(1, 3)], 5: [(1, 9)], 3: [(1, 3)], 11: [(1, 4)], 4: [(1, 8)], 7: [(1, 2)], 6: [(1, 2)], 9: [(1, 5), (5, 6)], 10: [(1, 9)]}, padri: [4], figli: [5], mosse: [(9, 2, 1, 5, 5)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 143108.30000000002, rotte: {2: [(1, 5)], 8: [(1, 3)], 5: [(1, 9)], 3: [(1, 6)], 11: [(1, 8), (8, 4)], 4: [(1, 4)], 7: [(1, 2)], 6: [(1, 7), (7, 2)], 9: [(1, 3), (3, 6)], 10: [(1, 9), (9, 6)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {2: [(5, 5)], 8: [(3, 5)], 5: [(9, 5)], 3: [(6, 5)], 11: [(8, 1), (4, 13)], 4: [(4, 5)], 7: [(2, 5)], 6: [(7, 3), (2, 1)], 9: [(3, 7), (6, 3)], 10: [(9, 3), (6, 6)]}
itMosseLS: 11, itMosseTS: 5
time elapsed: 33.55s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 149130.49999999997, rotte: {11: [(1, 3), (3, 4)], 5: [(1, 2)], 3: [(1, 6)], 8: [(1, 4)], 10: [(1, 8), (8, 9), (9, 4)], 2: [(1, 9)], 4: [(1, 5)], 7: [(1, 7), (7, 4)], 6: [(1, 2), (2, 4)], 9: [(1, 6), (6, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 144433.05, rotte: {11: [(1, 3), (3, 4)], 5: [(1, 2)], 3: [(1, 6)], 8: [(1, 4)], 10: [(1, 8), (8, 9), (9, 4)], 2: [(1, 9)], 4: [(1, 5)], 7: [(1, 4)], 6: [(1, 2), (2, 4)], 9: [(1, 6), (6, 7)]}, padri: [0], figli: [2], mosse: [(7, 9, 7, 4)], infeasibleK2: [9]
2 -> costo: 142929.55, rotte: {11: [(1, 8), (8, 3), (3, 4)], 5: [(1, 2)], 3: [(1, 6)], 8: [(1, 4)], 10: [(1, 9), (9, 4)], 2: [(1, 9)], 4: [(1, 5)], 7: [(1, 4)], 6: [(1, 2), (2, 4)], 9: [(1, 6), (6, 7)]}, padri: [1], figli: [3], mosse: [(11, 10, 1, 8, 1)], infeasibleK2: [11, 9]
3 -> costo: 137856.35, rotte: {11: [(1, 8), (8, 3), (3, 4)], 5: [(1, 2)], 3: [(1, 6)], 8: [(1, 9)], 10: [(1, 4)], 2: [(1, 9)], 4: [(1, 5)], 7: [(1, 4)], 6: [(1, 2), (2, 4)], 9: [(1, 6), (6, 7)]}, padri: [2], figli: [4], mosse: [(8, 10, 4, 9)], infeasibleK2: [11, 9]
4 -> costo: 132582.35, rotte: {11: [(1, 8), (8, 3)], 5: [(1, 2)], 3: [(1, 6)], 8: [(1, 9)], 10: [(1, 4)], 2: [(1, 9)], 4: [(1, 5)], 7: [(1, 4)], 6: [(1, 2), (2, 4)], 9: [(1, 6), (6, 7)]}, padri: [3], figli: [5], mosse: [(6, 11, 1, 4, 3)], infeasibleK2: [11, 9]
5 -> costo: 127319.225, rotte: {11: [(1, 8), (8, 3)], 5: [(1, 2)], 3: [(1, 7)], 8: [(1, 9)], 10: [(1, 4)], 2: [(1, 9)], 4: [(1, 5)], 7: [(1, 4)], 6: [(1, 2), (2, 4)], 9: [(1, 6)]}, padri: [4], figli: [6, 7, 8, 9, 10, 11], mosse: [(3, 9, 6, 7)], infeasibleK2: [11, 9]
6 -> costo: 124566.425, rotte: {11: [(1, 8), (8, 3)], 5: [(1, 2)], 3: [(1, 7)], 8: [(1, 9)], 10: [(1, 4)], 2: [(1, 9)], 4: [(1, 5)], 7: [(1, 4)], 6: [(1, 2)], 9: [(1, 6)]}, padri: [5], figli: [], mosse: [(7, 6, 1, 4, 7)], infeasibleK2: [11, 9]
7 -> costo: 118529.3, rotte: {11: [(1, 8), (8, 3)], 5: [(1, 2)], 3: [(1, 7)], 8: [(1, 9)], 10: [(1, 4)], 2: [(1, 9)], 4: [(1, 5)], 7: [(1, 2)], 6: [(1, 4)], 9: [(1, 6)]}, padri: [5], figli: [], mosse: [(7, 6, 4, 2)], infeasibleK2: []
8 -> costo: 118529.3, rotte: {11: [(1, 8), (8, 3)], 5: [(1, 2)], 3: [(1, 7)], 8: [(1, 9)], 10: [(1, 4)], 2: [(1, 9)], 4: [(1, 5)], 7: [(1, 4)], 6: [(1, 2)], 9: [(1, 6)]}, padri: [5], figli: [], mosse: [(10, 6, 1, 4, 7)], infeasibleK2: []
9 -> costo: 118529.3, rotte: {11: [(1, 8), (8, 3)], 5: [(1, 2)], 3: [(1, 7)], 8: [(1, 9)], 10: [(1, 2)], 2: [(1, 9)], 4: [(1, 5)], 7: [(1, 4)], 6: [(1, 4)], 9: [(1, 6)]}, padri: [5], figli: [], mosse: [(10, 6, 4, 2)], infeasibleK2: []
10 -> costo: 119653.0, rotte: {11: [(1, 8), (8, 3)], 5: [(1, 2)], 3: [(1, 7)], 8: [(1, 9)], 10: [(1, 4)], 2: [(1, 9)], 4: [(1, 5)], 7: [(1, 4)], 6: [(1, 4)], 9: [(1, 6)]}, padri: [5], figli: [], mosse: [(5, 6, 1, 2, 1)], infeasibleK2: []
11 -> costo: 119653.0, rotte: {11: [(1, 8), (8, 3)], 5: [(1, 4)], 3: [(1, 7)], 8: [(1, 9)], 10: [(1, 4)], 2: [(1, 9)], 4: [(1, 5)], 7: [(1, 4)], 6: [(1, 2)], 9: [(1, 6)]}, padri: [5], figli: [], mosse: [(5, 6, 2, 4)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 149130.49999999997, rotte: {11: [(1, 3), (3, 4)], 5: [(1, 2)], 3: [(1, 6)], 8: [(1, 4)], 10: [(1, 8), (8, 9), (9, 4)], 2: [(1, 9)], 4: [(1, 5)], 7: [(1, 7), (7, 4)], 6: [(1, 2), (2, 4)], 9: [(1, 6), (6, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {11: [(3, 12), (4, 3)], 5: [(2, 5)], 3: [(6, 5)], 8: [(4, 5)], 10: [(8, 1), (9, 3), (4, 3)], 2: [(9, 5)], 4: [(5, 5)], 7: [(7, 3), (4, 2)], 6: [(2, 1), (4, 4)], 9: [(6, 9), (4, 1)]}
itMosseLS: 11, itMosseTS: 5
time elapsed: 35.64s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 150724.6, rotte: {6: [(1, 6)], 2: [(1, 3)], 8: [(1, 8), (8, 4)], 5: [(1, 4)], 4: [(1, 7), (7, 2)], 7: [(1, 2)], 3: [(1, 9)], 9: [(1, 5), (5, 9)], 10: [(1, 6), (6, 4)], 11: [(1, 3), (3, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 135743.9, rotte: {6: [(1, 6)], 2: [(1, 3)], 8: [(1, 8), (8, 4)], 5: [(1, 4)], 4: [(1, 9), (9, 2)], 7: [(1, 2)], 3: [(1, 9)], 9: [(1, 5), (5, 7)], 10: [(1, 6), (6, 4)], 11: [(1, 3), (3, 4)]}, padri: [0], figli: [2], mosse: [(4, 9, 7, 9)], infeasibleK2: []
2 -> costo: 129102.79999999999, rotte: {6: [(1, 6)], 2: [(1, 3)], 8: [(1, 8), (8, 4)], 5: [(1, 4)], 4: [(1, 9), (9, 2)], 7: [(1, 2)], 3: [(1, 9)], 9: [(1, 5), (5, 7)], 10: [(1, 4)], 11: [(1, 3), (3, 4)]}, padri: [1], figli: [3], mosse: [(6, 10, 1, 6, 9)], infeasibleK2: []
3 -> costo: 122934.5, rotte: {6: [(1, 6)], 2: [(1, 3)], 8: [(1, 8), (8, 3)], 5: [(1, 4)], 4: [(1, 9), (9, 2)], 7: [(1, 2)], 3: [(1, 9)], 9: [(1, 5), (5, 7)], 10: [(1, 4)], 11: [(1, 4)]}, padri: [2], figli: [4], mosse: [(8, 11, 4, 3)], infeasibleK2: []
4 -> costo: 118385.5, rotte: {6: [(1, 6)], 2: [(1, 3)], 8: [(1, 8), (8, 3)], 5: [(1, 4)], 4: [(1, 9)], 7: [(1, 2)], 3: [(1, 9)], 9: [(1, 5), (5, 7)], 10: [(1, 4)], 11: [(1, 4)]}, padri: [3], figli: [5], mosse: [(7, 4, 1, 2, 1)], infeasibleK2: []
5 -> costo: 116859.40000000001, rotte: {6: [(1, 7)], 2: [(1, 3)], 8: [(1, 8), (8, 3)], 5: [(1, 4)], 4: [(1, 9)], 7: [(1, 2)], 3: [(1, 9)], 9: [(1, 5), (5, 6)], 10: [(1, 4)], 11: [(1, 4)]}, padri: [4], figli: [6, 8], mosse: [(6, 9, 6, 7)], infeasibleK2: []
6 -> costo: 116110.6, rotte: {6: [(1, 7)], 2: [(1, 3)], 8: [(1, 8)], 5: [(1, 4)], 4: [(1, 9)], 7: [(1, 2)], 3: [(1, 9)], 9: [(1, 5), (5, 6)], 10: [(1, 4)], 11: [(1, 4)]}, padri: [5], figli: [7, 7, 7], mosse: [(2, 8, 1, 3, 7)], infeasibleK2: []
7 -> costo: 115913.90000000001, rotte: {6: [(1, 7)], 2: [(1, 3)], 8: [(1, 8)], 5: [(1, 4)], 4: [(1, 9)], 7: [(1, 2)], 3: [(1, 9)], 9: [(1, 6), (6, 5)], 10: [(1, 4)], 11: [(1, 4)]}, padri: [6, 6, 6], figli: [], mosse: [(9, 9, 5, 6), (9, 9, 1, 6, 14), (9, 9, 6, 5, 5)], infeasibleK2: []
8 -> costo: 116110.6, rotte: {6: [(1, 7)], 2: [(1, 8)], 8: [(1, 3)], 5: [(1, 4)], 4: [(1, 9)], 7: [(1, 2)], 3: [(1, 9)], 9: [(1, 5), (5, 6)], 10: [(1, 4)], 11: [(1, 4)]}, padri: [5], figli: [9, 10], mosse: [(2, 8, 3, 8)], infeasibleK2: []
9 -> costo: 115913.90000000001, rotte: {6: [(1, 7)], 2: [(1, 8)], 8: [(1, 3)], 5: [(1, 4)], 4: [(1, 9)], 7: [(1, 2)], 3: [(1, 9)], 9: [(1, 6), (6, 5)], 10: [(1, 4)], 11: [(1, 4)]}, padri: [8], figli: [], mosse: [(9, 9, 1, 6, 14)], infeasibleK2: []
10 -> costo: 115913.90000000001, rotte: {6: [(1, 7)], 2: [(1, 8)], 8: [(1, 3)], 5: [(1, 4)], 4: [(1, 9)], 7: [(1, 2)], 3: [(1, 9)], 9: [(1, 6), (6, 5)], 10: [(1, 4)], 11: [(1, 4)]}, padri: [8], figli: [], mosse: [(9, 9, 5, 6)], infeasibleK2: []
bestSolutionIndice: 1
1 -> costo: 135743.9, rotte: {6: [(1, 6)], 2: [(1, 3)], 8: [(1, 8), (8, 4)], 5: [(1, 4)], 4: [(1, 9), (9, 2)], 7: [(1, 2)], 3: [(1, 9)], 9: [(1, 5), (5, 7)], 10: [(1, 6), (6, 4)], 11: [(1, 3), (3, 4)]}, padri: [0], figli: [2], mosse: [(4, 9, 7, 9)], infeasibleK2: []
trasportoPalletDiGamma: {6: [(6, 5)], 2: [(3, 5)], 8: [(8, 1), (4, 4)], 5: [(4, 5)], 4: [(9, 3), (2, 1)], 7: [(2, 5)], 3: [(9, 5)], 9: [(5, 5), (7, 3)], 10: [(6, 9), (4, 1)], 11: [(3, 7), (4, 8)]}
itMosseLS: 12, itMosseTS: 5
time elapsed: 35.00s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 139173.00000000003, rotte: {9: [(1, 2), (2, 4)], 8: [(1, 7), (7, 6)], 7: [(1, 3)], 3: [(1, 8), (8, 4)], 4: [(1, 9)], 2: [(1, 4)], 5: [(1, 6)], 11: [(1, 5), (5, 6)], 10: [(1, 3), (3, 4)], 6: [(1, 9), (9, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 132778.00000000003, rotte: {9: [(1, 2), (2, 4)], 8: [(1, 6)], 7: [(1, 3)], 3: [(1, 8), (8, 4)], 4: [(1, 9)], 2: [(1, 4)], 5: [(1, 7)], 11: [(1, 5), (5, 6)], 10: [(1, 3), (3, 4)], 6: [(1, 9), (9, 4)]}, padri: [0], figli: [2], mosse: [(8, 5, 7, 6)], infeasibleK2: []
2 -> costo: 127704.80000000002, rotte: {9: [(1, 2), (2, 4)], 8: [(1, 6)], 7: [(1, 3)], 3: [(1, 8), (8, 4)], 4: [(1, 9)], 2: [(1, 4)], 5: [(1, 7)], 11: [(1, 5), (5, 6)], 10: [(1, 3), (3, 4)], 6: [(1, 9)]}, padri: [1], figli: [3], mosse: [(2, 6, 1, 4, 2)], infeasibleK2: []
3 -> costo: 121536.50000000001, rotte: {9: [(1, 2), (2, 4)], 8: [(1, 6)], 7: [(1, 3)], 3: [(1, 8), (8, 3)], 4: [(1, 9)], 2: [(1, 4)], 5: [(1, 7)], 11: [(1, 5), (5, 6)], 10: [(1, 4)], 6: [(1, 9)]}, padri: [2], figli: [4], mosse: [(3, 10, 4, 3)], infeasibleK2: []
4 -> costo: 118783.7, rotte: {9: [(1, 2)], 8: [(1, 6)], 7: [(1, 3)], 3: [(1, 8), (8, 3)], 4: [(1, 9)], 2: [(1, 4)], 5: [(1, 7)], 11: [(1, 5), (5, 6)], 10: [(1, 4)], 6: [(1, 9)]}, padri: [3], figli: [5, 8], mosse: [(2, 9, 1, 4, 4)], infeasibleK2: []
5 -> costo: 117725.60000000002, rotte: {9: [(1, 2)], 8: [(1, 5)], 7: [(1, 3)], 3: [(1, 8), (8, 3)], 4: [(1, 9)], 2: [(1, 4)], 5: [(1, 7)], 11: [(1, 6)], 10: [(1, 4)], 6: [(1, 9)]}, padri: [4], figli: [6, 7], mosse: [(8, 11, 6, 5)], infeasibleK2: []
6 -> costo: 116976.8, rotte: {9: [(1, 2)], 8: [(1, 5)], 7: [(1, 3)], 3: [(1, 8)], 4: [(1, 9)], 2: [(1, 4)], 5: [(1, 7)], 11: [(1, 6)], 10: [(1, 4)], 6: [(1, 9)]}, padri: [5], figli: [], mosse: [(7, 3, 1, 3, 7)], infeasibleK2: []
7 -> costo: 116976.8, rotte: {9: [(1, 2)], 8: [(1, 5)], 7: [(1, 8)], 3: [(1, 3)], 4: [(1, 9)], 2: [(1, 4)], 5: [(1, 7)], 11: [(1, 6)], 10: [(1, 4)], 6: [(1, 9)]}, padri: [5], figli: [], mosse: [(7, 3, 3, 8)], infeasibleK2: []
8 -> costo: 117725.59999999999, rotte: {9: [(1, 2)], 8: [(1, 6)], 7: [(1, 3)], 3: [(1, 8), (8, 3)], 4: [(1, 9)], 2: [(1, 4)], 5: [(1, 7)], 11: [(1, 5)], 10: [(1, 4)], 6: [(1, 9)]}, padri: [4], figli: [9, 10], mosse: [(8, 11, 1, 6, 7)], infeasibleK2: []
9 -> costo: 116976.8, rotte: {9: [(1, 2)], 8: [(1, 6)], 7: [(1, 8)], 3: [(1, 3)], 4: [(1, 9)], 2: [(1, 4)], 5: [(1, 7)], 11: [(1, 5)], 10: [(1, 4)], 6: [(1, 9)]}, padri: [8], figli: [], mosse: [(7, 3, 3, 8)], infeasibleK2: []
10 -> costo: 116976.8, rotte: {9: [(1, 2)], 8: [(1, 6)], 7: [(1, 3)], 3: [(1, 8)], 4: [(1, 9)], 2: [(1, 4)], 5: [(1, 7)], 11: [(1, 5)], 10: [(1, 4)], 6: [(1, 9)]}, padri: [8], figli: [], mosse: [(7, 3, 1, 3, 7)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 139173.00000000003, rotte: {9: [(1, 2), (2, 4)], 8: [(1, 7), (7, 6)], 7: [(1, 3)], 3: [(1, 8), (8, 4)], 4: [(1, 9)], 2: [(1, 4)], 5: [(1, 6)], 11: [(1, 5), (5, 6)], 10: [(1, 3), (3, 4)], 6: [(1, 9), (9, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {9: [(2, 6), (4, 4)], 8: [(7, 3), (6, 2)], 7: [(3, 5)], 3: [(8, 1), (4, 4)], 4: [(9, 5)], 2: [(4, 5)], 5: [(6, 5)], 11: [(5, 5), (6, 7)], 10: [(3, 7), (4, 3)], 6: [(9, 3), (4, 2)]}
itMosseLS: 10, itMosseTS: 5
time elapsed: 37.71s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 153001.7, rotte: {7: [(1, 5)], 2: [(1, 8), (8, 6)], 10: [(1, 3)], 6: [(1, 4)], 11: [(1, 2), (2, 4), (4, 9)], 5: [(1, 9)], 8: [(1, 7), (7, 9)], 4: [(1, 6)], 9: [(1, 3), (3, 6)], 3: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 139668.1, rotte: {7: [(1, 5), (5, 7)], 2: [(1, 8), (8, 6)], 10: [(1, 3)], 6: [(1, 4)], 11: [(1, 2), (2, 4), (4, 9)], 5: [(1, 9)], 8: [(1, 9)], 4: [(1, 6)], 9: [(1, 3), (3, 6)], 3: [(1, 4)]}, padri: [0], figli: [2], mosse: [(7, 8, 5, 7, 3)], infeasibleK2: []
2 -> costo: 128468.30000000002, rotte: {7: [(1, 5), (5, 7)], 2: [(1, 8), (8, 3)], 10: [(1, 3)], 6: [(1, 4)], 11: [(1, 2), (2, 4), (4, 9)], 5: [(1, 9)], 8: [(1, 9)], 4: [(1, 6)], 9: [(1, 6)], 3: [(1, 4)]}, padri: [1], figli: [3], mosse: [(2, 9, 6, 3)], infeasibleK2: []
3 -> costo: 123062.60000000002, rotte: {7: [(1, 5), (5, 7)], 2: [(1, 8), (8, 3)], 10: [(1, 3)], 6: [(1, 4)], 11: [(1, 2), (2, 4)], 5: [(1, 9)], 8: [(1, 9)], 4: [(1, 6)], 9: [(1, 6)], 3: [(1, 4)]}, padri: [2], figli: [4], mosse: [(5, 11, 1, 9, 1)], infeasibleK2: []
4 -> costo: 120309.80000000002, rotte: {7: [(1, 5), (5, 7)], 2: [(1, 8), (8, 3)], 10: [(1, 3)], 6: [(1, 4)], 11: [(1, 4)], 5: [(1, 9)], 8: [(1, 9)], 4: [(1, 6)], 9: [(1, 6)], 3: [(1, 2)]}, padri: [3], figli: [5], mosse: [(11, 3, 2, 4)], infeasibleK2: []
5 -> costo: 118587.00000000001, rotte: {7: [(1, 7)], 2: [(1, 8), (8, 3)], 10: [(1, 3)], 6: [(1, 4)], 11: [(1, 4)], 5: [(1, 9)], 8: [(1, 9)], 4: [(1, 6), (6, 5)], 9: [(1, 6)], 3: [(1, 2)]}, padri: [4], figli: [6, 9], mosse: [(4, 7, 6, 5, 5)], infeasibleK2: []
6 -> costo: 117725.6, rotte: {7: [(1, 7)], 2: [(1, 8), (8, 3)], 10: [(1, 3)], 6: [(1, 4)], 11: [(1, 4)], 5: [(1, 9)], 8: [(1, 9)], 4: [(1, 6)], 9: [(1, 5)], 3: [(1, 2)]}, padri: [5], figli: [7, 8], mosse: [(4, 9, 5, 6)], infeasibleK2: []
7 -> costo: 116976.8, rotte: {7: [(1, 7)], 2: [(1, 8)], 10: [(1, 3)], 6: [(1, 4)], 11: [(1, 4)], 5: [(1, 9)], 8: [(1, 9)], 4: [(1, 6)], 9: [(1, 5)], 3: [(1, 2)]}, padri: [6], figli: [], mosse: [(10, 2, 1, 3, 2)], infeasibleK2: []
8 -> costo: 116976.8, rotte: {7: [(1, 7)], 2: [(1, 3)], 10: [(1, 8)], 6: [(1, 4)], 11: [(1, 4)], 5: [(1, 9)], 8: [(1, 9)], 4: [(1, 6)], 9: [(1, 5)], 3: [(1, 2)]}, padri: [6], figli: [], mosse: [(2, 10, 8, 3)], infeasibleK2: []
9 -> costo: 117725.6, rotte: {7: [(1, 7)], 2: [(1, 8), (8, 3)], 10: [(1, 3)], 6: [(1, 4)], 11: [(1, 4)], 5: [(1, 9)], 8: [(1, 9)], 4: [(1, 5)], 9: [(1, 6)], 3: [(1, 2)]}, padri: [5], figli: [10, 11], mosse: [(9, 4, 1, 6, 5)], infeasibleK2: []
10 -> costo: 116976.8, rotte: {7: [(1, 7)], 2: [(1, 3)], 10: [(1, 8)], 6: [(1, 4)], 11: [(1, 4)], 5: [(1, 9)], 8: [(1, 9)], 4: [(1, 5)], 9: [(1, 6)], 3: [(1, 2)]}, padri: [9], figli: [], mosse: [(2, 10, 8, 3)], infeasibleK2: []
11 -> costo: 116976.8, rotte: {7: [(1, 7)], 2: [(1, 8)], 10: [(1, 3)], 6: [(1, 4)], 11: [(1, 4)], 5: [(1, 9)], 8: [(1, 9)], 4: [(1, 5)], 9: [(1, 6)], 3: [(1, 2)]}, padri: [9], figli: [], mosse: [(10, 2, 1, 3, 2)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 153001.7, rotte: {7: [(1, 5)], 2: [(1, 8), (8, 6)], 10: [(1, 3)], 6: [(1, 4)], 11: [(1, 2), (2, 4), (4, 9)], 5: [(1, 9)], 8: [(1, 7), (7, 9)], 4: [(1, 6)], 9: [(1, 3), (3, 6)], 3: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {7: [(5, 5)], 2: [(8, 1), (6, 4)], 10: [(3, 10)], 6: [(4, 5)], 11: [(2, 6), (4, 8), (9, 1)], 5: [(9, 5)], 8: [(7, 3), (9, 2)], 4: [(6, 5)], 9: [(3, 2), (6, 5)], 3: [(4, 5)]}
itMosseLS: 11, itMosseTS: 5
time elapsed: 38.46s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 146102.7, rotte: {4: [(1, 7), (7, 9)], 3: [(1, 5)], 9: [(1, 2), (2, 3), (3, 4)], 7: [(1, 3)], 8: [(1, 6)], 5: [(1, 9)], 6: [(1, 8), (8, 9)], 10: [(1, 4)], 2: [(1, 3)], 11: [(1, 6), (6, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 132769.1, rotte: {4: [(1, 9)], 3: [(1, 5), (5, 7)], 9: [(1, 2), (2, 3), (3, 4)], 7: [(1, 3)], 8: [(1, 6)], 5: [(1, 9)], 6: [(1, 8), (8, 9)], 10: [(1, 4)], 2: [(1, 3)], 11: [(1, 6), (6, 4)]}, padri: [0], figli: [2], mosse: [(3, 4, 5, 7, 3)], infeasibleK2: []
2 -> costo: 126128.00000000001, rotte: {4: [(1, 9)], 3: [(1, 5), (5, 7)], 9: [(1, 2), (2, 3), (3, 4)], 7: [(1, 3)], 8: [(1, 4)], 5: [(1, 9)], 6: [(1, 8), (8, 9)], 10: [(1, 4)], 2: [(1, 3)], 11: [(1, 6)]}, padri: [1], figli: [3], mosse: [(8, 11, 6, 4)], infeasibleK2: []
3 -> costo: 120988.6, rotte: {4: [(1, 9)], 3: [(1, 5), (5, 7)], 9: [(1, 2), (2, 3), (3, 4)], 7: [(1, 3)], 8: [(1, 4)], 5: [(1, 9)], 6: [(1, 9)], 10: [(1, 4)], 2: [(1, 8), (8, 3)], 11: [(1, 6)]}, padri: [2], figli: [4], mosse: [(2, 6, 1, 8, 1)], infeasibleK2: []
4 -> costo: 115509.1, rotte: {4: [(1, 9)], 3: [(1, 5), (5, 7)], 9: [(1, 2), (2, 4)], 7: [(1, 3)], 8: [(1, 3)], 5: [(1, 9)], 6: [(1, 9)], 10: [(1, 4)], 2: [(1, 8), (8, 3)], 11: [(1, 6)]}, padri: [3], figli: [5], mosse: [(9, 8, 3, 4)], infeasibleK2: []
5 -> costo: 112756.3, rotte: {4: [(1, 9)], 3: [(1, 5), (5, 7)], 9: [(1, 2)], 7: [(1, 3)], 8: [(1, 3)], 5: [(1, 9)], 6: [(1, 9)], 10: [(1, 4)], 2: [(1, 8), (8, 3)], 11: [(1, 6)]}, padri: [4], figli: [6], mosse: [(10, 9, 1, 4, 8)], infeasibleK2: []
6 -> costo: 111230.19999999998, rotte: {4: [(1, 9)], 3: [(1, 5), (5, 6)], 9: [(1, 2)], 7: [(1, 3)], 8: [(1, 3)], 5: [(1, 9)], 6: [(1, 9)], 10: [(1, 4)], 2: [(1, 8), (8, 3)], 11: [(1, 7)]}, padri: [5], figli: [7, 9], mosse: [(3, 11, 7, 6)], infeasibleK2: []
7 -> costo: 110481.4, rotte: {4: [(1, 9)], 3: [(1, 5), (5, 6)], 9: [(1, 2)], 7: [(1, 3)], 8: [(1, 3)], 5: [(1, 9)], 6: [(1, 9)], 10: [(1, 4)], 2: [(1, 8)], 11: [(1, 7)]}, padri: [6], figli: [8, 8, 8], mosse: [(7, 2, 1, 3, 5)], infeasibleK2: []
8 -> costo: 110284.70000000001, rotte: {4: [(1, 9)], 3: [(1, 6), (6, 5)], 9: [(1, 2)], 7: [(1, 3)], 8: [(1, 3)], 5: [(1, 9)], 6: [(1, 9)], 10: [(1, 4)], 2: [(1, 8)], 11: [(1, 7)]}, padri: [7, 7, 7], figli: [], mosse: [(3, 3, 5, 6), (3, 3, 1, 6, 14), (3, 3, 6, 5, 5)], infeasibleK2: []
9 -> costo: 110481.4, rotte: {4: [(1, 9)], 3: [(1, 5), (5, 6)], 9: [(1, 2)], 7: [(1, 8)], 8: [(1, 3)], 5: [(1, 9)], 6: [(1, 9)], 10: [(1, 4)], 2: [(1, 3)], 11: [(1, 7)]}, padri: [6], figli: [10, 10], mosse: [(7, 2, 3, 8)], infeasibleK2: []
10 -> costo: 110284.69999999998, rotte: {4: [(1, 9)], 3: [(1, 6), (6, 5)], 9: [(1, 2)], 7: [(1, 8)], 8: [(1, 3)], 5: [(1, 9)], 6: [(1, 9)], 10: [(1, 4)], 2: [(1, 3)], 11: [(1, 7)]}, padri: [9, 9], figli: [], mosse: [(3, 3, 1, 6, 14), (3, 3, 5, 6)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 146102.7, rotte: {4: [(1, 7), (7, 9)], 3: [(1, 5)], 9: [(1, 2), (2, 3), (3, 4)], 7: [(1, 3)], 8: [(1, 6)], 5: [(1, 9)], 6: [(1, 8), (8, 9)], 10: [(1, 4)], 2: [(1, 3)], 11: [(1, 6), (6, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {4: [(7, 3), (9, 2)], 3: [(5, 5)], 9: [(2, 6), (3, 2), (4, 2)], 7: [(3, 5)], 8: [(6, 5)], 5: [(9, 5)], 6: [(8, 1), (9, 1)], 10: [(4, 10)], 2: [(3, 5)], 11: [(6, 9), (4, 6)]}
itMosseLS: 13, itMosseTS: 5
time elapsed: 34.69s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 151129.30000000002, rotte: {10: [(1, 5), (5, 2), (2, 4)], 6: [(1, 9)], 5: [(1, 4)], 8: [(1, 2)], 9: [(1, 8), (8, 6)], 11: [(1, 3), (3, 4)], 4: [(1, 7), (7, 4)], 2: [(1, 6)], 7: [(1, 9), (9, 4)], 3: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 139539.5, rotte: {10: [(1, 8), (8, 2), (2, 4)], 6: [(1, 9)], 5: [(1, 4)], 8: [(1, 2)], 9: [(1, 5), (5, 6)], 11: [(1, 3), (3, 4)], 4: [(1, 7), (7, 4)], 2: [(1, 6)], 7: [(1, 9), (9, 4)], 3: [(1, 4)]}, padri: [0], figli: [2], mosse: [(10, 9, 5, 8)], infeasibleK2: []
2 -> costo: 132764.0, rotte: {10: [(1, 8), (8, 2), (2, 4)], 6: [(1, 9)], 5: [(1, 4)], 8: [(1, 2)], 9: [(1, 5), (5, 6)], 11: [(1, 3), (3, 4)], 4: [(1, 7)], 2: [(1, 6)], 7: [(1, 9), (9, 4)], 3: [(1, 4)]}, padri: [1], figli: [3], mosse: [(3, 4, 1, 4, 2)], infeasibleK2: []
3 -> costo: 127648.79999999999, rotte: {10: [(1, 2), (2, 4)], 6: [(1, 9)], 5: [(1, 4)], 8: [(1, 2)], 9: [(1, 5), (5, 6)], 11: [(1, 3), (3, 8)], 4: [(1, 7)], 2: [(1, 6)], 7: [(1, 9), (9, 4)], 3: [(1, 4)]}, padri: [2], figli: [4], mosse: [(10, 11, 8, 4)], infeasibleK2: []
4 -> costo: 122575.59999999999, rotte: {10: [(1, 2), (2, 4)], 6: [(1, 9)], 5: [(1, 4)], 8: [(1, 2)], 9: [(1, 5), (5, 6)], 11: [(1, 3), (3, 8)], 4: [(1, 7)], 2: [(1, 6)], 7: [(1, 9)], 3: [(1, 4)]}, padri: [3], figli: [5], mosse: [(3, 7, 1, 4, 2)], infeasibleK2: []
5 -> costo: 119822.80000000002, rotte: {10: [(1, 4)], 6: [(1, 9)], 5: [(1, 4)], 8: [(1, 2)], 9: [(1, 5), (5, 6)], 11: [(1, 3), (3, 8)], 4: [(1, 7)], 2: [(1, 6)], 7: [(1, 9)], 3: [(1, 2)]}, padri: [4], figli: [6, 8], mosse: [(10, 3, 2, 4)], infeasibleK2: []
6 -> costo: 118764.70000000001, rotte: {10: [(1, 4)], 6: [(1, 9)], 5: [(1, 4)], 8: [(1, 2)], 9: [(1, 5)], 11: [(1, 3), (3, 8)], 4: [(1, 7)], 2: [(1, 6)], 7: [(1, 9)], 3: [(1, 2)]}, padri: [5], figli: [7, 7, 7], mosse: [(2, 9, 1, 6, 9)], infeasibleK2: []
7 -> costo: 118529.30000000002, rotte: {10: [(1, 4)], 6: [(1, 9)], 5: [(1, 4)], 8: [(1, 2)], 9: [(1, 5)], 11: [(1, 8), (8, 3)], 4: [(1, 7)], 2: [(1, 6)], 7: [(1, 9)], 3: [(1, 2)]}, padri: [6, 6, 6], figli: [], mosse: [(11, 11, 3, 8), (11, 11, 1, 8, 1), (11, 11, 8, 3, 12)], infeasibleK2: []
8 -> costo: 118764.69999999998, rotte: {10: [(1, 4)], 6: [(1, 9)], 5: [(1, 4)], 8: [(1, 2)], 9: [(1, 6)], 11: [(1, 3), (3, 8)], 4: [(1, 7)], 2: [(1, 5)], 7: [(1, 9)], 3: [(1, 2)]}, padri: [5], figli: [9, 9], mosse: [(9, 2, 5, 6)], infeasibleK2: []
9 -> costo: 118529.29999999999, rotte: {10: [(1, 4)], 6: [(1, 9)], 5: [(1, 4)], 8: [(1, 2)], 9: [(1, 6)], 11: [(1, 8), (8, 3)], 4: [(1, 7)], 2: [(1, 5)], 7: [(1, 9)], 3: [(1, 2)]}, padri: [8, 8], figli: [], mosse: [(11, 11, 1, 8, 1), (11, 11, 3, 8)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 151129.30000000002, rotte: {10: [(1, 5), (5, 2), (2, 4)], 6: [(1, 9)], 5: [(1, 4)], 8: [(1, 2)], 9: [(1, 8), (8, 6)], 11: [(1, 3), (3, 4)], 4: [(1, 7), (7, 4)], 2: [(1, 6)], 7: [(1, 9), (9, 4)], 3: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {10: [(5, 5), (2, 1), (4, 1)], 6: [(9, 5)], 5: [(4, 5)], 8: [(2, 5)], 9: [(8, 1), (6, 9)], 11: [(3, 12), (4, 3)], 4: [(7, 3), (4, 2)], 2: [(6, 5)], 7: [(9, 3), (4, 2)], 3: [(4, 5)]}
itMosseLS: 12, itMosseTS: 5
time elapsed: 36.43s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 141973.3, rotte: {4: [(1, 8), (8, 6)], 10: [(1, 2), (2, 4)], 2: [(1, 9)], 3: [(1, 7), (7, 4)], 6: [(1, 5)], 7: [(1, 3)], 9: [(1, 6)], 5: [(1, 4)], 8: [(1, 9), (9, 4)], 11: [(1, 3), (3, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
1 -> costo: 133870.1, rotte: {4: [(1, 6)], 10: [(1, 2), (2, 4)], 2: [(1, 9)], 3: [(1, 7), (7, 4)], 6: [(1, 5)], 7: [(1, 3)], 9: [(1, 8)], 5: [(1, 4)], 8: [(1, 9), (9, 4)], 11: [(1, 3), (3, 4)]}, padri: [0], figli: [2], mosse: [(4, 9, 8, 6)], infeasibleK2: []
2 -> costo: 127094.6, rotte: {4: [(1, 6)], 10: [(1, 2), (2, 4)], 2: [(1, 9)], 3: [(1, 7)], 6: [(1, 5)], 7: [(1, 3)], 9: [(1, 8)], 5: [(1, 4)], 8: [(1, 9), (9, 4)], 11: [(1, 3), (3, 4)]}, padri: [1], figli: [3], mosse: [(5, 3, 1, 4, 2)], infeasibleK2: []
3 -> costo: 122021.4, rotte: {4: [(1, 6)], 10: [(1, 2), (2, 4)], 2: [(1, 9)], 3: [(1, 7)], 6: [(1, 5)], 7: [(1, 3)], 9: [(1, 8)], 5: [(1, 9)], 8: [(1, 4)], 11: [(1, 3), (3, 4)]}, padri: [2], figli: [4], mosse: [(5, 8, 4, 9)], infeasibleK2: []
4 -> costo: 117802.2, rotte: {4: [(1, 6)], 10: [(1, 2), (2, 4)], 2: [(1, 9)], 3: [(1, 7)], 6: [(1, 5)], 7: [(1, 3)], 9: [(1, 8)], 5: [(1, 9)], 8: [(1, 4)], 11: [(1, 3)]}, padri: [3, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7], figli: [5, 6, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7], mosse: [(8, 11, 1, 4, 5), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6), (10, 8, 1, 2, 6)], infeasibleK2: []
5 -> costo: 115049.4, rotte: {4: [(1, 6)], 10: [(1, 4)], 2: [(1, 9)], 3: [(1, 7)], 6: [(1, 5)], 7: [(1, 3)], 9: [(1, 8)], 5: [(1, 9)], 8: [(1, 2)], 11: [(1, 3)]}, padri: [4, 7], figli: [], mosse: [(10, 8, 2, 4), (10, 8, 1, 4, 14)], infeasibleK2: []
6 -> costo: 115049.4, rotte: {4: [(1, 6)], 10: [(1, 2)], 2: [(1, 9)], 3: [(1, 7)], 6: [(1, 5)], 7: [(1, 3)], 9: [(1, 8)], 5: [(1, 9)], 8: [(1, 4)], 11: [(1, 3)]}, padri: [4], figli: [], mosse: [(8, 10, 1, 4, 4)], infeasibleK2: []
7 -> costo: 117802.19999999998, rotte: {4: [(1, 6)], 10: [(1, 4)], 2: [(1, 9)], 3: [(1, 7)], 6: [(1, 5)], 7: [(1, 3)], 9: [(1, 8)], 5: [(1, 9)], 8: [(1, 2), (2, 4)], 11: [(1, 3)]}, padri: [4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], figli: [8, 5, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4], mosse: [(8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6), (8, 10, 1, 2, 6)], infeasibleK2: []
8 -> costo: 115049.4, rotte: {4: [(1, 6)], 10: [(1, 2)], 2: [(1, 9)], 3: [(1, 7)], 6: [(1, 5)], 7: [(1, 3)], 9: [(1, 8)], 5: [(1, 9)], 8: [(1, 4)], 11: [(1, 3)]}, padri: [7], figli: [], mosse: [(10, 8, 4, 2)], infeasibleK2: []
bestSolutionIndice: 0
0 -> costo: 141973.3, rotte: {4: [(1, 8), (8, 6)], 10: [(1, 2), (2, 4)], 2: [(1, 9)], 3: [(1, 7), (7, 4)], 6: [(1, 5)], 7: [(1, 3)], 9: [(1, 6)], 5: [(1, 4)], 8: [(1, 9), (9, 4)], 11: [(1, 3), (3, 4)]}, padri: [-1], figli: [1], mosse: [-1], infeasibleK2: []
trasportoPalletDiGamma: {4: [(8, 1), (6, 4)], 10: [(2, 6), (4, 4)], 2: [(9, 5)], 3: [(7, 3), (4, 2)], 6: [(5, 5)], 7: [(3, 5)], 9: [(6, 10)], 5: [(4, 5)], 8: [(9, 3), (4, 2)], 11: [(3, 7), (4, 5)]}
itMosseLS: 1047, itMosseTS: 4
time elapsed: 2984.45s.


##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
