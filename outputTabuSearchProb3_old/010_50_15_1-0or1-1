itNSIMax: 50, itMosseTSMax: 15.
##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 87149.9, rotte: {8: [(1, 4), (4, 10)], 2: [(1, 3)], 4: [(1, 2)], 6: [(1, 7), (7, 8)], 7: [(1, 9), (9, 3)], 9: [(1, 11), (11, 2), (2, 3)], 3: [(1, 5), (5, 10)], 5: [(1, 6), (6, 8), (8, 10)]}, padri: [-1], figli: [1, 3], mosse: [-1]
1 -> costo: 83798.5, rotte: {8: [(1, 4), (4, 10)], 2: [(1, 3)], 4: [(1, 2)], 6: [(1, 7), (7, 8)], 7: [(1, 9), (9, 3)], 9: [(1, 2), (2, 3), (3, 11)], 3: [(1, 5), (5, 10)], 5: [(1, 6), (6, 8), (8, 10)]}, padri: [0], figli: [2, 2, 2, 4, 4, 4], mosse: [(9, 9, 3, 11, 6)]
2 -> costo: 81316.5, rotte: {8: [(1, 4), (4, 10)], 2: [(1, 3)], 4: [(1, 2)], 6: [(1, 7), (7, 8)], 7: [(1, 3), (3, 9)], 9: [(1, 2), (2, 3), (3, 11)], 3: [(1, 5), (5, 10)], 5: [(1, 6), (6, 8), (8, 10)]}, padri: [1, 1, 1, 3, 6, 6, 6, 7], figli: [], mosse: [(7, 7, 9, 3), (7, 7, 1, 3, 6), (7, 7, 3, 9, 14), (9, 9, 3, 11, 6), (9, 9, 11, 3), (9, 9, 2, 3, 2), (9, 9, 3, 11, 6), (9, 9, 1, 2, 10)]
3 -> costo: 84667.9, rotte: {8: [(1, 4), (4, 10)], 2: [(1, 3)], 4: [(1, 2)], 6: [(1, 7), (7, 8)], 7: [(1, 3), (3, 9)], 9: [(1, 11), (11, 2), (2, 3)], 3: [(1, 5), (5, 10)], 5: [(1, 6), (6, 8), (8, 10)]}, padri: [0], figli: [2, 4, 6, 7], mosse: [(7, 7, 9, 3)]
4 -> costo: 83698.8, rotte: {8: [(1, 4), (4, 10)], 2: [(1, 3)], 4: [(1, 2)], 6: [(1, 7), (7, 8)], 7: [(1, 3), (3, 9)], 9: [(1, 11), (11, 3), (3, 2)], 3: [(1, 5), (5, 10)], 5: [(1, 6), (6, 8), (8, 10)]}, padri: [3], figli: [5, 6, 7], mosse: [(9, 9, 2, 3)]
5 -> costo: 82693.0, rotte: {8: [(1, 4), (4, 10)], 2: [(1, 3)], 4: [(1, 2)], 6: [(1, 7), (7, 8)], 7: [(1, 3), (3, 9)], 9: [(1, 3), (3, 2), (2, 11)], 3: [(1, 5), (5, 10)], 5: [(1, 6), (6, 8), (8, 10)]}, padri: [4, 6, 7, 7], figli: [], mosse: [(9, 9, 2, 11, 6), (9, 9, 1, 3, 2), (9, 9, 11, 2), (9, 9, 3, 2, 10)]
6 -> costo: 83291.4, rotte: {8: [(1, 4), (4, 10)], 2: [(1, 3)], 4: [(1, 2)], 6: [(1, 7), (7, 8)], 7: [(1, 3), (3, 9)], 9: [(1, 2), (2, 11), (11, 3)], 3: [(1, 5), (5, 10)], 5: [(1, 6), (6, 8), (8, 10)]}, padri: [4, 3], figli: [2, 2, 2, 5], mosse: [(9, 9, 1, 2, 10), (9, 9, 2, 11, 6)]
7 -> costo: 83698.8, rotte: {8: [(1, 4), (4, 10)], 2: [(1, 3)], 4: [(1, 2)], 6: [(1, 7), (7, 8)], 7: [(1, 3), (3, 9)], 9: [(1, 3), (3, 11), (11, 2)], 3: [(1, 5), (5, 10)], 5: [(1, 6), (6, 8), (8, 10)]}, padri: [4, 3], figli: [5, 2, 5], mosse: [(9, 9, 1, 3, 2)]
bestSolutionIndice: 2
2 -> costo: 81316.5, rotte: {8: [(1, 4), (4, 10)], 2: [(1, 3)], 4: [(1, 2)], 6: [(1, 7), (7, 8)], 7: [(1, 3), (3, 9)], 9: [(1, 2), (2, 3), (3, 11)], 3: [(1, 5), (5, 10)], 5: [(1, 6), (6, 8), (8, 10)]}, padri: [1, 1, 1, 3, 6, 6, 6, 7], figli: [], mosse: [(7, 7, 9, 3), (7, 7, 1, 3, 6), (7, 7, 3, 9, 14), (9, 9, 3, 11, 6), (9, 9, 11, 3), (9, 9, 2, 3, 2), (9, 9, 3, 11, 6), (9, 9, 1, 2, 10)]
trasportoPalletDiGamma: {8: [(4, 15), (10, 5)], 2: [(3, 10)], 4: [(2, 10)], 6: [(7, 1), (8, 14)], 7: [(3, 6), (9, 14)], 9: [(2, 10), (3, 2), (11, 6)], 3: [(5, 8), (10, 2)], 5: [(6, 4), (8, 4), (10, 2)]}
itMosseLS: 18, itMosseTS: 15
time elapsed: 365.30s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 85017.09999999999, rotte: {4: [(1, 7), (7, 4)], 5: [(1, 8)], 7: [(1, 2)], 9: [(1, 10), (10, 8), (8, 11)], 3: [(1, 6), (6, 9)], 6: [(1, 5), (5, 4)], 2: [(1, 9)], 8: [(1, 3), (3, 11)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 82114.79999999999, rotte: {4: [(1, 4)], 5: [(1, 8)], 7: [(1, 2)], 9: [(1, 7), (7, 10), (10, 8), (8, 11)], 3: [(1, 6), (6, 9)], 6: [(1, 5), (5, 4)], 2: [(1, 9)], 8: [(1, 3), (3, 11)]}, padri: [0], figli: [2], mosse: [(9, 4, 1, 7, 1)]
2 -> costo: 81453.4, rotte: {4: [(1, 4)], 5: [(1, 8)], 7: [(1, 2)], 9: [(1, 7), (7, 10), (10, 8), (8, 11)], 3: [(1, 6), (6, 9)], 6: [(1, 4), (4, 5)], 2: [(1, 9)], 8: [(1, 3), (3, 11)]}, padri: [1], figli: [3, 5, 6], mosse: [(6, 6, 5, 4)]
3 -> costo: 79171.1, rotte: {4: [(1, 4)], 5: [(1, 8)], 7: [(1, 2)], 9: [(1, 7), (7, 8), (8, 10), (10, 11)], 3: [(1, 6), (6, 9)], 6: [(1, 4), (4, 5)], 2: [(1, 9)], 8: [(1, 3), (3, 11)]}, padri: [2, 5], figli: [4, 4, 4, 4, 7, 7, 7, 7], mosse: [(9, 9, 8, 10, 9), (9, 9, 7, 8, 3)]
4 -> costo: 77485.5, rotte: {4: [(1, 4)], 5: [(1, 8)], 7: [(1, 2)], 9: [(1, 7), (7, 8), (8, 10), (10, 11)], 3: [(1, 6), (6, 9)], 6: [(1, 4), (4, 5)], 2: [(1, 9)], 8: [(1, 3)]}, padri: [3, 3, 3, 3, 6, 9, 9, 9, 7], figli: [], mosse: [(9, 8, 1, 11, 2), (9, 8, 7, 11, 2), (9, 8, 8, 11, 2), (9, 8, 10, 11, 2), (9, 9, 7, 8, 3), (9, 9, 11, 10), (9, 9, 8, 10, 9), (9, 9, 10, 11, 6), (9, 9, 7, 8, 3)]
5 -> costo: 80951.9, rotte: {4: [(1, 4)], 5: [(1, 8)], 7: [(1, 2)], 9: [(1, 7), (7, 10), (10, 11), (11, 8)], 3: [(1, 6), (6, 9)], 6: [(1, 4), (4, 5)], 2: [(1, 9)], 8: [(1, 3), (3, 11)]}, padri: [2], figli: [3, 6], mosse: [(9, 9, 8, 11)]
6 -> costo: 79266.29999999999, rotte: {4: [(1, 4)], 5: [(1, 8)], 7: [(1, 2)], 9: [(1, 7), (7, 10), (10, 11), (11, 8)], 3: [(1, 6), (6, 9)], 6: [(1, 4), (4, 5)], 2: [(1, 9)], 8: [(1, 3)]}, padri: [5], figli: [4, 7], mosse: [(9, 8, 1, 11, 2)]
7 -> costo: 78409.7, rotte: {4: [(1, 4)], 5: [(1, 8)], 7: [(1, 2)], 9: [(1, 8), (8, 7), (7, 10), (10, 11)], 3: [(1, 6), (6, 9)], 6: [(1, 4), (4, 5)], 2: [(1, 9)], 8: [(1, 3)]}, padri: [6], figli: [8, 4, 8, 8], mosse: [(9, 9, 1, 8, 3)]
8 -> costo: 78138.5, rotte: {4: [(1, 4)], 5: [(1, 8)], 7: [(1, 2)], 9: [(1, 8), (8, 7), (7, 11), (11, 10)], 3: [(1, 6), (6, 9)], 6: [(1, 4), (4, 5)], 2: [(1, 9)], 8: [(1, 3)]}, padri: [7, 7, 7], figli: [9], mosse: [(9, 9, 10, 11), (9, 9, 7, 11, 6), (9, 9, 11, 10, 9)]
9 -> costo: 77738.09999999999, rotte: {4: [(1, 4)], 5: [(1, 8)], 7: [(1, 2)], 9: [(1, 7), (7, 8), (8, 11), (11, 10)], 3: [(1, 6), (6, 9)], 6: [(1, 4), (4, 5)], 2: [(1, 9)], 8: [(1, 3)]}, padri: [8], figli: [4, 4, 4], mosse: [(9, 9, 7, 8, 3)]
bestSolutionIndice: 4
4 -> costo: 77485.5, rotte: {4: [(1, 4)], 5: [(1, 8)], 7: [(1, 2)], 9: [(1, 7), (7, 8), (8, 10), (10, 11)], 3: [(1, 6), (6, 9)], 6: [(1, 4), (4, 5)], 2: [(1, 9)], 8: [(1, 3)]}, padri: [3, 3, 3, 3, 6, 9, 9, 9, 7], figli: [], mosse: [(9, 8, 1, 11, 2), (9, 8, 7, 11, 2), (9, 8, 8, 11, 2), (9, 8, 10, 11, 2), (9, 9, 7, 8, 3), (9, 9, 11, 10), (9, 9, 8, 10, 9), (9, 9, 10, 11, 6), (9, 9, 7, 8, 3)]
trasportoPalletDiGamma: {4: [(4, 9)], 5: [(8, 15)], 7: [(2, 20)], 9: [(7, 1), (8, 3), (10, 9), (11, 6)], 3: [(6, 4), (9, 4)], 6: [(4, 6), (5, 8)], 2: [(9, 10)], 8: [(3, 18)]}
itMosseLS: 20, itMosseTS: 15
time elapsed: 310.77s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88854.0, rotte: {9: [(1, 3), (3, 6)], 8: [(1, 5), (5, 11), (11, 2)], 3: [(1, 7), (7, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 9), (9, 2)], 7: [(1, 4), (4, 6)], 5: [(1, 10), (10, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85901.59999999999, rotte: {9: [(1, 3), (3, 6)], 8: [(1, 5), (5, 11), (11, 2)], 3: [(1, 7), (7, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 2), (2, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 10), (10, 2)]}, padri: [0], figli: [2], mosse: [(6, 6, 1, 2, 1)]
2 -> costo: 82810.0, rotte: {9: [(1, 3), (3, 6)], 8: [(1, 5), (5, 11), (11, 2)], 3: [(1, 7), (7, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 2), (2, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [1], figli: [3], mosse: [(5, 5, 10, 2)]
3 -> costo: 81264.90000000001, rotte: {9: [(1, 3)], 8: [(1, 5), (5, 11), (11, 2)], 3: [(1, 7), (7, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 2), (2, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [2], figli: [4], mosse: [(7, 9, 1, 6, 2)]
4 -> costo: 80359.0, rotte: {9: [(1, 3)], 8: [(1, 5), (5, 2), (2, 11)], 3: [(1, 7), (7, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 2), (2, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [3], figli: [5, 10, 18], mosse: [(8, 8, 11, 2)]
5 -> costo: 79647.0, rotte: {9: [(1, 2), (2, 3)], 8: [(1, 5), (5, 2), (2, 11)], 3: [(1, 7), (7, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [4], figli: [6, 9], mosse: [(9, 6, 1, 2, 1)]
6 -> costo: 79359.90000000001, rotte: {9: [(1, 2), (2, 3)], 8: [(1, 2), (2, 5), (5, 11)], 3: [(1, 7), (7, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [5], figli: [7, 8], mosse: [(8, 8, 2, 5, 8)]
7 -> costo: 79182.7, rotte: {9: [(1, 2), (2, 3)], 8: [(1, 2), (2, 5), (5, 7), (7, 11)], 3: [(1, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [6, 8], figli: [], mosse: [(8, 3, 5, 7, 1), (8, 6, 5, 7, 1)]
8 -> costo: 79317.6, rotte: {9: [(1, 2), (2, 3)], 8: [(1, 2), (2, 5), (5, 11)], 3: [(1, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 7), (7, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [6, 9], figli: [7], mosse: [(6, 3, 1, 7, 1), (8, 8, 2, 5, 8)]
9 -> costo: 79604.70000000001, rotte: {9: [(1, 2), (2, 3)], 8: [(1, 5), (5, 2), (2, 11)], 3: [(1, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 7), (7, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [5], figli: [8], mosse: [(6, 3, 1, 7, 1)]
10 -> costo: 79647.0, rotte: {9: [(1, 3)], 8: [(1, 5), (5, 2), (2, 11)], 3: [(1, 7), (7, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [4], figli: [11, 15], mosse: [(8, 6, 1, 2, 1)]
11 -> costo: 79359.90000000001, rotte: {9: [(1, 3)], 8: [(1, 2), (2, 5), (5, 11)], 3: [(1, 7), (7, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [10], figli: [12, 13], mosse: [(8, 8, 2, 5, 8)]
12 -> costo: 79182.7, rotte: {9: [(1, 3)], 8: [(1, 2), (2, 5), (5, 7), (7, 11)], 3: [(1, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [11], figli: [], mosse: [(8, 3, 5, 7, 1)]
13 -> costo: 79317.6, rotte: {9: [(1, 3)], 8: [(1, 2), (2, 5), (5, 11)], 3: [(1, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 7), (7, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [11], figli: [14], mosse: [(6, 3, 1, 7, 1)]
14 -> costo: 79182.7, rotte: {9: [(1, 3)], 8: [(1, 2), (2, 5), (5, 7), (7, 11)], 3: [(1, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [13], figli: [], mosse: [(8, 6, 5, 7, 1)]
15 -> costo: 79604.70000000001, rotte: {9: [(1, 3)], 8: [(1, 5), (5, 2), (2, 11)], 3: [(1, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 7), (7, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [10], figli: [16], mosse: [(6, 3, 1, 7, 1)]
16 -> costo: 79317.6, rotte: {9: [(1, 3)], 8: [(1, 2), (2, 5), (5, 11)], 3: [(1, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 7), (7, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [15], figli: [17], mosse: [(8, 8, 2, 5, 8)]
17 -> costo: 79182.7, rotte: {9: [(1, 3)], 8: [(1, 2), (2, 5), (5, 7), (7, 11)], 3: [(1, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [16], figli: [], mosse: [(8, 6, 5, 7, 1)]
18 -> costo: 79647.0, rotte: {9: [(1, 3)], 8: [(1, 5), (5, 2), (2, 11)], 3: [(1, 7), (7, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [4], figli: [19], mosse: [(8, 6, 5, 2, 1)]
19 -> costo: 79359.90000000001, rotte: {9: [(1, 3)], 8: [(1, 2), (2, 5), (5, 11)], 3: [(1, 7), (7, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [18], figli: [20], mosse: [(8, 8, 2, 5, 8)]
20 -> costo: 79182.7, rotte: {9: [(1, 3)], 8: [(1, 2), (2, 5), (5, 7), (7, 11)], 3: [(1, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [19], figli: [], mosse: [(8, 3, 5, 7, 1)]
bestSolutionIndice: 7
7 -> costo: 79182.7, rotte: {9: [(1, 2), (2, 3)], 8: [(1, 2), (2, 5), (5, 7), (7, 11)], 3: [(1, 8)], 4: [(1, 8)], 2: [(1, 2)], 6: [(1, 9)], 7: [(1, 4), (4, 6)], 5: [(1, 2), (2, 10)]}, padri: [6, 8], figli: [], mosse: [(8, 3, 5, 7, 1), (8, 6, 5, 7, 1)]
trasportoPalletDiGamma: {9: [(2, 1), (3, 18)], 8: [(2, 3), (5, 8), (7, 1), (11, 6)], 3: [(8, 8)], 4: [(8, 10)], 2: [(2, 10)], 6: [(9, 14)], 7: [(4, 15), (6, 4)], 5: [(2, 6), (10, 9)]}
itMosseLS: 22, itMosseTS: 15
time elapsed: 468.32s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89414.4, rotte: {8: [(1, 4), (4, 6)], 6: [(1, 10), (10, 2)], 5: [(1, 11), (11, 3)], 3: [(1, 7), (7, 2)], 4: [(1, 5), (5, 2)], 9: [(1, 9), (9, 2)], 7: [(1, 8)], 2: [(1, 3)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86322.8, rotte: {8: [(1, 4), (4, 6)], 6: [(1, 2), (2, 10)], 5: [(1, 11), (11, 3)], 3: [(1, 7), (7, 2)], 4: [(1, 5), (5, 2)], 9: [(1, 9), (9, 2)], 7: [(1, 8)], 2: [(1, 3)]}, padri: [0], figli: [2], mosse: [(6, 6, 1, 2, 6)]
2 -> costo: 83370.4, rotte: {8: [(1, 4), (4, 6)], 6: [(1, 2), (2, 10)], 5: [(1, 11), (11, 3)], 3: [(1, 7), (7, 2)], 4: [(1, 5), (5, 2)], 9: [(1, 2), (2, 9)], 7: [(1, 8)], 2: [(1, 3)]}, padri: [1], figli: [3, 7], mosse: [(9, 9, 9, 2)]
3 -> costo: 81017.4, rotte: {8: [(1, 4), (4, 6)], 6: [(1, 2), (2, 10)], 5: [(1, 11), (11, 3)], 3: [(1, 2)], 4: [(1, 5), (5, 2)], 9: [(1, 2), (2, 9)], 7: [(1, 7), (7, 8)], 2: [(1, 3)]}, padri: [2], figli: [4, 6, 4, 4, 6, 6, 8, 8, 8], mosse: [(7, 3, 1, 7, 1)]
4 -> costo: 79042.5, rotte: {8: [(1, 4), (4, 6)], 6: [(1, 2), (2, 10)], 5: [(1, 3), (3, 11)], 3: [(1, 2)], 4: [(1, 5), (5, 2)], 9: [(1, 2), (2, 9)], 7: [(1, 7), (7, 8)], 2: [(1, 3)]}, padri: [3, 3, 3, 7], figli: [5, 5, 5], mosse: [(5, 5, 11, 3), (5, 5, 1, 3, 8), (5, 5, 3, 11, 6), (7, 3, 1, 7, 1)]
5 -> costo: 78269.40000000001, rotte: {8: [(1, 4), (4, 6)], 6: [(1, 2), (2, 10)], 5: [(1, 3), (3, 11)], 3: [(1, 2)], 4: [(1, 2), (2, 5)], 9: [(1, 2), (2, 9)], 7: [(1, 7), (7, 8)], 2: [(1, 3)]}, padri: [4, 4, 4, 6, 6, 6], figli: [], mosse: [(4, 4, 1, 2, 2), (4, 4, 5, 2), (4, 4, 2, 5, 8), (5, 5, 1, 3, 8), (5, 5, 11, 3), (5, 5, 3, 11, 6)]
6 -> costo: 80244.3, rotte: {8: [(1, 4), (4, 6)], 6: [(1, 2), (2, 10)], 5: [(1, 11), (11, 3)], 3: [(1, 2)], 4: [(1, 2), (2, 5)], 9: [(1, 2), (2, 9)], 7: [(1, 7), (7, 8)], 2: [(1, 3)]}, padri: [3, 3, 3], figli: [5, 5, 5], mosse: [(4, 4, 5, 2), (4, 4, 1, 2, 2), (4, 4, 2, 5, 8)]
7 -> costo: 81395.5, rotte: {8: [(1, 4), (4, 6)], 6: [(1, 2), (2, 10)], 5: [(1, 3), (3, 11)], 3: [(1, 7), (7, 2)], 4: [(1, 5), (5, 2)], 9: [(1, 2), (2, 9)], 7: [(1, 8)], 2: [(1, 3)]}, padri: [2], figli: [4, 8], mosse: [(5, 5, 11, 3)]
8 -> costo: 80600.8, rotte: {8: [(1, 4), (4, 6)], 6: [(1, 2), (2, 10)], 5: [(1, 3), (3, 11)], 3: [(1, 2), (2, 7)], 4: [(1, 5), (5, 2)], 9: [(1, 2), (2, 9)], 7: [(1, 8)], 2: [(1, 3)]}, padri: [7], figli: [9], mosse: [(3, 3, 7, 2)]
9 -> costo: 79827.7, rotte: {8: [(1, 4), (4, 6)], 6: [(1, 2), (2, 10)], 5: [(1, 3), (3, 11)], 3: [(1, 2), (2, 7)], 4: [(1, 2), (2, 5)], 9: [(1, 2), (2, 9)], 7: [(1, 8)], 2: [(1, 3)]}, padri: [8], figli: [10], mosse: [(4, 4, 1, 2, 2)]
10 -> costo: 79434.7, rotte: {8: [(1, 4), (4, 6)], 6: [(1, 2), (2, 10)], 5: [(1, 3), (3, 11)], 3: [(1, 2), (2, 7)], 4: [(1, 5)], 9: [(1, 2), (2, 9)], 7: [(1, 2), (2, 8)], 2: [(1, 3)]}, padri: [9], figli: [], mosse: [(7, 4, 1, 2, 2)]
bestSolutionIndice: 5
5 -> costo: 78269.40000000001, rotte: {8: [(1, 4), (4, 6)], 6: [(1, 2), (2, 10)], 5: [(1, 3), (3, 11)], 3: [(1, 2)], 4: [(1, 2), (2, 5)], 9: [(1, 2), (2, 9)], 7: [(1, 7), (7, 8)], 2: [(1, 3)]}, padri: [4, 4, 4, 6, 6, 6], figli: [], mosse: [(4, 4, 1, 2, 2), (4, 4, 5, 2), (4, 4, 2, 5, 8), (5, 5, 1, 3, 8), (5, 5, 11, 3), (5, 5, 3, 11, 6)]
trasportoPalletDiGamma: {8: [(4, 15), (6, 4)], 6: [(2, 6), (10, 9)], 5: [(3, 8), (11, 6)], 3: [(2, 9)], 4: [(2, 2), (5, 8)], 9: [(2, 3), (9, 14)], 7: [(7, 1), (8, 18)], 2: [(3, 10)]}
itMosseLS: 20, itMosseTS: 15
time elapsed: 320.67s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89327.4, rotte: {4: [(1, 8)], 9: [(1, 10), (10, 4)], 8: [(1, 5), (5, 2)], 5: [(1, 6), (6, 8)], 2: [(1, 7), (7, 3)], 3: [(1, 3)], 7: [(1, 9), (9, 4)], 6: [(1, 11), (11, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86346.9, rotte: {4: [(1, 8)], 9: [(1, 4), (4, 10)], 8: [(1, 5), (5, 2)], 5: [(1, 6), (6, 8)], 2: [(1, 7), (7, 3)], 3: [(1, 3)], 7: [(1, 9), (9, 4)], 6: [(1, 11), (11, 2)]}, padri: [0], figli: [2], mosse: [(9, 9, 1, 4, 11)]
2 -> costo: 83506.19999999998, rotte: {4: [(1, 8)], 9: [(1, 4), (4, 10)], 8: [(1, 5), (5, 2)], 5: [(1, 6), (6, 8)], 2: [(1, 7), (7, 3)], 3: [(1, 3)], 7: [(1, 4), (4, 9)], 6: [(1, 11), (11, 2)]}, padri: [1], figli: [3], mosse: [(7, 7, 9, 4)]
3 -> costo: 81123.89999999998, rotte: {4: [(1, 8)], 9: [(1, 4), (4, 10)], 8: [(1, 5), (5, 2)], 5: [(1, 6), (6, 8)], 2: [(1, 7), (7, 3)], 3: [(1, 3)], 7: [(1, 4), (4, 9)], 6: [(1, 2), (2, 11)]}, padri: [2], figli: [4, 8, 9, 10], mosse: [(6, 6, 1, 2, 8)]
4 -> costo: 80350.79999999999, rotte: {4: [(1, 8)], 9: [(1, 4), (4, 10)], 8: [(1, 2), (2, 5)], 5: [(1, 6), (6, 8)], 2: [(1, 7), (7, 3)], 3: [(1, 3)], 7: [(1, 4), (4, 9)], 6: [(1, 2), (2, 11)]}, padri: [3], figli: [5, 6, 7, 6, 6], mosse: [(8, 8, 5, 2)]
5 -> costo: 79307.29999999999, rotte: {4: [(1, 8)], 9: [(1, 4), (4, 10)], 8: [(1, 2), (2, 5)], 5: [(1, 6), (6, 8)], 2: [(1, 3)], 3: [(1, 3)], 7: [(1, 4), (4, 7), (7, 9)], 6: [(1, 2), (2, 11)]}, padri: [4, 7, 9, 9, 9], figli: [], mosse: [(7, 2, 4, 7, 1), (7, 5, 4, 7, 1), (8, 8, 5, 2), (8, 8, 1, 2, 12), (8, 8, 2, 5, 8)]
6 -> costo: 80021.2, rotte: {4: [(1, 8)], 9: [(1, 4), (4, 10)], 8: [(1, 2), (2, 5)], 5: [(1, 6), (6, 8)], 2: [(1, 3), (3, 7)], 3: [(1, 3)], 7: [(1, 4), (4, 9)], 6: [(1, 2), (2, 11)]}, padri: [4, 4, 4, 8, 8, 8], figli: [], mosse: [(2, 2, 7, 3), (2, 2, 1, 3, 8), (2, 2, 3, 7, 1), (8, 8, 1, 2, 12), (8, 8, 5, 2), (8, 8, 2, 5, 8)]
7 -> costo: 79415.1, rotte: {4: [(1, 8)], 9: [(1, 4), (4, 10)], 8: [(1, 2), (2, 5)], 5: [(1, 7), (7, 6), (6, 8)], 2: [(1, 3)], 3: [(1, 3)], 7: [(1, 4), (4, 9)], 6: [(1, 2), (2, 11)]}, padri: [4, 10], figli: [5], mosse: [(5, 2, 1, 7, 1), (8, 8, 5, 2)]
8 -> costo: 80794.29999999999, rotte: {4: [(1, 8)], 9: [(1, 4), (4, 10)], 8: [(1, 5), (5, 2)], 5: [(1, 6), (6, 8)], 2: [(1, 3), (3, 7)], 3: [(1, 3)], 7: [(1, 4), (4, 9)], 6: [(1, 2), (2, 11)]}, padri: [3], figli: [6, 6, 6], mosse: [(2, 2, 7, 3)]
9 -> costo: 80080.4, rotte: {4: [(1, 8)], 9: [(1, 4), (4, 10)], 8: [(1, 5), (5, 2)], 5: [(1, 6), (6, 8)], 2: [(1, 3)], 3: [(1, 3)], 7: [(1, 4), (4, 7), (7, 9)], 6: [(1, 2), (2, 11)]}, padri: [3], figli: [5, 5, 5], mosse: [(7, 2, 4, 7, 1)]
10 -> costo: 80188.2, rotte: {4: [(1, 8)], 9: [(1, 4), (4, 10)], 8: [(1, 5), (5, 2)], 5: [(1, 7), (7, 6), (6, 8)], 2: [(1, 3)], 3: [(1, 3)], 7: [(1, 4), (4, 9)], 6: [(1, 2), (2, 11)]}, padri: [3], figli: [7], mosse: [(5, 2, 1, 7, 1)]
bestSolutionIndice: 5
5 -> costo: 79307.29999999999, rotte: {4: [(1, 8)], 9: [(1, 4), (4, 10)], 8: [(1, 2), (2, 5)], 5: [(1, 6), (6, 8)], 2: [(1, 3)], 3: [(1, 3)], 7: [(1, 4), (4, 7), (7, 9)], 6: [(1, 2), (2, 11)]}, padri: [4, 7, 9, 9, 9], figli: [], mosse: [(7, 2, 4, 7, 1), (7, 5, 4, 7, 1), (8, 8, 5, 2), (8, 8, 1, 2, 12), (8, 8, 2, 5, 8)]
trasportoPalletDiGamma: {4: [(8, 10)], 9: [(4, 11), (10, 9)], 8: [(2, 12), (5, 8)], 5: [(6, 4), (8, 8)], 2: [(3, 8)], 3: [(3, 10)], 7: [(4, 4), (7, 1), (9, 14)], 6: [(2, 8), (11, 6)]}
itMosseLS: 20, itMosseTS: 15
time elapsed: 379.04s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 87205.9, rotte: {3: [(1, 2)], 5: [(1, 5), (5, 4)], 9: [(1, 9), (9, 7), (7, 8)], 6: [(1, 10), (10, 2)], 4: [(1, 6), (6, 8)], 7: [(1, 11), (11, 4), (4, 2)], 8: [(1, 3), (3, 2)], 2: [(1, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 84114.3, rotte: {3: [(1, 2)], 5: [(1, 5), (5, 4)], 9: [(1, 9), (9, 7), (7, 8)], 6: [(1, 2), (2, 10)], 4: [(1, 6), (6, 8)], 7: [(1, 11), (11, 4), (4, 2)], 8: [(1, 3), (3, 2)], 2: [(1, 8)]}, padri: [0], figli: [2], mosse: [(6, 6, 10, 2)]
2 -> costo: 81263.2, rotte: {3: [(1, 2)], 5: [(1, 5), (5, 4)], 9: [(1, 7), (7, 8), (8, 9)], 6: [(1, 2), (2, 10)], 4: [(1, 6), (6, 8)], 7: [(1, 11), (11, 4), (4, 2)], 8: [(1, 3), (3, 2)], 2: [(1, 8)]}, padri: [1], figli: [3], mosse: [(9, 9, 8, 9, 14)]
3 -> costo: 80601.79999999999, rotte: {3: [(1, 2)], 5: [(1, 4), (4, 5)], 9: [(1, 7), (7, 8), (8, 9)], 6: [(1, 2), (2, 10)], 4: [(1, 6), (6, 8)], 7: [(1, 11), (11, 4), (4, 2)], 8: [(1, 3), (3, 2)], 2: [(1, 8)]}, padri: [2], figli: [4, 10], mosse: [(5, 5, 5, 4)]
4 -> costo: 79880.19999999998, rotte: {3: [(1, 2)], 5: [(1, 4), (4, 5)], 9: [(1, 7), (7, 8), (8, 9)], 6: [(1, 2), (2, 10)], 4: [(1, 6), (6, 8)], 7: [(1, 2), (2, 11), (11, 4)], 8: [(1, 3), (3, 2)], 2: [(1, 8)]}, padri: [3], figli: [5, 6, 8, 5, 5, 11, 11, 11], mosse: [(7, 7, 1, 2, 2)]
5 -> costo: 78218.89999999998, rotte: {3: [(1, 2)], 5: [(1, 4), (4, 5)], 9: [(1, 7), (7, 8), (8, 9)], 6: [(1, 2), (2, 10)], 4: [(1, 6), (6, 8)], 7: [(1, 2), (2, 4), (4, 11)], 8: [(1, 3), (3, 2)], 2: [(1, 8)]}, padri: [4, 4, 4, 10], figli: [6, 8, 9], mosse: [(7, 7, 11, 4), (7, 7, 2, 4, 8), (7, 7, 4, 11, 6), (7, 7, 4, 11, 6)]
6 -> costo: 77738.59999999999, rotte: {3: [(1, 2)], 5: [(1, 4), (4, 5)], 9: [(1, 7), (7, 8), (8, 9)], 6: [(1, 2), (2, 10)], 4: [(1, 6), (6, 8)], 7: [(1, 4), (4, 2), (2, 11)], 8: [(1, 3), (3, 2)], 2: [(1, 8)]}, padri: [5, 4], figli: [7, 9], mosse: [(7, 7, 4, 2, 2), (7, 7, 1, 4, 8)]
7 -> costo: 77331.2, rotte: {3: [(1, 2)], 5: [(1, 4), (4, 5)], 9: [(1, 7), (7, 8), (8, 9)], 6: [(1, 2), (2, 10)], 4: [(1, 6), (6, 8)], 7: [(1, 4), (4, 2), (2, 11)], 8: [(1, 2), (2, 3)], 2: [(1, 8)]}, padri: [6, 8, 9], figli: [], mosse: [(8, 8, 3, 2), (7, 7, 1, 4, 8), (7, 7, 4, 2, 2)]
8 -> costo: 79472.8, rotte: {3: [(1, 2)], 5: [(1, 4), (4, 5)], 9: [(1, 7), (7, 8), (8, 9)], 6: [(1, 2), (2, 10)], 4: [(1, 6), (6, 8)], 7: [(1, 2), (2, 11), (11, 4)], 8: [(1, 2), (2, 3)], 2: [(1, 8)]}, padri: [4], figli: [7, 9, 9, 9], mosse: [(8, 8, 3, 2)]
9 -> costo: 77811.5, rotte: {3: [(1, 2)], 5: [(1, 4), (4, 5)], 9: [(1, 7), (7, 8), (8, 9)], 6: [(1, 2), (2, 10)], 4: [(1, 6), (6, 8)], 7: [(1, 2), (2, 4), (4, 11)], 8: [(1, 2), (2, 3)], 2: [(1, 8)]}, padri: [8, 8, 8, 5, 11], figli: [7], mosse: [(7, 7, 11, 4), (7, 7, 2, 4, 8), (7, 7, 4, 11, 6), (8, 8, 3, 2), (7, 7, 4, 11, 6)]
10 -> costo: 80009.19999999998, rotte: {3: [(1, 2)], 5: [(1, 4), (4, 5)], 9: [(1, 7), (7, 8), (8, 9)], 6: [(1, 2), (2, 10)], 4: [(1, 6), (6, 8)], 7: [(1, 11), (11, 2), (2, 4)], 8: [(1, 3), (3, 2)], 2: [(1, 8)]}, padri: [3], figli: [5, 11], mosse: [(7, 7, 4, 2)]
11 -> costo: 79601.8, rotte: {3: [(1, 2)], 5: [(1, 4), (4, 5)], 9: [(1, 7), (7, 8), (8, 9)], 6: [(1, 2), (2, 10)], 4: [(1, 6), (6, 8)], 7: [(1, 11), (11, 2), (2, 4)], 8: [(1, 2), (2, 3)], 2: [(1, 8)]}, padri: [10], figli: [9], mosse: [(8, 8, 3, 2)]
bestSolutionIndice: 7
7 -> costo: 77331.2, rotte: {3: [(1, 2)], 5: [(1, 4), (4, 5)], 9: [(1, 7), (7, 8), (8, 9)], 6: [(1, 2), (2, 10)], 4: [(1, 6), (6, 8)], 7: [(1, 4), (4, 2), (2, 11)], 8: [(1, 2), (2, 3)], 2: [(1, 8)]}, padri: [6, 8, 9], figli: [], mosse: [(8, 8, 3, 2), (7, 7, 1, 4, 8), (7, 7, 4, 2, 2)]
trasportoPalletDiGamma: {3: [(2, 10)], 5: [(4, 7), (5, 8)], 9: [(7, 1), (8, 2), (9, 14)], 6: [(2, 6), (10, 9)], 4: [(6, 4), (8, 6)], 7: [(4, 8), (2, 2), (11, 6)], 8: [(2, 2), (3, 18)], 2: [(8, 10)]}
itMosseLS: 21, itMosseTS: 15
time elapsed: 295.57s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89293.20000000001, rotte: {6: [(1, 9), (9, 2)], 9: [(1, 10), (10, 6), (6, 4)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 3), (3, 4)], 5: [(1, 11), (11, 8)], 8: [(1, 7), (7, 2)], 2: [(1, 5), (5, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86340.8, rotte: {6: [(1, 2), (2, 9)], 9: [(1, 10), (10, 6), (6, 4)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 3), (3, 4)], 5: [(1, 11), (11, 8)], 8: [(1, 7), (7, 2)], 2: [(1, 5), (5, 4)]}, padri: [0], figli: [2], mosse: [(6, 6, 1, 2, 1)]
2 -> costo: 85401.5, rotte: {6: [(1, 2), (2, 9)], 9: [(1, 10), (10, 6), (6, 4)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 3), (3, 4)], 5: [(1, 8), (8, 11)], 8: [(1, 7), (7, 2)], 2: [(1, 5), (5, 4)]}, padri: [1], figli: [3], mosse: [(5, 5, 11, 8)]
3 -> costo: 82954.9, rotte: {6: [(1, 2), (2, 9)], 9: [(1, 7), (7, 10), (10, 6), (6, 4)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 3), (3, 4)], 5: [(1, 8), (8, 11)], 8: [(1, 2)], 2: [(1, 5), (5, 4)]}, padri: [2], figli: [4], mosse: [(9, 8, 1, 7, 1)]
4 -> costo: 82293.49999999999, rotte: {6: [(1, 2), (2, 9)], 9: [(1, 7), (7, 10), (10, 6), (6, 4)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 3), (3, 4)], 5: [(1, 8), (8, 11)], 8: [(1, 2)], 2: [(1, 4), (4, 5)]}, padri: [3], figli: [5], mosse: [(2, 2, 5, 4)]
5 -> costo: 81034.9, rotte: {6: [(1, 2), (2, 9)], 9: [(1, 7), (7, 10), (10, 6), (6, 4)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 3), (3, 4)], 5: [(1, 8), (8, 11)], 8: [(1, 2)], 2: [(1, 5)]}, padri: [4], figli: [6], mosse: [(9, 2, 1, 4, 2)]
6 -> costo: 80738.6, rotte: {6: [(1, 2), (2, 9)], 9: [(1, 7), (7, 10), (10, 6), (6, 4)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 4), (4, 3)], 5: [(1, 8), (8, 11)], 8: [(1, 2)], 2: [(1, 5)]}, padri: [5], figli: [7], mosse: [(7, 7, 3, 4)]
7 -> costo: 79766.1, rotte: {6: [(1, 2), (2, 9)], 9: [(1, 4), (4, 7), (7, 10), (10, 6)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 4), (4, 3)], 5: [(1, 8), (8, 11)], 8: [(1, 2)], 2: [(1, 5)]}, padri: [6], figli: [8], mosse: [(9, 9, 1, 4, 3)]
8 -> costo: 78048.7, rotte: {6: [(1, 2), (2, 9)], 9: [(1, 4), (4, 7), (7, 6), (6, 10)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 4), (4, 3)], 5: [(1, 8), (8, 11)], 8: [(1, 2)], 2: [(1, 5)]}, padri: [7], figli: [9, 13], mosse: [(9, 9, 10, 6)]
9 -> costo: 77336.7, rotte: {6: [(1, 9)], 9: [(1, 4), (4, 7), (7, 6), (6, 10)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 4), (4, 3)], 5: [(1, 8), (8, 11)], 8: [(1, 2)], 2: [(1, 5)]}, padri: [8], figli: [10, 10, 10, 10, 12, 12, 12, 12], mosse: [(8, 6, 1, 2, 1)]
10 -> costo: 77073.90000000001, rotte: {6: [(1, 9)], 9: [(1, 4), (4, 7), (7, 6), (6, 10)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 3)], 5: [(1, 8), (8, 11)], 8: [(1, 2)], 2: [(1, 5)]}, padri: [9, 9, 9, 9, 14], figli: [11], mosse: [(9, 7, 1, 4, 2), (9, 7, 7, 4, 2), (9, 7, 6, 4, 2), (9, 7, 10, 4, 2), (8, 9, 1, 2, 1)]
11 -> costo: 77061.1, rotte: {6: [(1, 9)], 9: [(1, 4), (4, 6), (6, 7), (7, 10)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 3)], 5: [(1, 8), (8, 11)], 8: [(1, 2)], 2: [(1, 5)]}, padri: [10, 12, 12, 12, 12], figli: [], mosse: [(9, 9, 6, 7, 1), (9, 7, 1, 4, 2), (9, 7, 6, 4, 2), (9, 7, 7, 4, 2), (9, 7, 10, 4, 2)]
12 -> costo: 77323.90000000001, rotte: {6: [(1, 9)], 9: [(1, 4), (4, 6), (6, 7), (7, 10)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 4), (4, 3)], 5: [(1, 8), (8, 11)], 8: [(1, 2)], 2: [(1, 5)]}, padri: [9], figli: [11, 11, 11, 11], mosse: [(9, 9, 6, 7, 1)]
13 -> costo: 77460.8, rotte: {6: [(1, 9)], 9: [(1, 4), (4, 2), (2, 7), (7, 6), (6, 10)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 4), (4, 3)], 5: [(1, 8), (8, 11)], 8: [(1, 2)], 2: [(1, 5)]}, padri: [8], figli: [14, 14, 14, 14], mosse: [(9, 6, 4, 2, 1)]
14 -> costo: 77198.0, rotte: {6: [(1, 9)], 9: [(1, 4), (4, 2), (2, 7), (7, 6), (6, 10)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 3)], 5: [(1, 8), (8, 11)], 8: [(1, 2)], 2: [(1, 5)]}, padri: [13, 13, 13, 13], figli: [10], mosse: [(9, 7, 1, 4, 2), (9, 7, 2, 4, 2), (9, 7, 7, 4, 2), (9, 7, 6, 4, 2)]
bestSolutionIndice: 11
11 -> costo: 77061.1, rotte: {6: [(1, 9)], 9: [(1, 4), (4, 6), (6, 7), (7, 10)], 4: [(1, 4)], 3: [(1, 8)], 7: [(1, 3)], 5: [(1, 8), (8, 11)], 8: [(1, 2)], 2: [(1, 5)]}, padri: [10, 12, 12, 12, 12], figli: [], mosse: [(9, 9, 6, 7, 1), (9, 7, 1, 4, 2), (9, 7, 6, 4, 2), (9, 7, 7, 4, 2), (9, 7, 10, 4, 2)]
trasportoPalletDiGamma: {6: [(9, 14)], 9: [(4, 5), (6, 4), (7, 1), (10, 9)], 4: [(4, 10)], 3: [(8, 10)], 7: [(3, 18)], 5: [(8, 8), (11, 6)], 8: [(2, 20)], 2: [(5, 8)]}
itMosseLS: 25, itMosseTS: 15
time elapsed: 407.54s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 90045.0, rotte: {6: [(1, 2)], 8: [(1, 6), (6, 9), (9, 3)], 4: [(1, 3)], 7: [(1, 8), (8, 4)], 9: [(1, 10), (10, 2)], 2: [(1, 5), (5, 3)], 5: [(1, 7), (7, 4)], 3: [(1, 11), (11, 3)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 87142.69999999998, rotte: {6: [(1, 2)], 8: [(1, 6), (6, 9), (9, 3)], 4: [(1, 3)], 7: [(1, 8), (8, 4)], 9: [(1, 7), (7, 10), (10, 2)], 2: [(1, 5), (5, 3)], 5: [(1, 4)], 3: [(1, 11), (11, 3)]}, padri: [0], figli: [2], mosse: [(9, 5, 1, 7, 1)]
2 -> costo: 85167.79999999999, rotte: {6: [(1, 2)], 8: [(1, 6), (6, 9), (9, 3)], 4: [(1, 3)], 7: [(1, 8), (8, 4)], 9: [(1, 7), (7, 10), (10, 2)], 2: [(1, 5), (5, 3)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [1], figli: [3], mosse: [(3, 3, 11, 3)]
3 -> costo: 82659.59999999999, rotte: {6: [(1, 2)], 8: [(1, 6), (6, 9), (9, 3)], 4: [(1, 3)], 7: [(1, 8)], 9: [(1, 7), (7, 10), (10, 2)], 2: [(1, 5), (5, 3)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [2], figli: [4], mosse: [(5, 7, 1, 4, 2)]
4 -> costo: 82014.59999999999, rotte: {6: [(1, 2)], 8: [(1, 6), (6, 9), (9, 3)], 4: [(1, 3)], 7: [(1, 8)], 9: [(1, 7), (7, 2), (2, 10)], 2: [(1, 5), (5, 3)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [3], figli: [5], mosse: [(9, 9, 10, 2)]
5 -> costo: 79661.59999999999, rotte: {6: [(1, 2)], 8: [(1, 6), (6, 9), (9, 3)], 4: [(1, 3)], 7: [(1, 7), (7, 8)], 9: [(1, 2), (2, 10)], 2: [(1, 5), (5, 3)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [4], figli: [6], mosse: [(7, 9, 1, 7, 1)]
6 -> costo: 79165.4, rotte: {6: [(1, 2)], 8: [(1, 6), (6, 3), (3, 9)], 4: [(1, 3)], 7: [(1, 7), (7, 8)], 9: [(1, 2), (2, 10)], 2: [(1, 5), (5, 3)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [5], figli: [7, 9], mosse: [(8, 8, 9, 3)]
7 -> costo: 77883.2, rotte: {6: [(1, 2)], 8: [(1, 3), (3, 6), (6, 9)], 4: [(1, 3)], 7: [(1, 7), (7, 8)], 9: [(1, 2), (2, 10)], 2: [(1, 5), (5, 3)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [6], figli: [8], mosse: [(8, 8, 3, 6, 4)]
8 -> costo: 77586.79999999999, rotte: {6: [(1, 2)], 8: [(1, 3), (3, 6), (6, 9)], 4: [(1, 3)], 7: [(1, 7), (7, 8)], 9: [(1, 2), (2, 10)], 2: [(1, 3), (3, 5)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [7], figli: [], mosse: [(2, 2, 5, 3)]
9 -> costo: 78658.4, rotte: {6: [(1, 2)], 8: [(1, 3), (3, 9)], 4: [(1, 3)], 7: [(1, 7), (7, 8)], 9: [(1, 2), (2, 6), (6, 10)], 2: [(1, 5), (5, 3)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [6], figli: [10], mosse: [(9, 8, 2, 6, 4)]
10 -> costo: 78362.0, rotte: {6: [(1, 2)], 8: [(1, 3), (3, 9)], 4: [(1, 3)], 7: [(1, 7), (7, 8)], 9: [(1, 2), (2, 6), (6, 10)], 2: [(1, 3), (3, 5)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [9], figli: [11, 11, 13, 13, 14, 15], mosse: [(2, 2, 5, 3)]
11 -> costo: 76428.9, rotte: {6: [(1, 2)], 8: [(1, 3), (3, 9)], 4: [(1, 3)], 7: [(1, 7), (7, 8)], 9: [(1, 2), (2, 6), (6, 10)], 2: [(1, 5)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [10, 10, 13, 13], figli: [12], mosse: [(8, 2, 1, 3, 2), (8, 2, 9, 3, 2), (8, 9, 1, 3, 2), (8, 9, 9, 3, 2)]
12 -> costo: 76428.8, rotte: {6: [(1, 2)], 8: [(1, 3), (3, 9)], 4: [(1, 3)], 7: [(1, 8)], 9: [(1, 2), (2, 7), (7, 6), (6, 10)], 2: [(1, 5)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [11], figli: [], mosse: [(9, 7, 2, 7, 1)]
13 -> costo: 76858.79999999999, rotte: {6: [(1, 2)], 8: [(1, 3), (3, 9)], 4: [(1, 3)], 7: [(1, 7), (7, 8)], 9: [(1, 2), (2, 3), (3, 6), (6, 10)], 2: [(1, 5)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [10, 14], figli: [11, 11], mosse: [(9, 2, 2, 3, 2), (8, 2, 1, 3, 2)]
14 -> costo: 77876.29999999999, rotte: {6: [(1, 2)], 8: [(1, 9)], 4: [(1, 3)], 7: [(1, 7), (7, 8)], 9: [(1, 2), (2, 3), (3, 6), (6, 10)], 2: [(1, 3), (3, 5)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [10], figli: [13, 15], mosse: [(9, 8, 2, 3, 2)]
15 -> costo: 77834.0, rotte: {6: [(1, 2)], 8: [(1, 7), (7, 9)], 4: [(1, 3)], 7: [(1, 8)], 9: [(1, 2), (2, 3), (3, 6), (6, 10)], 2: [(1, 3), (3, 5)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [14], figli: [16, 17], mosse: [(8, 7, 1, 7, 1)]
16 -> costo: 76900.8, rotte: {6: [(1, 2)], 8: [(1, 7), (7, 9)], 4: [(1, 3)], 7: [(1, 3), (3, 8)], 9: [(1, 2), (2, 3), (3, 6), (6, 10)], 2: [(1, 5)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [15, 17], figli: [], mosse: [(7, 2, 1, 3, 2), (7, 8, 1, 3, 2)]
17 -> costo: 77107.0, rotte: {6: [(1, 2)], 8: [(1, 3), (3, 7), (7, 9)], 4: [(1, 3)], 7: [(1, 8)], 9: [(1, 2), (2, 3), (3, 6), (6, 10)], 2: [(1, 5)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [15], figli: [18, 18, 18, 16], mosse: [(8, 2, 1, 3, 2)]
18 -> costo: 76677.1, rotte: {6: [(1, 2)], 8: [(1, 3), (3, 7), (7, 9)], 4: [(1, 3)], 7: [(1, 8)], 9: [(1, 2), (2, 6), (6, 10)], 2: [(1, 5)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [17, 17, 17], figli: [], mosse: [(8, 9, 1, 3, 2), (8, 9, 7, 3, 2), (8, 9, 9, 3, 2)]
bestSolutionIndice: 12
12 -> costo: 76428.8, rotte: {6: [(1, 2)], 8: [(1, 3), (3, 9)], 4: [(1, 3)], 7: [(1, 8)], 9: [(1, 2), (2, 7), (7, 6), (6, 10)], 2: [(1, 5)], 5: [(1, 4)], 3: [(1, 3), (3, 11)]}, padri: [11], figli: [], mosse: [(9, 7, 2, 7, 1)]
trasportoPalletDiGamma: {6: [(2, 15)], 8: [(3, 4), (9, 14)], 4: [(3, 10)], 7: [(8, 18)], 9: [(2, 5), (7, 1), (6, 4), (10, 9)], 2: [(5, 8)], 5: [(4, 15)], 3: [(3, 4), (11, 6)]}
itMosseLS: 25, itMosseTS: 15
time elapsed: 376.71s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88248.70000000001, rotte: {9: [(1, 8), (8, 7)], 7: [(1, 2)], 8: [(1, 3), (3, 4)], 5: [(1, 9), (9, 4)], 6: [(1, 11), (11, 4)], 2: [(1, 10), (10, 4)], 4: [(1, 6), (6, 4)], 3: [(1, 5)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85408.00000000001, rotte: {9: [(1, 8), (8, 7)], 7: [(1, 2)], 8: [(1, 3), (3, 4)], 5: [(1, 4), (4, 9)], 6: [(1, 11), (11, 4)], 2: [(1, 10), (10, 4)], 4: [(1, 6), (6, 4)], 3: [(1, 5)]}, padri: [0], figli: [2], mosse: [(5, 5, 1, 4, 1)]
2 -> costo: 82427.5, rotte: {9: [(1, 8), (8, 7)], 7: [(1, 2)], 8: [(1, 3), (3, 4)], 5: [(1, 4), (4, 9)], 6: [(1, 11), (11, 4)], 2: [(1, 4), (4, 10)], 4: [(1, 6), (6, 4)], 3: [(1, 5)]}, padri: [1], figli: [3], mosse: [(2, 2, 10, 4)]
3 -> costo: 80156.3, rotte: {9: [(1, 8), (8, 7)], 7: [(1, 2)], 8: [(1, 3), (3, 4)], 5: [(1, 4), (4, 9)], 6: [(1, 4), (4, 11)], 2: [(1, 4), (4, 10)], 4: [(1, 6), (6, 4)], 3: [(1, 5)]}, padri: [2], figli: [4, 8], mosse: [(6, 6, 1, 4, 9)]
4 -> costo: 79194.2, rotte: {9: [(1, 8), (8, 7)], 7: [(1, 2)], 8: [(1, 3), (3, 4)], 5: [(1, 4), (4, 9)], 6: [(1, 4), (4, 11)], 2: [(1, 4), (4, 10)], 4: [(1, 4), (4, 6)], 3: [(1, 5)]}, padri: [3], figli: [5, 5, 5, 7, 7, 7, 7, 7], mosse: [(4, 4, 6, 4)]
5 -> costo: 78557.2, rotte: {9: [(1, 7), (7, 8)], 7: [(1, 2)], 8: [(1, 3), (3, 4)], 5: [(1, 4), (4, 9)], 6: [(1, 4), (4, 11)], 2: [(1, 4), (4, 10)], 4: [(1, 4), (4, 6)], 3: [(1, 5)]}, padri: [4, 4, 4, 8, 8, 8], figli: [6, 6, 6], mosse: [(9, 9, 1, 7, 1), (9, 9, 8, 7), (9, 9, 7, 8, 18), (4, 4, 1, 4, 2), (4, 4, 6, 4), (4, 4, 4, 6, 4)]
6 -> costo: 78260.90000000001, rotte: {9: [(1, 7), (7, 8)], 7: [(1, 2)], 8: [(1, 4), (4, 3)], 5: [(1, 4), (4, 9)], 6: [(1, 4), (4, 11)], 2: [(1, 4), (4, 10)], 4: [(1, 4), (4, 6)], 3: [(1, 5)]}, padri: [5, 5, 5, 7, 7, 7], figli: [], mosse: [(8, 8, 3, 4), (8, 8, 1, 4, 2), (8, 8, 4, 3, 18), (9, 9, 1, 7, 1), (9, 9, 8, 7), (9, 9, 7, 8, 18)]
7 -> costo: 78897.90000000001, rotte: {9: [(1, 8), (8, 7)], 7: [(1, 2)], 8: [(1, 4), (4, 3)], 5: [(1, 4), (4, 9)], 6: [(1, 4), (4, 11)], 2: [(1, 4), (4, 10)], 4: [(1, 4), (4, 6)], 3: [(1, 5)]}, padri: [4, 4, 4], figli: [6, 6, 6], mosse: [(8, 8, 3, 4), (8, 8, 1, 4, 2), (8, 8, 4, 3, 18)]
8 -> costo: 79519.3, rotte: {9: [(1, 7), (7, 8)], 7: [(1, 2)], 8: [(1, 3), (3, 4)], 5: [(1, 4), (4, 9)], 6: [(1, 4), (4, 11)], 2: [(1, 4), (4, 10)], 4: [(1, 6), (6, 4)], 3: [(1, 5)]}, padri: [3], figli: [5, 5, 5], mosse: [(9, 9, 8, 7)]
bestSolutionIndice: 6
6 -> costo: 78260.90000000001, rotte: {9: [(1, 7), (7, 8)], 7: [(1, 2)], 8: [(1, 4), (4, 3)], 5: [(1, 4), (4, 9)], 6: [(1, 4), (4, 11)], 2: [(1, 4), (4, 10)], 4: [(1, 4), (4, 6)], 3: [(1, 5)]}, padri: [5, 5, 5, 7, 7, 7], figli: [], mosse: [(8, 8, 3, 4), (8, 8, 1, 4, 2), (8, 8, 4, 3, 18), (9, 9, 1, 7, 1), (9, 9, 8, 7), (9, 9, 7, 8, 18)]
trasportoPalletDiGamma: {9: [(7, 1), (8, 18)], 7: [(2, 20)], 8: [(4, 2), (3, 18)], 5: [(4, 1), (9, 14)], 6: [(4, 9), (11, 6)], 2: [(4, 1), (10, 9)], 4: [(4, 2), (6, 4)], 3: [(5, 8)]}
itMosseLS: 20, itMosseTS: 15
time elapsed: 340.58s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 91871.9, rotte: {7: [(1, 11), (11, 6), (6, 4), (4, 2)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 5), (5, 4)], 6: [(1, 7), (7, 8), (8, 3), (3, 2)], 8: [(1, 9), (9, 3)], 3: [(1, 10), (10, 2)], 2: [(1, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 89389.9, rotte: {7: [(1, 11), (11, 6), (6, 4), (4, 2)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 5), (5, 4)], 6: [(1, 7), (7, 8), (8, 3), (3, 2)], 8: [(1, 3), (3, 9)], 3: [(1, 10), (10, 2)], 2: [(1, 2)]}, padri: [0], figli: [2], mosse: [(8, 8, 1, 3, 6)]
2 -> costo: 86298.3, rotte: {7: [(1, 11), (11, 6), (6, 4), (4, 2)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 5), (5, 4)], 6: [(1, 7), (7, 8), (8, 3), (3, 2)], 8: [(1, 3), (3, 9)], 3: [(1, 2), (2, 10)], 2: [(1, 2)]}, padri: [1], figli: [3], mosse: [(3, 3, 10, 2)]
3 -> costo: 84562.10000000002, rotte: {7: [(1, 6), (6, 4), (4, 2)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 5), (5, 4)], 6: [(1, 7), (7, 8), (8, 11), (11, 3), (3, 2)], 8: [(1, 3), (3, 9)], 3: [(1, 2), (2, 10)], 2: [(1, 2)]}, padri: [2], figli: [4], mosse: [(6, 7, 8, 11, 6)]
4 -> costo: 83900.7, rotte: {7: [(1, 6), (6, 4), (4, 2)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 4), (4, 5)], 6: [(1, 7), (7, 8), (8, 11), (11, 3), (3, 2)], 8: [(1, 3), (3, 9)], 3: [(1, 2), (2, 10)], 2: [(1, 2)]}, padri: [3], figli: [5], mosse: [(9, 9, 5, 4)]
5 -> costo: 82540.1, rotte: {7: [(1, 4), (4, 2), (2, 6)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 4), (4, 5)], 6: [(1, 7), (7, 8), (8, 11), (11, 3), (3, 2)], 8: [(1, 3), (3, 9)], 3: [(1, 2), (2, 10)], 2: [(1, 2)]}, padri: [4], figli: [6], mosse: [(7, 7, 2, 6, 4)]
6 -> costo: 82054.40000000001, rotte: {7: [(1, 4), (4, 2), (2, 3), (3, 6)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 4), (4, 5)], 6: [(1, 7), (7, 8), (8, 11), (11, 3), (3, 2)], 8: [(1, 9)], 3: [(1, 2), (2, 10)], 2: [(1, 2)]}, padri: [5], figli: [7], mosse: [(7, 8, 2, 3, 6)]
7 -> costo: 82012.1, rotte: {7: [(1, 4), (4, 2), (2, 3), (3, 6)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 4), (4, 5)], 6: [(1, 8), (8, 11), (11, 3), (3, 2)], 8: [(1, 7), (7, 9)], 3: [(1, 2), (2, 10)], 2: [(1, 2)]}, padri: [6], figli: [8], mosse: [(8, 6, 1, 7, 1)]
8 -> costo: 80762.00000000001, rotte: {7: [(1, 4), (4, 2), (2, 3), (3, 6)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 4), (4, 5)], 6: [(1, 11), (11, 3), (3, 2)], 8: [(1, 7), (7, 8), (8, 9)], 3: [(1, 2), (2, 10)], 2: [(1, 2)]}, padri: [7], figli: [9], mosse: [(8, 6, 7, 8, 3)]
9 -> costo: 79924.70000000001, rotte: {7: [(1, 4), (4, 2), (2, 6)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 4), (4, 5)], 6: [(1, 11), (11, 3)], 8: [(1, 7), (7, 8), (8, 9)], 3: [(1, 2), (2, 10)], 2: [(1, 2)]}, padri: [8], figli: [10, 10, 10, 15, 15, 15], mosse: [(7, 6, 3, 2)]
10 -> costo: 77949.8, rotte: {7: [(1, 4), (4, 2), (2, 6)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 4), (4, 5)], 6: [(1, 3), (3, 11)], 8: [(1, 7), (7, 8), (8, 9)], 3: [(1, 2), (2, 10)], 2: [(1, 2)]}, padri: [9, 9, 9], figli: [11, 11, 11, 14, 14, 14], mosse: [(6, 6, 1, 3, 8), (6, 6, 11, 3), (6, 6, 3, 11, 6)]
11 -> costo: 77882.0, rotte: {7: [(1, 4), (4, 2), (2, 6)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 4), (4, 5)], 6: [(1, 3), (3, 11)], 8: [(1, 7), (7, 8), (8, 9)], 3: [(1, 10)], 2: [(1, 2)]}, padri: [10, 10, 10, 15], figli: [12, 13], mosse: [(7, 3, 1, 2, 1), (7, 3, 4, 2, 1), (7, 3, 6, 2, 1), (6, 6, 11, 3)]
12 -> costo: 77788.4, rotte: {7: [(1, 4), (4, 2), (2, 6)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 4), (4, 5)], 6: [(1, 3), (3, 11)], 8: [(1, 8), (8, 9)], 3: [(1, 7), (7, 10)], 2: [(1, 2)]}, padri: [11], figli: [], mosse: [(3, 8, 1, 7, 1)]
13 -> costo: 77881.9, rotte: {7: [(1, 4), (4, 2), (2, 7), (7, 6)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 4), (4, 5)], 6: [(1, 3), (3, 11)], 8: [(1, 8), (8, 9)], 3: [(1, 10)], 2: [(1, 2)]}, padri: [11, 14, 14, 14, 14], figli: [], mosse: [(7, 8, 2, 7, 1), (7, 3, 1, 2, 1), (7, 3, 4, 2, 1), (7, 3, 7, 2, 1), (7, 3, 6, 2, 1)]
14 -> costo: 77949.7, rotte: {7: [(1, 4), (4, 2), (2, 7), (7, 6)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 4), (4, 5)], 6: [(1, 3), (3, 11)], 8: [(1, 8), (8, 9)], 3: [(1, 2), (2, 10)], 2: [(1, 2)]}, padri: [10], figli: [13, 13, 13, 13], mosse: [(7, 8, 2, 7, 1)]
15 -> costo: 79856.90000000001, rotte: {7: [(1, 4), (4, 2), (2, 6)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 4), (4, 5)], 6: [(1, 11), (11, 3)], 8: [(1, 7), (7, 8), (8, 9)], 3: [(1, 10)], 2: [(1, 2)]}, padri: [9], figli: [11], mosse: [(7, 3, 1, 2, 1)]
bestSolutionIndice: 12
12 -> costo: 77788.4, rotte: {7: [(1, 4), (4, 2), (2, 6)], 5: [(1, 8)], 4: [(1, 3)], 9: [(1, 4), (4, 5)], 6: [(1, 3), (3, 11)], 8: [(1, 8), (8, 9)], 3: [(1, 7), (7, 10)], 2: [(1, 2)]}, padri: [11], figli: [], mosse: [(3, 8, 1, 7, 1)]
trasportoPalletDiGamma: {7: [(4, 3), (2, 10), (6, 4)], 5: [(8, 15)], 4: [(3, 10)], 9: [(4, 12), (5, 8)], 6: [(3, 8), (11, 6)], 8: [(8, 3), (9, 14)], 3: [(7, 1), (10, 9)], 2: [(2, 10)]}
itMosseLS: 24, itMosseTS: 13
time elapsed: 340.50s.


##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
