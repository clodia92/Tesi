itNSIMax: 25, itMosseTSMax: 25.
##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 87210.60000000002, rotte: {8: [(1, 4), (4, 9)], 5: [(1, 5), (5, 3)], 6: [(1, 11), (11, 8)], 3: [(1, 7), (7, 9)], 2: [(1, 10), (10, 3)], 7: [(1, 6), (6, 3)], 4: [(1, 8)], 9: [(1, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 84526.40000000002, rotte: {8: [(1, 4), (4, 9)], 5: [(1, 5), (5, 3)], 6: [(1, 11), (11, 8)], 3: [(1, 7), (7, 9)], 2: [(1, 3), (3, 10)], 7: [(1, 6), (6, 3)], 4: [(1, 8)], 9: [(1, 2)]}, padri: [0], figli: [2, 2, 2, 10, 10, 10], mosse: [(2, 2, 1, 3, 1)]
2 -> costo: 83587.10000000002, rotte: {8: [(1, 4), (4, 9)], 5: [(1, 5), (5, 3)], 6: [(1, 8), (8, 11)], 3: [(1, 7), (7, 9)], 2: [(1, 3), (3, 10)], 7: [(1, 6), (6, 3)], 4: [(1, 8)], 9: [(1, 2)]}, padri: [1, 1, 1], figli: [3, 3, 3, 7, 7, 7, 7, 9, 9], mosse: [(6, 6, 1, 8, 8), (6, 6, 8, 11, 6), (6, 6, 11, 8)]
3 -> costo: 82997.20000000003, rotte: {8: [(1, 4), (4, 9)], 5: [(1, 5), (5, 3)], 6: [(1, 8), (8, 11)], 3: [(1, 7), (7, 9)], 2: [(1, 3), (3, 10)], 7: [(1, 3), (3, 6)], 4: [(1, 8)], 9: [(1, 2)]}, padri: [2, 2, 2], figli: [4, 4, 4, 6, 6, 6, 8, 8, 8], mosse: [(7, 7, 1, 3, 10), (7, 7, 3, 6, 4), (7, 7, 6, 3)]
4 -> costo: 82700.80000000003, rotte: {8: [(1, 4), (4, 9)], 5: [(1, 3), (3, 5)], 6: [(1, 8), (8, 11)], 3: [(1, 7), (7, 9)], 2: [(1, 3), (3, 10)], 7: [(1, 3), (3, 6)], 4: [(1, 8)], 9: [(1, 2)]}, padri: [3, 3, 3, 7, 7, 7], figli: [5], mosse: [(5, 5, 1, 3, 7), (5, 5, 3, 5, 8), (5, 5, 5, 3), (7, 7, 1, 3, 10), (7, 7, 3, 6, 4), (7, 7, 6, 3)]
5 -> costo: 82539.3, rotte: {8: [(1, 4), (4, 9)], 5: [(1, 3), (3, 5)], 6: [(1, 8), (8, 11)], 3: [(1, 9)], 2: [(1, 3), (3, 10)], 7: [(1, 3), (3, 7), (7, 6)], 4: [(1, 8)], 9: [(1, 2)]}, padri: [4, 6, 6, 6], figli: [], mosse: [(7, 3, 3, 7, 1), (5, 5, 1, 3, 7), (5, 5, 3, 5, 8), (5, 5, 5, 3)]
6 -> costo: 82835.7, rotte: {8: [(1, 4), (4, 9)], 5: [(1, 5), (5, 3)], 6: [(1, 8), (8, 11)], 3: [(1, 9)], 2: [(1, 3), (3, 10)], 7: [(1, 3), (3, 7), (7, 6)], 4: [(1, 8)], 9: [(1, 2)]}, padri: [3], figli: [5, 5, 5], mosse: [(7, 3, 3, 7, 1)]
7 -> costo: 83290.70000000003, rotte: {8: [(1, 4), (4, 9)], 5: [(1, 3), (3, 5)], 6: [(1, 8), (8, 11)], 3: [(1, 7), (7, 9)], 2: [(1, 3), (3, 10)], 7: [(1, 6), (6, 3)], 4: [(1, 8)], 9: [(1, 2)]}, padri: [2, 2], figli: [4, 4, 4, 8, 8, 8], mosse: [(5, 5, 1, 3, 7), (5, 5, 3, 5, 8)]
8 -> costo: 83129.20000000001, rotte: {8: [(1, 4), (4, 9)], 5: [(1, 3), (3, 5)], 6: [(1, 8), (8, 11)], 3: [(1, 9)], 2: [(1, 3), (3, 10)], 7: [(1, 6), (6, 7), (7, 3)], 4: [(1, 8)], 9: [(1, 2)]}, padri: [7, 9, 9], figli: [], mosse: [(7, 3, 6, 7, 1), (5, 5, 1, 3, 7), (5, 5, 3, 5, 8)]
9 -> costo: 83425.6, rotte: {8: [(1, 4), (4, 9)], 5: [(1, 5), (5, 3)], 6: [(1, 8), (8, 11)], 3: [(1, 9)], 2: [(1, 3), (3, 10)], 7: [(1, 6), (6, 7), (7, 3)], 4: [(1, 8)], 9: [(1, 2)]}, padri: [2], figli: [8, 8], mosse: [(7, 3, 6, 7, 1)]
10 -> costo: 83789.70000000001, rotte: {8: [(1, 4), (4, 9)], 5: [(1, 5), (5, 3)], 6: [(1, 8)], 3: [(1, 7), (7, 9)], 2: [(1, 3), (3, 10)], 7: [(1, 6), (6, 11), (11, 3)], 4: [(1, 8)], 9: [(1, 2)]}, padri: [1], figli: [11], mosse: [(7, 6, 6, 11, 6)]
11 -> costo: 82631.2, rotte: {8: [(1, 4), (4, 9)], 5: [(1, 5), (5, 3)], 6: [(1, 6), (6, 8)], 3: [(1, 7), (7, 9)], 2: [(1, 3), (3, 10)], 7: [(1, 11), (11, 3)], 4: [(1, 8)], 9: [(1, 2)]}, padri: [10], figli: [12], mosse: [(6, 7, 1, 6, 4)]
12 -> costo: 80656.3, rotte: {8: [(1, 4), (4, 9)], 5: [(1, 5), (5, 3)], 6: [(1, 6), (6, 8)], 3: [(1, 7), (7, 9)], 2: [(1, 3), (3, 10)], 7: [(1, 3), (3, 11)], 4: [(1, 8)], 9: [(1, 2)]}, padri: [11], figli: [13, 13, 13], mosse: [(7, 7, 1, 3, 10)]
13 -> costo: 80359.90000000001, rotte: {8: [(1, 4), (4, 9)], 5: [(1, 3), (3, 5)], 6: [(1, 6), (6, 8)], 3: [(1, 7), (7, 9)], 2: [(1, 3), (3, 10)], 7: [(1, 3), (3, 11)], 4: [(1, 8)], 9: [(1, 2)]}, padri: [12, 12, 12], figli: [], mosse: [(5, 5, 1, 3, 7), (5, 5, 3, 5, 8), (5, 5, 5, 3)]
bestSolutionIndice: 13
13 -> costo: 80359.90000000001, rotte: {8: [(1, 4), (4, 9)], 5: [(1, 3), (3, 5)], 6: [(1, 6), (6, 8)], 3: [(1, 7), (7, 9)], 2: [(1, 3), (3, 10)], 7: [(1, 3), (3, 11)], 4: [(1, 8)], 9: [(1, 2)]}, padri: [12, 12, 12], figli: [], mosse: [(5, 5, 1, 3, 7), (5, 5, 3, 5, 8), (5, 5, 5, 3)]
trasportoPalletDiGamma: {8: [(4, 15), (9, 5)], 5: [(3, 7), (5, 8)], 6: [(6, 4), (8, 8)], 3: [(7, 1), (9, 9)], 2: [(3, 1), (10, 9)], 7: [(3, 10), (11, 6)], 4: [(8, 10)], 9: [(2, 20)]}
itMosseLS: 30, itMosseTS: 25
time elapsed: 977.40s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88238.90000000001, rotte: {3: [(1, 5), (5, 9)], 7: [(1, 10), (10, 3)], 5: [(1, 2)], 2: [(1, 4)], 8: [(1, 8), (8, 2)], 9: [(1, 11), (11, 4), (4, 2)], 6: [(1, 6), (6, 9)], 4: [(1, 7), (7, 3), (3, 9)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85554.70000000001, rotte: {3: [(1, 5), (5, 9)], 7: [(1, 3), (3, 10)], 5: [(1, 2)], 2: [(1, 4)], 8: [(1, 8), (8, 2)], 9: [(1, 11), (11, 4), (4, 2)], 6: [(1, 6), (6, 9)], 4: [(1, 7), (7, 3), (3, 9)]}, padri: [0], figli: [2], mosse: [(7, 7, 10, 3)]
2 -> costo: 84123.50000000001, rotte: {3: [(1, 5), (5, 9)], 7: [(1, 3), (3, 10)], 5: [(1, 2)], 2: [(1, 4)], 8: [(1, 2), (2, 8)], 9: [(1, 11), (11, 4), (4, 2)], 6: [(1, 6), (6, 9)], 4: [(1, 7), (7, 3), (3, 9)]}, padri: [1], figli: [3, 9, 11], mosse: [(8, 8, 8, 2)]
3 -> costo: 83226.7, rotte: {3: [(1, 5), (5, 9)], 7: [(1, 3), (3, 10)], 5: [(1, 2)], 2: [(1, 4)], 8: [(1, 2), (2, 8)], 9: [(1, 11), (11, 4), (4, 2)], 6: [(1, 6), (6, 9)], 4: [(1, 3), (3, 7), (7, 9)]}, padri: [2], figli: [4, 7, 8, 8, 8], mosse: [(4, 4, 3, 7, 1)]
4 -> costo: 82505.09999999999, rotte: {3: [(1, 5), (5, 9)], 7: [(1, 3), (3, 10)], 5: [(1, 2)], 2: [(1, 4)], 8: [(1, 2), (2, 8)], 9: [(1, 2), (2, 11), (11, 4)], 6: [(1, 6), (6, 9)], 4: [(1, 3), (3, 7), (7, 9)]}, padri: [3, 8], figli: [5, 6, 6, 6], mosse: [(9, 9, 1, 2, 3), (9, 9, 2, 11, 6)]
5 -> costo: 80363.5, rotte: {3: [(1, 5), (5, 9)], 7: [(1, 3), (3, 10)], 5: [(1, 2)], 2: [(1, 4)], 8: [(1, 2), (2, 8)], 9: [(1, 4), (4, 2), (2, 11)], 6: [(1, 6), (6, 9)], 4: [(1, 3), (3, 7), (7, 9)]}, padri: [4, 6, 7, 7, 12], figli: [], mosse: [(9, 9, 1, 4, 5), (9, 9, 4, 2, 3), (9, 9, 4, 2, 3), (9, 9, 2, 11, 6), (4, 4, 3, 7, 1)]
6 -> costo: 80843.79999999999, rotte: {3: [(1, 5), (5, 9)], 7: [(1, 3), (3, 10)], 5: [(1, 2)], 2: [(1, 4)], 8: [(1, 2), (2, 8)], 9: [(1, 2), (2, 4), (4, 11)], 6: [(1, 6), (6, 9)], 4: [(1, 3), (3, 7), (7, 9)]}, padri: [4, 4, 4, 7, 8, 13], figli: [5], mosse: [(9, 9, 2, 4, 5), (9, 9, 4, 11, 6), (9, 9, 11, 4), (9, 9, 1, 2, 3), (9, 9, 4, 11, 6), (4, 4, 3, 7, 1)]
7 -> costo: 82616.2, rotte: {3: [(1, 5), (5, 9)], 7: [(1, 3), (3, 10)], 5: [(1, 2)], 2: [(1, 4)], 8: [(1, 2), (2, 8)], 9: [(1, 4), (4, 11), (11, 2)], 6: [(1, 6), (6, 9)], 4: [(1, 3), (3, 7), (7, 9)]}, padri: [3, 8], figli: [5, 5, 6], mosse: [(9, 9, 4, 11, 6), (9, 9, 1, 4, 5)]
8 -> costo: 82634.1, rotte: {3: [(1, 5), (5, 9)], 7: [(1, 3), (3, 10)], 5: [(1, 2)], 2: [(1, 4)], 8: [(1, 2), (2, 8)], 9: [(1, 11), (11, 2), (2, 4)], 6: [(1, 6), (6, 9)], 4: [(1, 3), (3, 7), (7, 9)]}, padri: [3, 3, 3], figli: [6, 4, 7], mosse: [(9, 9, 4, 2), (9, 9, 11, 2, 3), (9, 9, 2, 4, 5)]
9 -> costo: 83296.20000000001, rotte: {3: [(1, 5), (5, 9)], 7: [(1, 3), (3, 10)], 5: [(1, 2)], 2: [(1, 4)], 8: [(1, 2), (2, 8)], 9: [(1, 7), (7, 11), (11, 4), (4, 2)], 6: [(1, 6), (6, 9)], 4: [(1, 3), (3, 9)]}, padri: [2], figli: [10, 10, 10], mosse: [(9, 4, 1, 7, 1)]
10 -> costo: 82703.60000000002, rotte: {3: [(1, 5), (5, 9)], 7: [(1, 3), (3, 10)], 5: [(1, 2)], 2: [(1, 4)], 8: [(1, 2), (2, 8)], 9: [(1, 7), (7, 11), (11, 2), (2, 4)], 6: [(1, 6), (6, 9)], 4: [(1, 3), (3, 9)]}, padri: [9, 9, 9], figli: [], mosse: [(9, 9, 4, 2), (9, 9, 11, 2, 3), (9, 9, 2, 4, 5)]
11 -> costo: 83401.90000000001, rotte: {3: [(1, 5), (5, 9)], 7: [(1, 3), (3, 10)], 5: [(1, 2)], 2: [(1, 4)], 8: [(1, 2), (2, 8)], 9: [(1, 2), (2, 11), (11, 4)], 6: [(1, 6), (6, 9)], 4: [(1, 7), (7, 3), (3, 9)]}, padri: [2], figli: [12, 13], mosse: [(9, 9, 1, 2, 3)]
12 -> costo: 81260.30000000002, rotte: {3: [(1, 5), (5, 9)], 7: [(1, 3), (3, 10)], 5: [(1, 2)], 2: [(1, 4)], 8: [(1, 2), (2, 8)], 9: [(1, 4), (4, 2), (2, 11)], 6: [(1, 6), (6, 9)], 4: [(1, 7), (7, 3), (3, 9)]}, padri: [11, 13], figli: [5], mosse: [(9, 9, 1, 4, 5), (9, 9, 4, 2, 3)]
13 -> costo: 81740.6, rotte: {3: [(1, 5), (5, 9)], 7: [(1, 3), (3, 10)], 5: [(1, 2)], 2: [(1, 4)], 8: [(1, 2), (2, 8)], 9: [(1, 2), (2, 4), (4, 11)], 6: [(1, 6), (6, 9)], 4: [(1, 7), (7, 3), (3, 9)]}, padri: [11], figli: [6, 12], mosse: [(9, 9, 2, 4, 5)]
bestSolutionIndice: 5
5 -> costo: 80363.5, rotte: {3: [(1, 5), (5, 9)], 7: [(1, 3), (3, 10)], 5: [(1, 2)], 2: [(1, 4)], 8: [(1, 2), (2, 8)], 9: [(1, 4), (4, 2), (2, 11)], 6: [(1, 6), (6, 9)], 4: [(1, 3), (3, 7), (7, 9)]}, padri: [4, 6, 7, 7, 12], figli: [], mosse: [(9, 9, 1, 4, 5), (9, 9, 4, 2, 3), (9, 9, 4, 2, 3), (9, 9, 2, 11, 6), (4, 4, 3, 7, 1)]
trasportoPalletDiGamma: {3: [(5, 8), (9, 2)], 7: [(3, 11), (10, 9)], 5: [(2, 15)], 2: [(4, 10)], 8: [(2, 2), (8, 18)], 9: [(4, 5), (2, 3), (11, 6)], 6: [(6, 4), (9, 11)], 4: [(3, 7), (7, 1), (9, 1)]}
itMosseLS: 29, itMosseTS: 25
time elapsed: 918.78s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 78257.70000000001, rotte: {6: [(1, 4)], 4: [(1, 11), (11, 9)], 7: [(1, 5), (5, 8), (8, 10)], 2: [(1, 7), (7, 3)], 5: [(1, 8)], 3: [(1, 3)], 9: [(1, 2)], 8: [(1, 6), (6, 9)]}, padri: [-1], figli: [1, 1, 6, 6, 7, 8, 8, 8], mosse: [-1]
1 -> costo: 76076.5, rotte: {6: [(1, 4)], 4: [(1, 11)], 7: [(1, 5), (5, 8), (8, 10)], 2: [(1, 7), (7, 3)], 5: [(1, 8)], 3: [(1, 3)], 9: [(1, 2)], 8: [(1, 6), (6, 9)]}, padri: [0, 0], figli: [2, 3, 4, 5, 5, 5], mosse: [(8, 4, 1, 9, 4), (8, 4, 6, 9, 4)]
2 -> costo: 75140.79999999999, rotte: {6: [(1, 4)], 4: [(1, 11)], 7: [(1, 5), (5, 8), (8, 10)], 2: [(1, 3)], 5: [(1, 8)], 3: [(1, 3)], 9: [(1, 2)], 8: [(1, 7), (7, 6), (6, 9)]}, padri: [1, 3, 4, 6, 6, 6], figli: [], mosse: [(8, 2, 1, 7, 1), (8, 4, 1, 7, 1), (8, 8, 7, 6, 4), (8, 4, 1, 9, 4), (8, 4, 7, 9, 4), (8, 4, 6, 9, 4)]
3 -> costo: 75249.2, rotte: {6: [(1, 4)], 4: [(1, 7), (7, 11)], 7: [(1, 5), (5, 8), (8, 10)], 2: [(1, 3)], 5: [(1, 8)], 3: [(1, 3)], 9: [(1, 2)], 8: [(1, 6), (6, 9)]}, padri: [1], figli: [2], mosse: [(4, 2, 1, 7, 1)]
4 -> costo: 75526.19999999998, rotte: {6: [(1, 4)], 4: [(1, 11)], 7: [(1, 5), (5, 8), (8, 10)], 2: [(1, 3)], 5: [(1, 8)], 3: [(1, 3)], 9: [(1, 2)], 8: [(1, 6), (6, 7), (7, 9)]}, padri: [1, 7, 7, 7], figli: [2], mosse: [(8, 2, 6, 7, 1), (8, 4, 1, 9, 4), (8, 4, 6, 9, 4), (8, 4, 7, 9, 4)]
5 -> costo: 75746.9, rotte: {6: [(1, 4)], 4: [(1, 11)], 7: [(1, 5), (5, 8), (8, 10)], 2: [(1, 3), (3, 7)], 5: [(1, 8)], 3: [(1, 3)], 9: [(1, 2)], 8: [(1, 6), (6, 9)]}, padri: [1, 1, 1, 8, 8], figli: [], mosse: [(2, 2, 1, 3, 8), (2, 2, 3, 7, 1), (2, 2, 7, 3), (8, 4, 1, 9, 4), (8, 4, 6, 9, 4)]
6 -> costo: 77322.00000000001, rotte: {6: [(1, 4)], 4: [(1, 11), (11, 9)], 7: [(1, 5), (5, 8), (8, 10)], 2: [(1, 3)], 5: [(1, 8)], 3: [(1, 3)], 9: [(1, 2)], 8: [(1, 7), (7, 6), (6, 9)]}, padri: [0, 7], figli: [2, 2, 2], mosse: [(8, 2, 1, 7, 1), (8, 8, 7, 6, 4)]
7 -> costo: 77707.40000000001, rotte: {6: [(1, 4)], 4: [(1, 11), (11, 9)], 7: [(1, 5), (5, 8), (8, 10)], 2: [(1, 3)], 5: [(1, 8)], 3: [(1, 3)], 9: [(1, 2)], 8: [(1, 6), (6, 7), (7, 9)]}, padri: [0], figli: [4, 4, 4, 6], mosse: [(8, 2, 6, 7, 1)]
8 -> costo: 77928.10000000002, rotte: {6: [(1, 4)], 4: [(1, 11), (11, 9)], 7: [(1, 5), (5, 8), (8, 10)], 2: [(1, 3), (3, 7)], 5: [(1, 8)], 3: [(1, 3)], 9: [(1, 2)], 8: [(1, 6), (6, 9)]}, padri: [0, 0, 0], figli: [5, 5], mosse: [(2, 2, 1, 3, 8), (2, 2, 3, 7, 1), (2, 2, 7, 3)]
bestSolutionIndice: 2
2 -> costo: 75140.79999999999, rotte: {6: [(1, 4)], 4: [(1, 11)], 7: [(1, 5), (5, 8), (8, 10)], 2: [(1, 3)], 5: [(1, 8)], 3: [(1, 3)], 9: [(1, 2)], 8: [(1, 7), (7, 6), (6, 9)]}, padri: [1, 3, 4, 6, 6, 6], figli: [], mosse: [(8, 2, 1, 7, 1), (8, 4, 1, 7, 1), (8, 8, 7, 6, 4), (8, 4, 1, 9, 4), (8, 4, 7, 9, 4), (8, 4, 6, 9, 4)]
trasportoPalletDiGamma: {6: [(4, 15)], 4: [(11, 6)], 7: [(5, 8), (8, 3), (10, 9)], 2: [(3, 8)], 5: [(8, 15)], 3: [(3, 10)], 9: [(2, 20)], 8: [(7, 1), (6, 4), (9, 14)]}
itMosseLS: 24, itMosseTS: 24
time elapsed: 569.47s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 85030.20000000001, rotte: {4: [(1, 3)], 5: [(1, 5), (5, 7), (7, 9)], 6: [(1, 8)], 3: [(1, 10), (10, 9)], 7: [(1, 11), (11, 3), (3, 9)], 8: [(1, 2)], 9: [(1, 4), (4, 9)], 2: [(1, 6), (6, 8)]}, padri: [-1], figli: [1, 2], mosse: [-1]
1 -> costo: 82636.4, rotte: {4: [(1, 3)], 5: [(1, 5), (5, 7), (7, 9)], 6: [(1, 8)], 3: [(1, 10), (10, 9)], 7: [(1, 3), (3, 11), (11, 9)], 8: [(1, 2)], 9: [(1, 4), (4, 9)], 2: [(1, 6), (6, 8)]}, padri: [0, 2, 2, 2], figli: [], mosse: [(7, 7, 3, 11, 6), (7, 7, 9, 11), (7, 7, 3, 11, 6), (7, 7, 11, 9, 2)]
2 -> costo: 84105.4, rotte: {4: [(1, 3)], 5: [(1, 5), (5, 7), (7, 9)], 6: [(1, 8)], 3: [(1, 10), (10, 9)], 7: [(1, 3), (3, 9), (9, 11)], 8: [(1, 2)], 9: [(1, 4), (4, 9)], 2: [(1, 6), (6, 8)]}, padri: [0], figli: [1, 1, 1], mosse: [(7, 7, 9, 11, 6)]
bestSolutionIndice: 1
1 -> costo: 82636.4, rotte: {4: [(1, 3)], 5: [(1, 5), (5, 7), (7, 9)], 6: [(1, 8)], 3: [(1, 10), (10, 9)], 7: [(1, 3), (3, 11), (11, 9)], 8: [(1, 2)], 9: [(1, 4), (4, 9)], 2: [(1, 6), (6, 8)]}, padri: [0, 2, 2, 2], figli: [], mosse: [(7, 7, 3, 11, 6), (7, 7, 9, 11), (7, 7, 3, 11, 6), (7, 7, 11, 9, 2)]
trasportoPalletDiGamma: {4: [(3, 10)], 5: [(5, 8), (7, 1), (9, 6)], 6: [(8, 15)], 3: [(10, 9), (9, 1)], 7: [(3, 8), (11, 6), (9, 2)], 8: [(2, 20)], 9: [(4, 15), (9, 5)], 2: [(6, 4), (8, 3)]}
itMosseLS: 5, itMosseTS: 5
time elapsed: 154.48s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 90958.90000000001, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 11), (11, 2)], 6: [(1, 6), (6, 7), (7, 9), (9, 2)], 7: [(1, 3), (3, 4)], 8: [(1, 8), (8, 9)], 3: [(1, 10), (10, 2)], 9: [(1, 5), (5, 4), (4, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 87375.5, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2)], 6: [(1, 6), (6, 7), (7, 9), (9, 11), (11, 2)], 7: [(1, 3), (3, 4)], 8: [(1, 8), (8, 9)], 3: [(1, 10), (10, 2)], 9: [(1, 5), (5, 4), (4, 2)]}, padri: [0], figli: [2], mosse: [(6, 5, 9, 11, 6)]
2 -> costo: 84216.1, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2)], 6: [(1, 6), (6, 7), (7, 9), (9, 11), (11, 2)], 7: [(1, 3), (3, 4)], 8: [(1, 8), (8, 9)], 3: [(1, 10)], 9: [(1, 5), (5, 4), (4, 2)]}, padri: [1], figli: [3], mosse: [(5, 3, 1, 2, 1)]
3 -> costo: 81833.8, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2)], 6: [(1, 6), (6, 7), (7, 9), (9, 11)], 7: [(1, 3), (3, 4)], 8: [(1, 8), (8, 9)], 3: [(1, 10)], 9: [(1, 5), (5, 4), (4, 2)]}, padri: [2], figli: [4], mosse: [(5, 6, 1, 2, 1)]
4 -> costo: 80773.9, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2)], 6: [(1, 6), (6, 7), (7, 9), (9, 11)], 7: [(1, 3), (3, 4)], 8: [(1, 8), (8, 9)], 3: [(1, 10)], 9: [(1, 4), (4, 2), (2, 5)]}, padri: [3], figli: [5, 13], mosse: [(9, 9, 2, 5, 8)]
5 -> costo: 80388.5, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2)], 6: [(1, 7), (7, 6), (6, 9), (9, 11)], 7: [(1, 3), (3, 4)], 8: [(1, 8), (8, 9)], 3: [(1, 10)], 9: [(1, 4), (4, 2), (2, 5)]}, padri: [4], figli: [6, 10, 10, 10, 12, 12, 12, 14, 14, 14], mosse: [(6, 6, 7, 6, 4)]
6 -> costo: 80085.59999999999, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2)], 6: [(1, 6), (6, 9), (9, 11)], 7: [(1, 3), (3, 4)], 8: [(1, 8), (8, 9)], 3: [(1, 7), (7, 10)], 9: [(1, 4), (4, 2), (2, 5)]}, padri: [5], figli: [7, 7, 7, 9, 9, 9, 11, 11, 11], mosse: [(3, 6, 1, 7, 1)]
7 -> costo: 79789.29999999999, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2)], 6: [(1, 6), (6, 9), (9, 11)], 7: [(1, 4), (4, 3)], 8: [(1, 8), (8, 9)], 3: [(1, 7), (7, 10)], 9: [(1, 4), (4, 2), (2, 5)]}, padri: [6, 6, 6, 10], figli: [8], mosse: [(7, 7, 1, 4, 2), (7, 7, 4, 3, 18), (7, 7, 3, 4), (3, 6, 1, 7, 1)]
8 -> costo: 79677.6, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2), (2, 4)], 6: [(1, 6), (6, 9), (9, 11)], 7: [(1, 4), (4, 3)], 8: [(1, 8), (8, 9)], 3: [(1, 7), (7, 10)], 9: [(1, 2), (2, 5)]}, padri: [7, 9, 9, 9, 11], figli: [], mosse: [(5, 9, 2, 4, 3), (7, 7, 1, 4, 2), (7, 7, 4, 3, 18), (7, 7, 3, 4), (3, 6, 1, 7, 1)]
9 -> costo: 79973.9, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2), (2, 4)], 6: [(1, 6), (6, 9), (9, 11)], 7: [(1, 3), (3, 4)], 8: [(1, 8), (8, 9)], 3: [(1, 7), (7, 10)], 9: [(1, 2), (2, 5)]}, padri: [6, 12], figli: [8, 8, 8], mosse: [(5, 9, 2, 4, 3), (3, 6, 1, 7, 1)]
10 -> costo: 80092.2, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2)], 6: [(1, 7), (7, 6), (6, 9), (9, 11)], 7: [(1, 4), (4, 3)], 8: [(1, 8), (8, 9)], 3: [(1, 10)], 9: [(1, 4), (4, 2), (2, 5)]}, padri: [5, 5, 5, 13], figli: [7, 11], mosse: [(7, 7, 1, 4, 2), (7, 7, 4, 3, 18), (7, 7, 3, 4), (6, 6, 7, 6, 4)]
11 -> costo: 79980.5, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2), (2, 4)], 6: [(1, 7), (7, 6), (6, 9), (9, 11)], 7: [(1, 4), (4, 3)], 8: [(1, 8), (8, 9)], 3: [(1, 10)], 9: [(1, 2), (2, 5)]}, padri: [10, 12, 12, 12], figli: [8], mosse: [(5, 9, 2, 4, 3), (7, 7, 1, 4, 2), (7, 7, 4, 3, 18), (7, 7, 3, 4)]
12 -> costo: 80276.8, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2), (2, 4)], 6: [(1, 7), (7, 6), (6, 9), (9, 11)], 7: [(1, 3), (3, 4)], 8: [(1, 8), (8, 9)], 3: [(1, 10)], 9: [(1, 2), (2, 5)]}, padri: [5], figli: [9, 11, 11, 11], mosse: [(5, 9, 2, 4, 3)]
13 -> costo: 80477.59999999999, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2)], 6: [(1, 6), (6, 7), (7, 9), (9, 11)], 7: [(1, 4), (4, 3)], 8: [(1, 8), (8, 9)], 3: [(1, 10)], 9: [(1, 4), (4, 2), (2, 5)]}, padri: [4], figli: [10, 14, 14, 14], mosse: [(7, 7, 1, 4, 2)]
14 -> costo: 80284.2, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2)], 6: [(1, 6), (6, 7), (7, 11), (11, 9)], 7: [(1, 4), (4, 3)], 8: [(1, 8), (8, 9)], 3: [(1, 10)], 9: [(1, 4), (4, 2), (2, 5)]}, padri: [13, 13, 13], figli: [15], mosse: [(6, 6, 7, 11, 6), (6, 6, 11, 9, 2), (6, 6, 9, 11)]
15 -> costo: 80172.5, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2), (2, 4)], 6: [(1, 6), (6, 7), (7, 11), (11, 9)], 7: [(1, 4), (4, 3)], 8: [(1, 8), (8, 9)], 3: [(1, 10)], 9: [(1, 2), (2, 5)]}, padri: [14], figli: [], mosse: [(5, 9, 2, 4, 3)]
bestSolutionIndice: 8
8 -> costo: 79677.6, rotte: {2: [(1, 4)], 4: [(1, 9)], 5: [(1, 2), (2, 4)], 6: [(1, 6), (6, 9), (9, 11)], 7: [(1, 4), (4, 3)], 8: [(1, 8), (8, 9)], 3: [(1, 7), (7, 10)], 9: [(1, 2), (2, 5)]}, padri: [7, 9, 9, 9, 11], figli: [], mosse: [(5, 9, 2, 4, 3), (7, 7, 1, 4, 2), (7, 7, 4, 3, 18), (7, 7, 3, 4), (3, 6, 1, 7, 1)]
trasportoPalletDiGamma: {2: [(4, 10)], 4: [(9, 10)], 5: [(2, 11), (4, 3)], 6: [(6, 4), (9, 2), (11, 6)], 7: [(4, 2), (3, 18)], 8: [(8, 18), (9, 2)], 3: [(7, 1), (10, 9)], 9: [(2, 9), (5, 8)]}
itMosseLS: 31, itMosseTS: 25
time elapsed: 676.31s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 91811.60000000002, rotte: {7: [(1, 6), (6, 2)], 9: [(1, 3), (3, 7), (7, 8)], 6: [(1, 9), (9, 4)], 4: [(1, 10), (10, 8)], 3: [(1, 4)], 2: [(1, 5), (5, 2)], 8: [(1, 11), (11, 4), (4, 2), (2, 8)], 5: [(1, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 88924.30000000002, rotte: {7: [(1, 6), (6, 2)], 9: [(1, 3), (3, 7), (7, 8)], 6: [(1, 9), (9, 4)], 4: [(1, 10), (10, 8)], 3: [(1, 4)], 2: [(1, 5), (5, 2)], 8: [(1, 4), (4, 2), (2, 8), (8, 11)], 5: [(1, 8)]}, padri: [0], figli: [2], mosse: [(8, 8, 8, 11, 6)]
2 -> costo: 86083.6, rotte: {7: [(1, 6), (6, 2)], 9: [(1, 3), (3, 7), (7, 8)], 6: [(1, 4), (4, 9)], 4: [(1, 10), (10, 8)], 3: [(1, 4)], 2: [(1, 5), (5, 2)], 8: [(1, 4), (4, 2), (2, 8), (8, 11)], 5: [(1, 8)]}, padri: [1], figli: [3], mosse: [(6, 6, 9, 4)]
3 -> costo: 83467.70000000001, rotte: {7: [(1, 2)], 9: [(1, 3), (3, 7), (7, 8)], 6: [(1, 4), (4, 9)], 4: [(1, 10), (10, 8)], 3: [(1, 4)], 2: [(1, 5), (5, 2)], 8: [(1, 4), (4, 2), (2, 6), (6, 8), (8, 11)], 5: [(1, 8)]}, padri: [2], figli: [4], mosse: [(8, 7, 2, 6, 4)]
4 -> costo: 81505.30000000002, rotte: {7: [(1, 2)], 9: [(1, 3), (3, 7), (7, 8)], 6: [(1, 4), (4, 9)], 4: [(1, 10), (10, 8)], 3: [(1, 4)], 2: [(1, 5)], 8: [(1, 4), (4, 2), (2, 6), (6, 8), (8, 11)], 5: [(1, 8)]}, padri: [3], figli: [5, 10], mosse: [(7, 2, 1, 2, 2)]
5 -> costo: 79856.00000000001, rotte: {7: [(1, 2)], 9: [(1, 3), (3, 7), (7, 8)], 6: [(1, 4), (4, 9)], 4: [(1, 8), (8, 10)], 3: [(1, 4)], 2: [(1, 5)], 8: [(1, 4), (4, 2), (2, 6), (6, 8), (8, 11)], 5: [(1, 8)]}, padri: [4], figli: [6, 8, 9, 11], mosse: [(4, 4, 10, 8)]
6 -> costo: 79032.30000000002, rotte: {7: [(1, 2), (2, 4)], 9: [(1, 3), (3, 7), (7, 8)], 6: [(1, 9)], 4: [(1, 8), (8, 10)], 3: [(1, 4)], 2: [(1, 5)], 8: [(1, 4), (4, 2), (2, 6), (6, 8), (8, 11)], 5: [(1, 8)]}, padri: [5, 8, 8, 10], figli: [7], mosse: [(7, 6, 2, 4, 1), (7, 7, 1, 2, 18), (7, 7, 2, 4, 1), (4, 4, 10, 8)]
7 -> costo: 78428.50000000001, rotte: {7: [(1, 2)], 9: [(1, 3), (3, 7), (7, 8)], 6: [(1, 9)], 4: [(1, 8), (8, 10)], 3: [(1, 4)], 2: [(1, 5)], 8: [(1, 4), (4, 6), (6, 8), (8, 11)], 5: [(1, 8)]}, padri: [6, 8, 11], figli: [], mosse: [(7, 8, 4, 2), (7, 8, 4, 2), (4, 4, 10, 8)]
8 -> costo: 79144.00000000001, rotte: {7: [(1, 4), (4, 2)], 9: [(1, 3), (3, 7), (7, 8)], 6: [(1, 9)], 4: [(1, 8), (8, 10)], 3: [(1, 4)], 2: [(1, 5)], 8: [(1, 4), (4, 2), (2, 6), (6, 8), (8, 11)], 5: [(1, 8)]}, padri: [5], figli: [7, 6, 6, 11, 11], mosse: [(7, 6, 1, 4, 1)]
9 -> costo: 79532.90000000001, rotte: {7: [(1, 2)], 9: [(1, 3), (3, 7), (7, 8)], 6: [(1, 4), (4, 9)], 4: [(1, 8), (8, 10)], 3: [(1, 4)], 2: [(1, 5)], 8: [(1, 4), (4, 6), (6, 8), (8, 11)], 5: [(1, 8)]}, padri: [5], figli: [], mosse: [(7, 8, 1, 2, 2)]
10 -> costo: 80681.60000000002, rotte: {7: [(1, 2), (2, 4)], 9: [(1, 3), (3, 7), (7, 8)], 6: [(1, 9)], 4: [(1, 10), (10, 8)], 3: [(1, 4)], 2: [(1, 5)], 8: [(1, 4), (4, 2), (2, 6), (6, 8), (8, 11)], 5: [(1, 8)]}, padri: [4], figli: [6, 11], mosse: [(7, 6, 2, 4, 1)]
11 -> costo: 80077.80000000002, rotte: {7: [(1, 2)], 9: [(1, 3), (3, 7), (7, 8)], 6: [(1, 9)], 4: [(1, 10), (10, 8)], 3: [(1, 4)], 2: [(1, 5)], 8: [(1, 4), (4, 6), (6, 8), (8, 11)], 5: [(1, 8)]}, padri: [10], figli: [7], mosse: [(7, 8, 4, 2)]
bestSolutionIndice: 7
7 -> costo: 78428.50000000001, rotte: {7: [(1, 2)], 9: [(1, 3), (3, 7), (7, 8)], 6: [(1, 9)], 4: [(1, 8), (8, 10)], 3: [(1, 4)], 2: [(1, 5)], 8: [(1, 4), (4, 6), (6, 8), (8, 11)], 5: [(1, 8)]}, padri: [6, 8, 11], figli: [], mosse: [(7, 8, 4, 2), (7, 8, 4, 2), (4, 4, 10, 8)]
trasportoPalletDiGamma: {7: [(2, 20)], 9: [(3, 18), (7, 1), (8, 1)], 6: [(9, 14)], 4: [(8, 1), (10, 9)], 3: [(4, 10)], 2: [(5, 8)], 8: [(4, 5), (6, 4), (8, 1), (11, 6)], 5: [(8, 15)]}
itMosseLS: 16, itMosseTS: 10
time elapsed: 305.47s.


##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
