itNSIMax: 10, itMosseTSMax: 30.
##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 84800.09999999999, rotte: {7: [(1, 7), (7, 9), (9, 6)], 4: [(1, 2)], 2: [(1, 10), (10, 6)], 5: [(1, 5), (5, 2)], 6: [(1, 8)], 3: [(1, 11), (11, 8)], 9: [(1, 3), (3, 6)], 8: [(1, 4), (4, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 82273.3, rotte: {7: [(1, 7), (7, 9), (9, 6)], 4: [(1, 2)], 2: [(1, 10)], 5: [(1, 5), (5, 2)], 6: [(1, 8)], 3: [(1, 11), (11, 8)], 9: [(1, 3), (3, 6)], 8: [(1, 4), (4, 2)]}, padri: [0], figli: [2], mosse: [(7, 2, 1, 6, 1)]
2 -> costo: 80636.8, rotte: {7: [(1, 7), (7, 6), (6, 9)], 4: [(1, 2)], 2: [(1, 10)], 5: [(1, 5), (5, 2)], 6: [(1, 8)], 3: [(1, 11), (11, 8)], 9: [(1, 3), (3, 6)], 8: [(1, 4), (4, 2)]}, padri: [1], figli: [3], mosse: [(7, 7, 9, 6)]
3 -> costo: 79091.7, rotte: {7: [(1, 7), (7, 6), (6, 9)], 4: [(1, 2)], 2: [(1, 10)], 5: [(1, 5), (5, 2)], 6: [(1, 8)], 3: [(1, 11), (11, 8)], 9: [(1, 3)], 8: [(1, 4), (4, 2)]}, padri: [2], figli: [4, 4, 4], mosse: [(7, 9, 1, 6, 2)]
4 -> costo: 78152.4, rotte: {7: [(1, 7), (7, 6), (6, 9)], 4: [(1, 2)], 2: [(1, 10)], 5: [(1, 5), (5, 2)], 6: [(1, 8)], 3: [(1, 8), (8, 11)], 9: [(1, 3)], 8: [(1, 4), (4, 2)]}, padri: [3, 3, 3], figli: [5, 5, 5, 9, 9, 9, 11, 11, 11], mosse: [(3, 3, 1, 8, 3), (3, 3, 8, 11, 6), (3, 3, 11, 8)]
5 -> costo: 77379.3, rotte: {7: [(1, 7), (7, 6), (6, 9)], 4: [(1, 2)], 2: [(1, 10)], 5: [(1, 2), (2, 5)], 6: [(1, 8)], 3: [(1, 8), (8, 11)], 9: [(1, 3)], 8: [(1, 4), (4, 2)]}, padri: [4, 4, 4], figli: [6, 8, 8, 8, 10], mosse: [(5, 5, 5, 2), (5, 5, 1, 2, 7), (5, 5, 2, 5, 8)]
6 -> costo: 77076.4, rotte: {7: [(1, 6), (6, 9)], 4: [(1, 2)], 2: [(1, 7), (7, 10)], 5: [(1, 2), (2, 5)], 6: [(1, 8)], 3: [(1, 8), (8, 11)], 9: [(1, 3)], 8: [(1, 4), (4, 2)]}, padri: [5, 9, 9, 9], figli: [7, 7, 7], mosse: [(2, 7, 1, 7, 1), (5, 5, 5, 2), (5, 5, 1, 2, 7), (5, 5, 2, 5, 8)]
7 -> costo: 76964.7, rotte: {7: [(1, 6), (6, 9)], 4: [(1, 2)], 2: [(1, 7), (7, 10)], 5: [(1, 2), (2, 5)], 6: [(1, 8)], 3: [(1, 8), (8, 11)], 9: [(1, 3)], 8: [(1, 2), (2, 4)]}, padri: [6, 6, 6, 8, 10, 10, 10], figli: [], mosse: [(8, 8, 1, 2, 3), (8, 8, 2, 4, 15), (8, 8, 4, 2), (2, 7, 1, 7, 1), (5, 5, 5, 2), (5, 5, 1, 2, 7), (5, 5, 2, 5, 8)]
8 -> costo: 77267.6, rotte: {7: [(1, 7), (7, 6), (6, 9)], 4: [(1, 2)], 2: [(1, 10)], 5: [(1, 2), (2, 5)], 6: [(1, 8)], 3: [(1, 8), (8, 11)], 9: [(1, 3)], 8: [(1, 2), (2, 4)]}, padri: [5, 5, 5, 11, 11, 11], figli: [7], mosse: [(8, 8, 1, 2, 3), (8, 8, 2, 4, 15), (8, 8, 4, 2), (5, 5, 5, 2), (5, 5, 1, 2, 7), (5, 5, 2, 5, 8)]
9 -> costo: 77849.5, rotte: {7: [(1, 6), (6, 9)], 4: [(1, 2)], 2: [(1, 7), (7, 10)], 5: [(1, 5), (5, 2)], 6: [(1, 8)], 3: [(1, 8), (8, 11)], 9: [(1, 3)], 8: [(1, 4), (4, 2)]}, padri: [4], figli: [6, 6, 6, 10, 10, 10, 10, 10], mosse: [(2, 7, 1, 7, 1)]
10 -> costo: 77737.8, rotte: {7: [(1, 6), (6, 9)], 4: [(1, 2)], 2: [(1, 7), (7, 10)], 5: [(1, 5), (5, 2)], 6: [(1, 8)], 3: [(1, 8), (8, 11)], 9: [(1, 3)], 8: [(1, 2), (2, 4)]}, padri: [9, 9, 9, 11], figli: [7, 7, 7], mosse: [(8, 8, 1, 2, 3), (8, 8, 2, 4, 15), (8, 8, 4, 2), (2, 7, 1, 7, 1)]
11 -> costo: 78040.7, rotte: {7: [(1, 7), (7, 6), (6, 9)], 4: [(1, 2)], 2: [(1, 10)], 5: [(1, 5), (5, 2)], 6: [(1, 8)], 3: [(1, 8), (8, 11)], 9: [(1, 3)], 8: [(1, 2), (2, 4)]}, padri: [4, 4, 4], figli: [8, 8, 8, 10], mosse: [(8, 8, 1, 2, 3), (8, 8, 2, 4, 15), (8, 8, 4, 2)]
bestSolutionIndice: 7
7 -> costo: 76964.7, rotte: {7: [(1, 6), (6, 9)], 4: [(1, 2)], 2: [(1, 7), (7, 10)], 5: [(1, 2), (2, 5)], 6: [(1, 8)], 3: [(1, 8), (8, 11)], 9: [(1, 3)], 8: [(1, 2), (2, 4)]}, padri: [6, 6, 6, 8, 10, 10, 10], figli: [], mosse: [(8, 8, 1, 2, 3), (8, 8, 2, 4, 15), (8, 8, 4, 2), (2, 7, 1, 7, 1), (5, 5, 5, 2), (5, 5, 1, 2, 7), (5, 5, 2, 5, 8)]
trasportoPalletDiGamma: {7: [(6, 4), (9, 14)], 4: [(2, 10)], 2: [(7, 1), (10, 9)], 5: [(2, 7), (5, 8)], 6: [(8, 15)], 3: [(8, 3), (11, 6)], 9: [(3, 18)], 8: [(2, 3), (4, 15)]}
itMosseLS: 34, itMosseTS: 30
time elapsed: 813.18s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 87585.9, rotte: {4: [(1, 6), (6, 11)], 2: [(1, 2)], 5: [(1, 9), (9, 5)], 9: [(1, 7), (7, 2), (2, 4), (4, 5)], 3: [(1, 4)], 7: [(1, 3), (3, 4)], 6: [(1, 10), (10, 5)], 8: [(1, 8), (8, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85077.7, rotte: {4: [(1, 6), (6, 11)], 2: [(1, 2)], 5: [(1, 9), (9, 5)], 9: [(1, 7), (7, 2), (2, 4), (4, 5)], 3: [(1, 4)], 7: [(1, 3), (3, 4)], 6: [(1, 10), (10, 5)], 8: [(1, 8)]}, padri: [0], figli: [2], mosse: [(9, 8, 1, 4, 2)]
2 -> costo: 82724.7, rotte: {4: [(1, 6), (6, 11)], 2: [(1, 2)], 5: [(1, 9), (9, 5)], 9: [(1, 2), (2, 4), (4, 5)], 3: [(1, 4)], 7: [(1, 3), (3, 4)], 6: [(1, 10), (10, 5)], 8: [(1, 7), (7, 8)]}, padri: [1], figli: [3], mosse: [(8, 9, 1, 7, 1)]
3 -> costo: 80383.5, rotte: {4: [(1, 6), (6, 11)], 2: [(1, 2)], 5: [(1, 9)], 9: [(1, 2), (2, 4), (4, 5)], 3: [(1, 4)], 7: [(1, 3), (3, 4)], 6: [(1, 10), (10, 5)], 8: [(1, 7), (7, 8)]}, padri: [2], figli: [4], mosse: [(9, 5, 1, 5, 1)]
4 -> costo: 78054.0, rotte: {4: [(1, 6), (6, 11)], 2: [(1, 2)], 5: [(1, 9)], 9: [(1, 2), (2, 4), (4, 5)], 3: [(1, 4)], 7: [(1, 3), (3, 4)], 6: [(1, 5), (5, 10)], 8: [(1, 7), (7, 8)]}, padri: [3], figli: [5], mosse: [(6, 6, 1, 5, 6)]
5 -> costo: 77210.20000000001, rotte: {4: [(1, 11)], 2: [(1, 2)], 5: [(1, 9)], 9: [(1, 2), (2, 4), (4, 5), (5, 6)], 3: [(1, 4)], 7: [(1, 3), (3, 4)], 6: [(1, 5), (5, 10)], 8: [(1, 7), (7, 8)]}, padri: [4], figli: [6, 6, 6, 12, 12, 12, 16], mosse: [(9, 4, 5, 6, 4)]
6 -> costo: 76913.90000000001, rotte: {4: [(1, 11)], 2: [(1, 2)], 5: [(1, 9)], 9: [(1, 2), (2, 4), (4, 5), (5, 6)], 3: [(1, 4)], 7: [(1, 4), (4, 3)], 6: [(1, 5), (5, 10)], 8: [(1, 7), (7, 8)]}, padri: [5, 5, 5], figli: [7, 11, 13], mosse: [(7, 7, 1, 4, 2), (7, 7, 4, 3, 18), (7, 7, 3, 4)]
7 -> costo: 76627.1, rotte: {4: [(1, 11)], 2: [(1, 2)], 5: [(1, 9)], 9: [(1, 4), (4, 2), (2, 5), (5, 6)], 3: [(1, 4)], 7: [(1, 4), (4, 3)], 6: [(1, 5), (5, 10)], 8: [(1, 7), (7, 8)]}, padri: [6, 12, 12, 12], figli: [8, 10, 14], mosse: [(9, 9, 4, 2, 10), (7, 7, 1, 4, 2), (7, 7, 4, 3, 18), (7, 7, 3, 4)]
8 -> costo: 76497.50000000001, rotte: {4: [(1, 4), (4, 11)], 2: [(1, 2)], 5: [(1, 9)], 9: [(1, 2), (2, 5), (5, 6)], 3: [(1, 4)], 7: [(1, 4), (4, 3)], 6: [(1, 5), (5, 10)], 8: [(1, 7), (7, 8)]}, padri: [7, 13, 13, 13], figli: [9], mosse: [(4, 9, 1, 4, 3), (7, 7, 1, 4, 2), (7, 7, 4, 3, 18), (7, 7, 3, 4)]
9 -> costo: 76455.20000000001, rotte: {4: [(1, 4), (4, 11)], 2: [(1, 2)], 5: [(1, 7), (7, 9)], 9: [(1, 2), (2, 5), (5, 6)], 3: [(1, 4)], 7: [(1, 4), (4, 3)], 6: [(1, 5), (5, 10)], 8: [(1, 8)]}, padri: [8, 10, 14, 14, 14], figli: [], mosse: [(5, 8, 1, 7, 1), (4, 9, 1, 4, 3), (7, 7, 1, 4, 2), (7, 7, 4, 3, 18), (7, 7, 3, 4)]
10 -> costo: 76584.8, rotte: {4: [(1, 11)], 2: [(1, 2)], 5: [(1, 7), (7, 9)], 9: [(1, 4), (4, 2), (2, 5), (5, 6)], 3: [(1, 4)], 7: [(1, 4), (4, 3)], 6: [(1, 5), (5, 10)], 8: [(1, 8)]}, padri: [7, 11, 15, 15, 15], figli: [9], mosse: [(5, 8, 1, 7, 1), (9, 9, 4, 2, 10), (7, 7, 1, 4, 2), (7, 7, 4, 3, 18), (7, 7, 3, 4)]
11 -> costo: 76871.6, rotte: {4: [(1, 11)], 2: [(1, 2)], 5: [(1, 7), (7, 9)], 9: [(1, 2), (2, 4), (4, 5), (5, 6)], 3: [(1, 4)], 7: [(1, 4), (4, 3)], 6: [(1, 5), (5, 10)], 8: [(1, 8)]}, padri: [6, 16, 16, 16], figli: [10], mosse: [(5, 8, 1, 7, 1), (7, 7, 1, 4, 2), (7, 7, 4, 3, 18), (7, 7, 3, 4)]
12 -> costo: 76923.40000000001, rotte: {4: [(1, 11)], 2: [(1, 2)], 5: [(1, 9)], 9: [(1, 4), (4, 2), (2, 5), (5, 6)], 3: [(1, 4)], 7: [(1, 3), (3, 4)], 6: [(1, 5), (5, 10)], 8: [(1, 7), (7, 8)]}, padri: [5], figli: [7, 7, 7, 13, 13, 13, 15], mosse: [(9, 9, 4, 2, 10)]
13 -> costo: 76793.8, rotte: {4: [(1, 4), (4, 11)], 2: [(1, 2)], 5: [(1, 9)], 9: [(1, 2), (2, 5), (5, 6)], 3: [(1, 4)], 7: [(1, 3), (3, 4)], 6: [(1, 5), (5, 10)], 8: [(1, 7), (7, 8)]}, padri: [12], figli: [8, 8, 8, 14, 14, 14], mosse: [(4, 9, 1, 4, 3)]
14 -> costo: 76751.5, rotte: {4: [(1, 4), (4, 11)], 2: [(1, 2)], 5: [(1, 7), (7, 9)], 9: [(1, 2), (2, 5), (5, 6)], 3: [(1, 4)], 7: [(1, 3), (3, 4)], 6: [(1, 5), (5, 10)], 8: [(1, 8)]}, padri: [13, 15], figli: [9, 9, 9], mosse: [(5, 8, 1, 7, 1), (4, 9, 1, 4, 3)]
15 -> costo: 76881.1, rotte: {4: [(1, 11)], 2: [(1, 2)], 5: [(1, 7), (7, 9)], 9: [(1, 4), (4, 2), (2, 5), (5, 6)], 3: [(1, 4)], 7: [(1, 3), (3, 4)], 6: [(1, 5), (5, 10)], 8: [(1, 8)]}, padri: [12, 16], figli: [10, 10, 10, 14], mosse: [(5, 8, 1, 7, 1), (9, 9, 4, 2, 10)]
16 -> costo: 77167.90000000001, rotte: {4: [(1, 11)], 2: [(1, 2)], 5: [(1, 7), (7, 9)], 9: [(1, 2), (2, 4), (4, 5), (5, 6)], 3: [(1, 4)], 7: [(1, 3), (3, 4)], 6: [(1, 5), (5, 10)], 8: [(1, 8)]}, padri: [5], figli: [11, 11, 11, 15], mosse: [(5, 8, 1, 7, 1)]
bestSolutionIndice: 9
9 -> costo: 76455.20000000001, rotte: {4: [(1, 4), (4, 11)], 2: [(1, 2)], 5: [(1, 7), (7, 9)], 9: [(1, 2), (2, 5), (5, 6)], 3: [(1, 4)], 7: [(1, 4), (4, 3)], 6: [(1, 5), (5, 10)], 8: [(1, 8)]}, padri: [8, 10, 14, 14, 14], figli: [], mosse: [(5, 8, 1, 7, 1), (4, 9, 1, 4, 3), (7, 7, 1, 4, 2), (7, 7, 4, 3, 18), (7, 7, 3, 4)]
trasportoPalletDiGamma: {4: [(4, 3), (11, 6)], 2: [(2, 10)], 5: [(7, 1), (9, 14)], 9: [(2, 10), (5, 2), (6, 4)], 3: [(4, 10)], 7: [(4, 2), (3, 18)], 6: [(5, 6), (10, 9)], 8: [(8, 18)]}
itMosseLS: 37, itMosseTS: 30
time elapsed: 937.24s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 87738.80000000002, rotte: {6: [(1, 11), (11, 4)], 3: [(1, 3)], 8: [(1, 9), (9, 8)], 9: [(1, 6), (6, 3), (3, 8)], 4: [(1, 5), (5, 4)], 5: [(1, 10), (10, 8)], 2: [(1, 7), (7, 4)], 7: [(1, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 84726.3, rotte: {6: [(1, 11), (11, 4)], 3: [(1, 3)], 8: [(1, 9), (9, 8)], 9: [(1, 6), (6, 7), (7, 3), (3, 8)], 4: [(1, 5), (5, 4)], 5: [(1, 10), (10, 8)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [0], figli: [2], mosse: [(9, 2, 6, 7, 1)]
2 -> costo: 82455.1, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 9), (9, 8)], 9: [(1, 6), (6, 7), (7, 3), (3, 8)], 4: [(1, 5), (5, 4)], 5: [(1, 10), (10, 8)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [1], figli: [3], mosse: [(6, 6, 1, 4, 9)]
3 -> costo: 80805.8, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 9), (9, 8)], 9: [(1, 6), (6, 7), (7, 3), (3, 8)], 4: [(1, 5), (5, 4)], 5: [(1, 8), (8, 10)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [2], figli: [4], mosse: [(5, 5, 10, 8)]
4 -> costo: 79288.7, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 8), (8, 9)], 9: [(1, 6), (6, 7), (7, 3), (3, 8)], 4: [(1, 5), (5, 4)], 5: [(1, 8), (8, 10)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [3], figli: [5], mosse: [(8, 8, 1, 8, 6)]
5 -> costo: 78627.3, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 8), (8, 9)], 9: [(1, 6), (6, 7), (7, 3), (3, 8)], 4: [(1, 4), (4, 5)], 5: [(1, 8), (8, 10)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [4], figli: [6, 7, 11, 13, 15, 13], mosse: [(4, 4, 5, 4)]
6 -> costo: 78018.1, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 8), (8, 9)], 9: [(1, 6), (6, 8), (8, 7), (7, 3)], 4: [(1, 4), (4, 5)], 5: [(1, 8), (8, 10)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [5, 7, 13], figli: [], mosse: [(9, 9, 6, 8, 6), (9, 9, 6, 8, 6), (9, 9, 8, 7, 1)]
7 -> costo: 78221.7, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 8), (8, 9)], 9: [(1, 8), (8, 6), (6, 7), (7, 3)], 4: [(1, 4), (4, 5)], 5: [(1, 8), (8, 10)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [5, 16], figli: [8, 6, 12, 15], mosse: [(9, 9, 1, 8, 6), (9, 9, 6, 7, 1)]
8 -> costo: 77685.90000000001, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 8), (8, 9)], 9: [(1, 3), (3, 8), (8, 6), (6, 7)], 4: [(1, 4), (4, 5)], 5: [(1, 8), (8, 10)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [7, 11, 12, 12, 12, 15], figli: [9], mosse: [(9, 9, 1, 3, 8), (9, 9, 6, 7, 1), (9, 9, 7, 6), (9, 9, 8, 6, 4), (9, 9, 6, 7, 1), (9, 9, 3, 8, 6)]
9 -> costo: 77422.5, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 8), (8, 9)], 9: [(1, 3), (3, 7), (7, 8), (8, 6)], 4: [(1, 4), (4, 5)], 5: [(1, 8), (8, 10)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [8, 11, 12, 15, 16], figli: [10, 10, 10], mosse: [(9, 9, 3, 7, 1), (9, 9, 3, 7, 1), (9, 9, 7, 8, 6), (9, 9, 8, 6, 4), (9, 9, 1, 3, 8)]
10 -> costo: 77260.8, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 8), (8, 9)], 9: [(1, 3), (3, 7), (7, 6), (6, 8)], 4: [(1, 4), (4, 5)], 5: [(1, 8), (8, 10)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [9, 9, 9, 12, 14, 15], figli: [], mosse: [(9, 9, 7, 6, 4), (9, 9, 6, 8, 6), (9, 9, 8, 6), (9, 9, 6, 8, 6), (9, 9, 1, 3, 8), (9, 9, 7, 6, 4)]
11 -> costo: 78361.3, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 8), (8, 9)], 9: [(1, 7), (7, 3), (3, 8), (8, 6)], 4: [(1, 4), (4, 5)], 5: [(1, 8), (8, 10)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [5, 16], figli: [9, 8, 12], mosse: [(9, 9, 8, 6, 4), (9, 9, 7, 3, 8)]
12 -> costo: 77859.00000000001, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 8), (8, 9)], 9: [(1, 3), (3, 8), (8, 7), (7, 6)], 4: [(1, 4), (4, 5)], 5: [(1, 8), (8, 10)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [11], figli: [10, 9, 8, 8, 8], mosse: [(9, 9, 8, 7, 1)]
13 -> costo: 78443.1, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 8), (8, 9)], 9: [(1, 6), (6, 7), (7, 8), (8, 3)], 4: [(1, 4), (4, 5)], 5: [(1, 8), (8, 10)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [5, 5], figli: [14, 6, 15, 16], mosse: [(9, 9, 7, 8, 6), (9, 9, 8, 3, 8)]
14 -> costo: 78015.40000000001, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 8), (8, 9)], 9: [(1, 7), (7, 6), (6, 8), (8, 3)], 4: [(1, 4), (4, 5)], 5: [(1, 8), (8, 10)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [13, 16], figli: [10], mosse: [(9, 9, 7, 6, 4), (9, 9, 6, 8, 6)]
15 -> costo: 78101.6, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 8), (8, 9)], 9: [(1, 3), (3, 6), (6, 7), (7, 8)], 4: [(1, 4), (4, 5)], 5: [(1, 8), (8, 10)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [13], figli: [10, 9, 8], mosse: [(9, 9, 1, 3, 8)]
16 -> costo: 78425.5, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 8), (8, 9)], 9: [(1, 7), (7, 8), (8, 6), (6, 3)], 4: [(1, 4), (4, 5)], 5: [(1, 8), (8, 10)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [13], figli: [9, 14, 7, 11], mosse: [(9, 9, 8, 6, 4)]
bestSolutionIndice: 10
10 -> costo: 77260.8, rotte: {6: [(1, 4), (4, 11)], 3: [(1, 3)], 8: [(1, 8), (8, 9)], 9: [(1, 3), (3, 7), (7, 6), (6, 8)], 4: [(1, 4), (4, 5)], 5: [(1, 8), (8, 10)], 2: [(1, 4)], 7: [(1, 2)]}, padri: [9, 9, 9, 12, 14, 15], figli: [], mosse: [(9, 9, 7, 6, 4), (9, 9, 6, 8, 6), (9, 9, 8, 6), (9, 9, 6, 8, 6), (9, 9, 1, 3, 8), (9, 9, 7, 6, 4)]
trasportoPalletDiGamma: {6: [(4, 9), (11, 6)], 3: [(3, 10)], 8: [(8, 6), (9, 14)], 9: [(3, 8), (7, 1), (6, 4), (8, 6)], 4: [(4, 2), (5, 8)], 5: [(8, 6), (10, 9)], 2: [(4, 4)], 7: [(2, 20)]}
itMosseLS: 36, itMosseTS: 30
time elapsed: 816.95s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 84803.59999999999, rotte: {3: [(1, 7), (7, 3)], 5: [(1, 6), (6, 9)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 3)], 6: [(1, 10), (10, 9), (9, 8)], 2: [(1, 8)], 8: [(1, 2)], 7: [(1, 11), (11, 3)]}, padri: [-1], figli: [1, 1, 1, 7, 7, 7], mosse: [-1]
1 -> costo: 82828.7, rotte: {3: [(1, 7), (7, 3)], 5: [(1, 6), (6, 9)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 3)], 6: [(1, 10), (10, 9), (9, 8)], 2: [(1, 8)], 8: [(1, 2)], 7: [(1, 3), (3, 11)]}, padri: [0, 0, 0], figli: [2, 5, 5, 5, 8], mosse: [(7, 7, 1, 3, 7), (7, 7, 3, 11, 6), (7, 7, 11, 3)]
2 -> costo: 81668.9, rotte: {3: [(1, 7), (7, 3)], 5: [(1, 6), (6, 9)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 3)], 6: [(1, 8), (8, 10), (10, 9)], 2: [(1, 8)], 8: [(1, 2)], 7: [(1, 3), (3, 11)]}, padri: [1, 7, 7, 7], figli: [3, 3, 3, 6, 6, 6], mosse: [(6, 6, 1, 8, 3), (7, 7, 1, 3, 7), (7, 7, 3, 11, 6), (7, 7, 11, 3)]
3 -> costo: 81339.3, rotte: {3: [(1, 3), (3, 7)], 5: [(1, 6), (6, 9)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 3)], 6: [(1, 8), (8, 10), (10, 9)], 2: [(1, 8)], 8: [(1, 2)], 7: [(1, 3), (3, 11)]}, padri: [2, 2, 2, 5, 9, 11, 11, 11], figli: [4, 4, 4], mosse: [(3, 3, 1, 3, 9), (3, 3, 3, 7, 1), (3, 3, 7, 3), (6, 6, 1, 8, 3), (3, 7, 3, 7, 1), (7, 7, 1, 3, 7), (7, 7, 3, 11, 6), (7, 7, 11, 3)]
4 -> costo: 81042.90000000001, rotte: {3: [(1, 3), (3, 7)], 5: [(1, 6), (6, 9)], 9: [(1, 4), (4, 8)], 4: [(1, 3), (3, 5)], 6: [(1, 8), (8, 10), (10, 9)], 2: [(1, 8)], 8: [(1, 2)], 7: [(1, 3), (3, 11)]}, padri: [3, 3, 3, 6], figli: [], mosse: [(4, 4, 1, 3, 2), (4, 4, 3, 5, 8), (4, 4, 5, 3), (6, 6, 1, 8, 3)]
5 -> costo: 82499.1, rotte: {3: [(1, 3), (3, 7)], 5: [(1, 6), (6, 9)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 3)], 6: [(1, 10), (10, 9), (9, 8)], 2: [(1, 8)], 8: [(1, 2)], 7: [(1, 3), (3, 11)]}, padri: [1, 1, 1], figli: [3, 6, 6, 6], mosse: [(3, 3, 1, 3, 9), (3, 3, 3, 7, 1), (3, 3, 7, 3)]
6 -> costo: 82202.70000000001, rotte: {3: [(1, 3), (3, 7)], 5: [(1, 6), (6, 9)], 9: [(1, 4), (4, 8)], 4: [(1, 3), (3, 5)], 6: [(1, 10), (10, 9), (9, 8)], 2: [(1, 8)], 8: [(1, 2)], 7: [(1, 3), (3, 11)]}, padri: [5, 5, 5], figli: [4], mosse: [(4, 4, 1, 3, 2), (4, 4, 3, 5, 8), (4, 4, 5, 3)]
7 -> costo: 83643.79999999999, rotte: {3: [(1, 7), (7, 3)], 5: [(1, 6), (6, 9)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 3)], 6: [(1, 8), (8, 10), (10, 9)], 2: [(1, 8)], 8: [(1, 2)], 7: [(1, 11), (11, 3)]}, padri: [0], figli: [2, 2, 2, 8, 8, 8, 11], mosse: [(6, 6, 1, 8, 3)]
8 -> costo: 82816.5, rotte: {3: [(1, 3)], 5: [(1, 6), (6, 9)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 3)], 6: [(1, 8), (8, 10), (10, 9)], 2: [(1, 8)], 8: [(1, 2)], 7: [(1, 7), (7, 11), (11, 3)]}, padri: [7], figli: [9, 9, 9, 10, 10, 10], mosse: [(7, 3, 1, 7, 1)]
9 -> costo: 81668.90000000001, rotte: {3: [(1, 3)], 5: [(1, 6), (6, 9)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 3)], 6: [(1, 8), (8, 10), (10, 9)], 2: [(1, 8)], 8: [(1, 2)], 7: [(1, 7), (7, 3), (3, 11)]}, padri: [8, 8, 8, 10], figli: [3], mosse: [(7, 7, 7, 3, 7), (7, 7, 3, 11, 6), (7, 7, 11, 3), (7, 7, 7, 3, 7)]
10 -> costo: 82047.7, rotte: {3: [(1, 3)], 5: [(1, 6), (6, 9)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 3)], 6: [(1, 8), (8, 10), (10, 9)], 2: [(1, 8)], 8: [(1, 2)], 7: [(1, 3), (3, 7), (7, 11)]}, padri: [8], figli: [9], mosse: [(7, 7, 1, 3, 7)]
11 -> costo: 83314.2, rotte: {3: [(1, 3), (3, 7)], 5: [(1, 6), (6, 9)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 3)], 6: [(1, 8), (8, 10), (10, 9)], 2: [(1, 8)], 8: [(1, 2)], 7: [(1, 11), (11, 3)]}, padri: [7], figli: [3, 3, 3], mosse: [(3, 3, 1, 3, 9)]
bestSolutionIndice: 4
4 -> costo: 81042.90000000001, rotte: {3: [(1, 3), (3, 7)], 5: [(1, 6), (6, 9)], 9: [(1, 4), (4, 8)], 4: [(1, 3), (3, 5)], 6: [(1, 8), (8, 10), (10, 9)], 2: [(1, 8)], 8: [(1, 2)], 7: [(1, 3), (3, 11)]}, padri: [3, 3, 3, 6], figli: [], mosse: [(4, 4, 1, 3, 2), (4, 4, 3, 5, 8), (4, 4, 5, 3), (6, 6, 1, 8, 3)]
trasportoPalletDiGamma: {3: [(3, 9), (7, 1)], 5: [(6, 4), (9, 11)], 9: [(4, 15), (8, 5)], 4: [(3, 2), (5, 8)], 6: [(8, 3), (10, 9), (9, 3)], 2: [(8, 10)], 8: [(2, 20)], 7: [(3, 7), (11, 6)]}
itMosseLS: 33, itMosseTS: 30
time elapsed: 898.33s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88139.3, rotte: {4: [(1, 7), (7, 3)], 7: [(1, 5), (5, 9)], 8: [(1, 4), (4, 2)], 3: [(1, 2)], 5: [(1, 10), (10, 8), (8, 2)], 2: [(1, 11), (11, 3)], 9: [(1, 6), (6, 9), (9, 3), (3, 2)], 6: [(1, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85791.8, rotte: {4: [(1, 7), (7, 3)], 7: [(1, 5), (5, 9)], 8: [(1, 4), (4, 2)], 3: [(1, 2)], 5: [(1, 10), (10, 8), (8, 2)], 2: [(1, 3)], 9: [(1, 6), (6, 9), (9, 11), (11, 3), (3, 2)], 6: [(1, 8)]}, padri: [0], figli: [2], mosse: [(9, 2, 9, 11, 6)]
2 -> costo: 83632.09999999999, rotte: {4: [(1, 7), (7, 3)], 7: [(1, 5), (5, 9)], 8: [(1, 4), (4, 2)], 3: [(1, 2)], 5: [(1, 2), (2, 10), (10, 8)], 2: [(1, 3)], 9: [(1, 6), (6, 9), (9, 11), (11, 3), (3, 2)], 6: [(1, 8)]}, padri: [1], figli: [3], mosse: [(5, 5, 1, 2, 3)]
3 -> costo: 82696.4, rotte: {4: [(1, 3)], 7: [(1, 5), (5, 9)], 8: [(1, 4), (4, 2)], 3: [(1, 2)], 5: [(1, 2), (2, 10), (10, 8)], 2: [(1, 3)], 9: [(1, 7), (7, 6), (6, 9), (9, 11), (11, 3), (3, 2)], 6: [(1, 8)]}, padri: [2], figli: [4], mosse: [(9, 4, 1, 7, 1)]
4 -> costo: 81775.59999999999, rotte: {4: [(1, 3)], 7: [(1, 5), (5, 9)], 8: [(1, 4), (4, 2)], 3: [(1, 2)], 5: [(1, 2), (2, 8), (8, 10)], 2: [(1, 3)], 9: [(1, 7), (7, 6), (6, 9), (9, 11), (11, 3), (3, 2)], 6: [(1, 8)]}, padri: [3], figli: [5, 5, 5], mosse: [(5, 5, 2, 8, 3)]
5 -> costo: 81663.9, rotte: {4: [(1, 3)], 7: [(1, 5), (5, 9)], 8: [(1, 2), (2, 4)], 3: [(1, 2)], 5: [(1, 2), (2, 8), (8, 10)], 2: [(1, 3)], 9: [(1, 7), (7, 6), (6, 9), (9, 11), (11, 3), (3, 2)], 6: [(1, 8)]}, padri: [4, 4, 4], figli: [], mosse: [(8, 8, 1, 2, 5), (8, 8, 2, 4, 15), (8, 8, 4, 2)]
bestSolutionIndice: 5
5 -> costo: 81663.9, rotte: {4: [(1, 3)], 7: [(1, 5), (5, 9)], 8: [(1, 2), (2, 4)], 3: [(1, 2)], 5: [(1, 2), (2, 8), (8, 10)], 2: [(1, 3)], 9: [(1, 7), (7, 6), (6, 9), (9, 11), (11, 3), (3, 2)], 6: [(1, 8)]}, padri: [4, 4, 4], figli: [], mosse: [(8, 8, 1, 2, 5), (8, 8, 2, 4, 15), (8, 8, 4, 2)]
trasportoPalletDiGamma: {4: [(3, 9)], 7: [(5, 8), (9, 12)], 8: [(2, 5), (4, 15)], 3: [(2, 10)], 5: [(2, 3), (8, 3), (10, 9)], 2: [(3, 4)], 9: [(7, 1), (6, 4), (9, 2), (11, 6), (3, 5), (2, 2)], 6: [(8, 15)]}
itMosseLS: 7, itMosseTS: 3
time elapsed: 143.55s.


##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
