itNSIMax: 20, itMosseTSMax: 10.
##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 81479.1, rotte: {3: [(1, 2)], 9: [(1, 9), (9, 8)], 6: [(1, 6), (6, 10)], 4: [(1, 5), (5, 2)], 7: [(1, 11), (11, 8)], 8: [(1, 3), (3, 2)], 5: [(1, 4)], 2: [(1, 7), (7, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 79312.20000000001, rotte: {3: [(1, 2)], 9: [(1, 9), (9, 8)], 6: [(1, 6), (6, 7), (7, 10)], 4: [(1, 5), (5, 2)], 7: [(1, 11), (11, 8)], 8: [(1, 3), (3, 2)], 5: [(1, 4)], 2: [(1, 2)]}, padri: [0], figli: [2], mosse: [(6, 2, 6, 7, 1)]
2 -> costo: 77795.1, rotte: {3: [(1, 2)], 9: [(1, 8), (8, 9)], 6: [(1, 6), (6, 7), (7, 10)], 4: [(1, 5), (5, 2)], 7: [(1, 11), (11, 8)], 8: [(1, 3), (3, 2)], 5: [(1, 4)], 2: [(1, 2)]}, padri: [1], figli: [3, 3, 3, 5, 5, 5, 5], mosse: [(9, 9, 1, 8, 6)]
3 -> costo: 76855.80000000002, rotte: {3: [(1, 2)], 9: [(1, 8), (8, 9)], 6: [(1, 6), (6, 7), (7, 10)], 4: [(1, 5), (5, 2)], 7: [(1, 8), (8, 11)], 8: [(1, 3), (3, 2)], 5: [(1, 4)], 2: [(1, 2)]}, padri: [2, 2, 2], figli: [4, 4, 4], mosse: [(7, 7, 1, 8, 12), (7, 7, 8, 11, 6), (7, 7, 11, 8)]
4 -> costo: 76082.70000000001, rotte: {3: [(1, 2)], 9: [(1, 8), (8, 9)], 6: [(1, 6), (6, 7), (7, 10)], 4: [(1, 2), (2, 5)], 7: [(1, 8), (8, 11)], 8: [(1, 3), (3, 2)], 5: [(1, 4)], 2: [(1, 2)]}, padri: [3, 3, 3, 5, 5, 5], figli: [], mosse: [(4, 4, 5, 2), (4, 4, 1, 2, 2), (4, 4, 2, 5, 8), (7, 7, 1, 8, 12), (7, 7, 8, 11, 6), (7, 7, 11, 8)]
5 -> costo: 77022.00000000001, rotte: {3: [(1, 2)], 9: [(1, 8), (8, 9)], 6: [(1, 6), (6, 7), (7, 10)], 4: [(1, 2), (2, 5)], 7: [(1, 11), (11, 8)], 8: [(1, 3), (3, 2)], 5: [(1, 4)], 2: [(1, 2)]}, padri: [2, 2], figli: [4, 4, 4], mosse: [(4, 4, 5, 2), (4, 4, 1, 2, 2)]
bestSolutionIndice: 4
4 -> costo: 76082.70000000001, rotte: {3: [(1, 2)], 9: [(1, 8), (8, 9)], 6: [(1, 6), (6, 7), (7, 10)], 4: [(1, 2), (2, 5)], 7: [(1, 8), (8, 11)], 8: [(1, 3), (3, 2)], 5: [(1, 4)], 2: [(1, 2)]}, padri: [3, 3, 3, 5, 5, 5], figli: [], mosse: [(4, 4, 5, 2), (4, 4, 1, 2, 2), (4, 4, 2, 5, 8), (7, 7, 1, 8, 12), (7, 7, 8, 11, 6), (7, 7, 11, 8)]
trasportoPalletDiGamma: {3: [(2, 10)], 9: [(8, 6), (9, 14)], 6: [(6, 4), (7, 1), (10, 9)], 4: [(2, 2), (5, 8)], 7: [(8, 12), (11, 6)], 8: [(3, 18), (2, 2)], 5: [(4, 15)], 2: [(2, 6)]}
itMosseLS: 13, itMosseTS: 10
time elapsed: 274.33s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 81327.59999999999, rotte: {7: [(1, 11), (11, 9)], 8: [(1, 8), (8, 6)], 5: [(1, 2)], 9: [(1, 10), (10, 2), (2, 3)], 6: [(1, 4)], 3: [(1, 7), (7, 6)], 2: [(1, 5), (5, 3)], 4: [(1, 3)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 77266.9, rotte: {7: [(1, 11), (11, 9)], 8: [(1, 8), (8, 6)], 5: [(1, 2)], 9: [(1, 2), (2, 3), (3, 10)], 6: [(1, 4)], 3: [(1, 7), (7, 6)], 2: [(1, 5), (5, 3)], 4: [(1, 3)]}, padri: [0], figli: [2], mosse: [(9, 9, 3, 10, 9)]
2 -> costo: 76746.7, rotte: {7: [(1, 11), (11, 9)], 8: [(1, 8)], 5: [(1, 2)], 9: [(1, 2), (2, 3), (3, 10)], 6: [(1, 4)], 3: [(1, 7), (7, 6)], 2: [(1, 5), (5, 3)], 4: [(1, 3)]}, padri: [1], figli: [3, 3, 8, 8], mosse: [(3, 8, 1, 6, 2)]
3 -> costo: 76450.3, rotte: {7: [(1, 11), (11, 9)], 8: [(1, 8)], 5: [(1, 2)], 9: [(1, 2), (2, 3), (3, 10)], 6: [(1, 4)], 3: [(1, 7), (7, 6)], 2: [(1, 3), (3, 5)], 4: [(1, 3)]}, padri: [2, 2], figli: [4, 5, 6], mosse: [(2, 2, 1, 3, 2), (2, 2, 3, 5, 8)]
4 -> costo: 75517.09999999999, rotte: {7: [(1, 11), (11, 9)], 8: [(1, 3), (3, 8)], 5: [(1, 2)], 9: [(1, 2), (2, 3), (3, 10)], 6: [(1, 4)], 3: [(1, 7), (7, 6)], 2: [(1, 5)], 4: [(1, 3)]}, padri: [3, 5], figli: [], mosse: [(8, 2, 1, 3, 2), (8, 3, 1, 3, 2)]
5 -> costo: 75723.29999999999, rotte: {7: [(1, 11), (11, 9)], 8: [(1, 8)], 5: [(1, 2)], 9: [(1, 2), (2, 3), (3, 10)], 6: [(1, 4)], 3: [(1, 3), (3, 7), (7, 6)], 2: [(1, 5)], 4: [(1, 3)]}, padri: [3, 7], figli: [4], mosse: [(3, 2, 1, 3, 2), (3, 8, 3, 7, 1)]
6 -> costo: 76241.0, rotte: {7: [(1, 11), (11, 9)], 8: [(1, 7), (7, 8)], 5: [(1, 2)], 9: [(1, 2), (2, 3), (3, 10)], 6: [(1, 4)], 3: [(1, 6)], 2: [(1, 3), (3, 5)], 4: [(1, 3)]}, padri: [3, 8, 8], figli: [7], mosse: [(8, 3, 1, 7, 1), (2, 2, 1, 3, 2), (2, 2, 3, 5, 8)]
7 -> costo: 75927.09999999999, rotte: {7: [(1, 11), (11, 9)], 8: [(1, 7), (7, 8)], 5: [(1, 2)], 9: [(1, 2), (2, 3), (3, 10)], 6: [(1, 4)], 3: [(1, 3), (3, 6)], 2: [(1, 5)], 4: [(1, 3)]}, padri: [6], figli: [5], mosse: [(3, 2, 1, 3, 2)]
8 -> costo: 76537.4, rotte: {7: [(1, 11), (11, 9)], 8: [(1, 7), (7, 8)], 5: [(1, 2)], 9: [(1, 2), (2, 3), (3, 10)], 6: [(1, 4)], 3: [(1, 6)], 2: [(1, 5), (5, 3)], 4: [(1, 3)]}, padri: [2], figli: [6, 6], mosse: [(8, 3, 1, 7, 1)]
bestSolutionIndice: 4
4 -> costo: 75517.09999999999, rotte: {7: [(1, 11), (11, 9)], 8: [(1, 3), (3, 8)], 5: [(1, 2)], 9: [(1, 2), (2, 3), (3, 10)], 6: [(1, 4)], 3: [(1, 7), (7, 6)], 2: [(1, 5)], 4: [(1, 3)]}, padri: [3, 5], figli: [], mosse: [(8, 2, 1, 3, 2), (8, 3, 1, 3, 2)]
trasportoPalletDiGamma: {7: [(11, 6), (9, 14)], 8: [(3, 2), (8, 18)], 5: [(2, 15)], 9: [(2, 5), (3, 6), (10, 9)], 6: [(4, 15)], 3: [(7, 1), (6, 4)], 2: [(5, 8)], 4: [(3, 10)]}
itMosseLS: 13, itMosseTS: 10
time elapsed: 275.93s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 90375.7, rotte: {4: [(1, 6), (6, 5)], 9: [(1, 11), (11, 8)], 7: [(1, 7), (7, 9), (9, 4), (4, 5), (5, 8)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 10), (10, 3), (3, 2), (2, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 88130.4, rotte: {4: [(1, 6), (6, 5)], 9: [(1, 8)], 7: [(1, 7), (7, 9), (9, 11), (11, 4), (4, 5), (5, 8)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 10), (10, 3), (3, 2), (2, 8)]}, padri: [0], figli: [2], mosse: [(7, 9, 9, 11, 6)]
2 -> costo: 86017.59999999999, rotte: {4: [(1, 6), (6, 5)], 9: [(1, 8)], 7: [(1, 7), (7, 9), (9, 11), (11, 4), (4, 5), (5, 8)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 10), (10, 3), (3, 2)]}, padri: [1], figli: [3], mosse: [(9, 8, 1, 8, 3)]
3 -> costo: 84980.09999999999, rotte: {4: [(1, 6), (6, 5)], 9: [(1, 8)], 7: [(1, 7), (7, 11), (11, 4), (4, 5), (5, 8), (8, 9)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 10), (10, 3), (3, 2)]}, padri: [2], figli: [4], mosse: [(7, 7, 8, 9, 4)]
4 -> costo: 84568.79999999999, rotte: {4: [(1, 6), (6, 5)], 9: [(1, 8)], 7: [(1, 11), (11, 4), (4, 5), (5, 8), (8, 9)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 7), (7, 10), (10, 3), (3, 2)]}, padri: [3], figli: [5, 7, 8], mosse: [(8, 7, 1, 7, 1)]
5 -> costo: 81786.59999999999, rotte: {4: [(1, 6), (6, 5)], 9: [(1, 8)], 7: [(1, 4), (4, 5), (5, 8), (8, 9), (9, 11)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 7), (7, 10), (10, 3), (3, 2)]}, padri: [4, 7, 7], figli: [6, 6, 6], mosse: [(7, 7, 9, 11, 6), (7, 7, 8, 9, 4), (7, 7, 9, 11, 6)]
6 -> costo: 81484.29999999999, rotte: {4: [(1, 5), (5, 6)], 9: [(1, 8)], 7: [(1, 4), (4, 5), (5, 8), (8, 9), (9, 11)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 7), (7, 10), (10, 3), (3, 2)]}, padri: [5, 5, 5], figli: [], mosse: [(4, 4, 1, 5, 6), (4, 4, 5, 6, 4), (4, 4, 6, 5)]
7 -> costo: 82525.59999999999, rotte: {4: [(1, 6), (6, 5)], 9: [(1, 8)], 7: [(1, 4), (4, 5), (5, 8), (8, 11), (11, 9)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 7), (7, 10), (10, 3), (3, 2)]}, padri: [4], figli: [5, 5, 8, 8], mosse: [(7, 7, 8, 11, 6)]
8 -> costo: 82080.79999999999, rotte: {4: [(1, 6), (6, 5)], 9: [(1, 8)], 7: [(1, 4), (4, 5), (5, 11), (11, 9)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 7), (7, 10), (10, 3), (3, 2)]}, padri: [7], figli: [9], mosse: [(9, 7, 1, 8, 1)]
9 -> costo: 81778.49999999999, rotte: {4: [(1, 5), (5, 6)], 9: [(1, 8)], 7: [(1, 4), (4, 5), (5, 11), (11, 9)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 7), (7, 10), (10, 3), (3, 2)]}, padri: [8], figli: [10, 11, 12], mosse: [(4, 4, 1, 5, 6)]
10 -> costo: 81484.29999999999, rotte: {4: [(1, 5), (5, 6)], 9: [(1, 8)], 7: [(1, 4), (4, 5), (5, 9), (9, 11)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 7), (7, 10), (10, 3), (3, 2)]}, padri: [9], figli: [], mosse: [(7, 7, 5, 9, 4)]
11 -> costo: 81484.29999999999, rotte: {4: [(1, 5), (5, 6)], 9: [(1, 8)], 7: [(1, 4), (4, 5), (5, 9), (9, 11)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 7), (7, 10), (10, 3), (3, 2)]}, padri: [9], figli: [], mosse: [(7, 7, 9, 11, 6)]
12 -> costo: 81694.9, rotte: {4: [(1, 5), (5, 6)], 9: [(1, 8)], 7: [(1, 4), (4, 5), (5, 7), (7, 11), (11, 9)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 10), (10, 3), (3, 2)]}, padri: [9], figli: [13], mosse: [(7, 8, 5, 7, 1)]
13 -> costo: 81355.3, rotte: {4: [(1, 5), (5, 6)], 9: [(1, 8)], 7: [(1, 4), (4, 5), (5, 7), (7, 11), (11, 9)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 2), (2, 10), (10, 3)]}, padri: [12], figli: [14, 14, 15, 15], mosse: [(8, 8, 1, 2, 5)]
14 -> costo: 78603.3, rotte: {4: [(1, 5), (5, 6)], 9: [(1, 8)], 7: [(1, 4), (4, 5), (5, 7), (7, 11), (11, 9)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 2), (2, 3), (3, 10)]}, padri: [13, 13], figli: [], mosse: [(8, 8, 2, 3, 3), (8, 8, 3, 10, 9)]
15 -> costo: 79979.79999999999, rotte: {4: [(1, 5), (5, 6)], 9: [(1, 8)], 7: [(1, 4), (4, 5), (5, 7), (7, 11), (11, 9)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 3), (3, 2), (2, 10)]}, padri: [13], figli: [], mosse: [(8, 8, 1, 3, 3)]
bestSolutionIndice: 14
14 -> costo: 78603.3, rotte: {4: [(1, 5), (5, 6)], 9: [(1, 8)], 7: [(1, 4), (4, 5), (5, 7), (7, 11), (11, 9)], 3: [(1, 9)], 5: [(1, 3)], 2: [(1, 4)], 6: [(1, 2)], 8: [(1, 2), (2, 3), (3, 10)]}, padri: [13, 13], figli: [], mosse: [(8, 8, 2, 3, 3), (8, 8, 3, 10, 9)]
trasportoPalletDiGamma: {4: [(5, 6), (6, 4)], 9: [(8, 18)], 7: [(4, 5), (5, 2), (7, 1), (11, 6), (9, 4)], 3: [(9, 10)], 5: [(3, 15)], 2: [(4, 10)], 6: [(2, 15)], 8: [(2, 5), (3, 3), (10, 9)]}
itMosseLS: 20, itMosseTS: 10
time elapsed: 491.87s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 86439.8, rotte: {4: [(1, 6), (6, 8)], 9: [(1, 2)], 7: [(1, 9), (9, 8)], 2: [(1, 10), (10, 4)], 8: [(1, 3), (3, 8)], 3: [(1, 7), (7, 4)], 5: [(1, 5), (5, 8)], 6: [(1, 11), (11, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 83459.3, rotte: {4: [(1, 6), (6, 8)], 9: [(1, 2)], 7: [(1, 9), (9, 8)], 2: [(1, 4), (4, 10)], 8: [(1, 3), (3, 8)], 3: [(1, 7), (7, 4)], 5: [(1, 5), (5, 8)], 6: [(1, 11), (11, 4)]}, padri: [0], figli: [2], mosse: [(2, 2, 1, 4, 1)]
2 -> costo: 81003.30000000002, rotte: {4: [(1, 6), (6, 8)], 9: [(1, 2)], 7: [(1, 9), (9, 8)], 2: [(1, 4), (4, 10)], 8: [(1, 3), (3, 8)], 3: [(1, 4)], 5: [(1, 5), (5, 7), (7, 8)], 6: [(1, 11), (11, 4)]}, padri: [1], figli: [3], mosse: [(5, 3, 5, 7, 1)]
3 -> costo: 78732.1, rotte: {4: [(1, 6), (6, 8)], 9: [(1, 2)], 7: [(1, 9), (9, 8)], 2: [(1, 4), (4, 10)], 8: [(1, 3), (3, 8)], 3: [(1, 4)], 5: [(1, 5), (5, 7), (7, 8)], 6: [(1, 4), (4, 11)]}, padri: [2], figli: [4, 4, 8, 8], mosse: [(6, 6, 1, 4, 5)]
4 -> costo: 77215.0, rotte: {4: [(1, 6), (6, 8)], 9: [(1, 2)], 7: [(1, 8), (8, 9)], 2: [(1, 4), (4, 10)], 8: [(1, 3), (3, 8)], 3: [(1, 4)], 5: [(1, 5), (5, 7), (7, 8)], 6: [(1, 4), (4, 11)]}, padri: [3, 3], figli: [5], mosse: [(7, 7, 1, 8, 6), (7, 7, 8, 9, 14)]
5 -> costo: 76884.4, rotte: {4: [(1, 6), (6, 8)], 9: [(1, 2)], 7: [(1, 8), (8, 9)], 2: [(1, 10)], 8: [(1, 3), (3, 8)], 3: [(1, 4)], 5: [(1, 5), (5, 7), (7, 8)], 6: [(1, 4), (4, 11)]}, padri: [4, 8, 8], figli: [], mosse: [(3, 2, 1, 4, 1), (7, 7, 1, 8, 6), (7, 7, 8, 9, 14)]
6 -> costo: 76884.4, rotte: {4: [(1, 6), (6, 8)], 9: [(1, 2)], 7: [(1, 8), (8, 9)], 2: [(1, 10)], 8: [(1, 3), (3, 8)], 3: [(1, 4)], 5: [(1, 5), (5, 7), (7, 8)], 6: [(1, 4), (4, 11)]}, padri: [4], figli: [], mosse: [(6, 2, 1, 4, 1)]
7 -> costo: 76884.4, rotte: {4: [(1, 6), (6, 8)], 9: [(1, 2)], 7: [(1, 8), (8, 9)], 2: [(1, 10)], 8: [(1, 3), (3, 8)], 3: [(1, 4)], 5: [(1, 5), (5, 7), (7, 8)], 6: [(1, 4), (4, 11)]}, padri: [4], figli: [], mosse: [(6, 2, 11, 4, 1)]
8 -> costo: 78401.5, rotte: {4: [(1, 6), (6, 8)], 9: [(1, 2)], 7: [(1, 9), (9, 8)], 2: [(1, 10)], 8: [(1, 3), (3, 8)], 3: [(1, 4)], 5: [(1, 5), (5, 7), (7, 8)], 6: [(1, 4), (4, 11)]}, padri: [3], figli: [5, 5], mosse: [(3, 2, 1, 4, 1)]
9 -> costo: 78401.5, rotte: {4: [(1, 6), (6, 8)], 9: [(1, 2)], 7: [(1, 9), (9, 8)], 2: [(1, 10)], 8: [(1, 3), (3, 8)], 3: [(1, 4)], 5: [(1, 5), (5, 7), (7, 8)], 6: [(1, 4), (4, 11)]}, padri: [3], figli: [], mosse: [(6, 2, 1, 4, 1)]
10 -> costo: 76884.4, rotte: {4: [(1, 6), (6, 8)], 9: [(1, 2)], 7: [(1, 8), (8, 9)], 2: [(1, 10)], 8: [(1, 3), (3, 8)], 3: [(1, 4)], 5: [(1, 5), (5, 7), (7, 8)], 6: [(1, 4), (4, 11)]}, padri: [9], figli: [], mosse: [(7, 7, 1, 8, 6)]
11 -> costo: 76884.4, rotte: {4: [(1, 6), (6, 8)], 9: [(1, 2)], 7: [(1, 8), (8, 9)], 2: [(1, 10)], 8: [(1, 3), (3, 8)], 3: [(1, 4)], 5: [(1, 5), (5, 7), (7, 8)], 6: [(1, 4), (4, 11)]}, padri: [9], figli: [], mosse: [(7, 7, 8, 9, 14)]
bestSolutionIndice: 5
5 -> costo: 76884.4, rotte: {4: [(1, 6), (6, 8)], 9: [(1, 2)], 7: [(1, 8), (8, 9)], 2: [(1, 10)], 8: [(1, 3), (3, 8)], 3: [(1, 4)], 5: [(1, 5), (5, 7), (7, 8)], 6: [(1, 4), (4, 11)]}, padri: [4, 8, 8], figli: [], mosse: [(3, 2, 1, 4, 1), (7, 7, 1, 8, 6), (7, 7, 8, 9, 14)]
trasportoPalletDiGamma: {4: [(6, 4), (8, 6)], 9: [(2, 20)], 7: [(8, 6), (9, 14)], 2: [(10, 9)], 8: [(3, 18), (8, 2)], 3: [(4, 10)], 5: [(5, 8), (7, 1), (8, 4)], 6: [(4, 5), (11, 6)]}
itMosseLS: 14, itMosseTS: 10
time elapsed: 262.72s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89600.8, rotte: {9: [(1, 3), (3, 9)], 6: [(1, 5), (5, 11), (11, 9)], 3: [(1, 7), (7, 2), (2, 9)], 8: [(1, 10), (10, 4)], 7: [(1, 8), (8, 9)], 5: [(1, 2)], 4: [(1, 4)], 2: [(1, 6), (6, 9)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86620.3, rotte: {9: [(1, 3), (3, 9)], 6: [(1, 5), (5, 11), (11, 9)], 3: [(1, 7), (7, 2), (2, 9)], 8: [(1, 4), (4, 10)], 7: [(1, 8), (8, 9)], 5: [(1, 2)], 4: [(1, 4)], 2: [(1, 6), (6, 9)]}, padri: [0], figli: [2, 5, 8], mosse: [(8, 8, 1, 4, 5)]
2 -> costo: 84492.90000000001, rotte: {9: [(1, 3), (3, 9)], 6: [(1, 5), (5, 11), (11, 9)], 3: [(1, 2), (2, 7), (7, 9)], 8: [(1, 4), (4, 10)], 7: [(1, 8), (8, 9)], 5: [(1, 2)], 4: [(1, 4)], 2: [(1, 6), (6, 9)]}, padri: [1, 8, 8, 8], figli: [3, 4], mosse: [(3, 3, 2, 7, 1), (3, 3, 9, 7), (3, 3, 2, 7, 1), (3, 3, 7, 9, 3)]
3 -> costo: 83642.6, rotte: {9: [(1, 3), (3, 9)], 6: [(1, 5), (5, 11), (11, 9)], 3: [(1, 7), (7, 9)], 8: [(1, 4), (4, 2), (2, 10)], 7: [(1, 8), (8, 9)], 5: [(1, 2)], 4: [(1, 4)], 2: [(1, 6), (6, 9)]}, padri: [2, 4], figli: [], mosse: [(8, 3, 4, 2, 5), (8, 8, 4, 2, 5)]
4 -> costo: 84122.90000000001, rotte: {9: [(1, 3), (3, 9)], 6: [(1, 5), (5, 11), (11, 9)], 3: [(1, 7), (7, 9)], 8: [(1, 2), (2, 4), (4, 10)], 7: [(1, 8), (8, 9)], 5: [(1, 2)], 4: [(1, 4)], 2: [(1, 6), (6, 9)]}, padri: [2], figli: [3], mosse: [(8, 3, 1, 2, 5)]
5 -> costo: 85091.3, rotte: {9: [(1, 3), (3, 9)], 6: [(1, 5), (5, 11), (11, 9)], 3: [(1, 2), (2, 9)], 8: [(1, 4), (4, 7), (7, 10)], 7: [(1, 8), (8, 9)], 5: [(1, 2)], 4: [(1, 4)], 2: [(1, 6), (6, 9)]}, padri: [1], figli: [6, 7], mosse: [(8, 3, 4, 7, 1)]
6 -> costo: 84503.4, rotte: {9: [(1, 3), (3, 9)], 6: [(1, 5), (5, 11), (11, 9)], 3: [(1, 9)], 8: [(1, 4), (4, 2), (2, 7), (7, 10)], 7: [(1, 8), (8, 9)], 5: [(1, 2)], 4: [(1, 4)], 2: [(1, 6), (6, 9)]}, padri: [5, 7], figli: [], mosse: [(8, 3, 4, 2, 5), (8, 8, 4, 2, 5)]
7 -> costo: 84989.2, rotte: {9: [(1, 3), (3, 9)], 6: [(1, 5), (5, 11), (11, 9)], 3: [(1, 9)], 8: [(1, 2), (2, 4), (4, 7), (7, 10)], 7: [(1, 8), (8, 9)], 5: [(1, 2)], 4: [(1, 4)], 2: [(1, 6), (6, 9)]}, padri: [5], figli: [6], mosse: [(8, 3, 1, 2, 5)]
8 -> costo: 86380.3, rotte: {9: [(1, 3), (3, 9)], 6: [(1, 5), (5, 11), (11, 9)], 3: [(1, 2), (2, 9), (9, 7)], 8: [(1, 4), (4, 10)], 7: [(1, 8), (8, 9)], 5: [(1, 2)], 4: [(1, 4)], 2: [(1, 6), (6, 9)]}, padri: [1], figli: [2, 2, 2], mosse: [(3, 3, 9, 7, 1)]
bestSolutionIndice: 3
3 -> costo: 83642.6, rotte: {9: [(1, 3), (3, 9)], 6: [(1, 5), (5, 11), (11, 9)], 3: [(1, 7), (7, 9)], 8: [(1, 4), (4, 2), (2, 10)], 7: [(1, 8), (8, 9)], 5: [(1, 2)], 4: [(1, 4)], 2: [(1, 6), (6, 9)]}, padri: [2, 4], figli: [], mosse: [(8, 3, 4, 2, 5), (8, 8, 4, 2, 5)]
trasportoPalletDiGamma: {9: [(3, 18), (9, 2)], 6: [(5, 8), (11, 6), (9, 1)], 3: [(7, 1), (9, 3)], 8: [(4, 5), (2, 5), (10, 9)], 7: [(8, 18), (9, 2)], 5: [(2, 15)], 4: [(4, 10)], 2: [(6, 4), (9, 6)]}
itMosseLS: 13, itMosseTS: 10
time elapsed: 401.42s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 81836.6, rotte: {4: [(1, 2)], 2: [(1, 5), (5, 6)], 7: [(1, 9), (9, 8)], 9: [(1, 3), (3, 2)], 6: [(1, 10), (10, 6)], 5: [(1, 7), (7, 8)], 3: [(1, 11), (11, 2)], 8: [(1, 4), (4, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 79454.3, rotte: {4: [(1, 2)], 2: [(1, 5), (5, 6)], 7: [(1, 9), (9, 8)], 9: [(1, 3), (3, 2)], 6: [(1, 10), (10, 6)], 5: [(1, 7), (7, 8)], 3: [(1, 2), (2, 11)], 8: [(1, 4), (4, 2)]}, padri: [0], figli: [2], mosse: [(3, 3, 1, 2, 4)]
2 -> costo: 77434.0, rotte: {4: [(1, 2)], 2: [(1, 5), (5, 6)], 7: [(1, 9), (9, 8)], 9: [(1, 3), (3, 2)], 6: [(1, 6), (6, 10)], 5: [(1, 7), (7, 8)], 3: [(1, 2), (2, 11)], 8: [(1, 4), (4, 2)]}, padri: [1], figli: [3], mosse: [(6, 6, 10, 6)]
3 -> costo: 75916.9, rotte: {4: [(1, 2)], 2: [(1, 5), (5, 6)], 7: [(1, 8), (8, 9)], 9: [(1, 3), (3, 2)], 6: [(1, 6), (6, 10)], 5: [(1, 7), (7, 8)], 3: [(1, 2), (2, 11)], 8: [(1, 4), (4, 2)]}, padri: [2], figli: [4, 4, 6, 6], mosse: [(7, 7, 1, 8, 6)]
4 -> costo: 75453.0, rotte: {4: [(1, 2)], 2: [(1, 5)], 7: [(1, 8), (8, 9)], 9: [(1, 3), (3, 2)], 6: [(1, 6), (6, 10)], 5: [(1, 7), (7, 8)], 3: [(1, 2), (2, 11)], 8: [(1, 4), (4, 2)]}, padri: [3, 3], figli: [5, 5, 5], mosse: [(6, 2, 1, 6, 2), (6, 2, 10, 6, 2)]
5 -> costo: 75341.3, rotte: {4: [(1, 2)], 2: [(1, 5)], 7: [(1, 8), (8, 9)], 9: [(1, 3), (3, 2)], 6: [(1, 6), (6, 10)], 5: [(1, 7), (7, 8)], 3: [(1, 2), (2, 11)], 8: [(1, 2), (2, 4)]}, padri: [4, 4, 4], figli: [], mosse: [(8, 8, 1, 2, 4), (8, 8, 2, 4, 15), (8, 8, 4, 2)]
6 -> costo: 75768.9, rotte: {4: [(1, 2)], 2: [(1, 5), (5, 6)], 7: [(1, 8), (8, 9)], 9: [(1, 3), (3, 2)], 6: [(1, 10)], 5: [(1, 7), (7, 6), (6, 8)], 3: [(1, 2), (2, 11)], 8: [(1, 4), (4, 2)]}, padri: [3], figli: [7, 9], mosse: [(5, 6, 7, 6, 2)]
7 -> costo: 75465.99999999999, rotte: {4: [(1, 2)], 2: [(1, 5), (5, 6)], 7: [(1, 8), (8, 9)], 9: [(1, 3), (3, 2)], 6: [(1, 7), (7, 10)], 5: [(1, 6), (6, 8)], 3: [(1, 2), (2, 11)], 8: [(1, 4), (4, 2)]}, padri: [6], figli: [8, 8, 8], mosse: [(6, 5, 1, 7, 1)]
8 -> costo: 75354.29999999999, rotte: {4: [(1, 2)], 2: [(1, 5), (5, 6)], 7: [(1, 8), (8, 9)], 9: [(1, 3), (3, 2)], 6: [(1, 7), (7, 10)], 5: [(1, 6), (6, 8)], 3: [(1, 2), (2, 11)], 8: [(1, 2), (2, 4)]}, padri: [7, 7, 7, 9], figli: [], mosse: [(8, 8, 1, 2, 4), (8, 8, 2, 4, 15), (8, 8, 4, 2), (6, 5, 1, 7, 1)]
9 -> costo: 75657.2, rotte: {4: [(1, 2)], 2: [(1, 5), (5, 6)], 7: [(1, 8), (8, 9)], 9: [(1, 3), (3, 2)], 6: [(1, 10)], 5: [(1, 7), (7, 6), (6, 8)], 3: [(1, 2), (2, 11)], 8: [(1, 2), (2, 4)]}, padri: [6], figli: [10, 8], mosse: [(8, 8, 1, 2, 4)]
10 -> costo: 75115.09999999999, rotte: {4: [(1, 2)], 2: [(1, 5), (5, 6)], 7: [(1, 8), (8, 9)], 9: [(1, 3), (3, 2)], 6: [(1, 2), (2, 10)], 5: [(1, 7), (7, 6), (6, 8)], 3: [(1, 2), (2, 11)], 8: [(1, 4)]}, padri: [9], figli: [], mosse: [(6, 8, 1, 2, 4)]
bestSolutionIndice: 10
10 -> costo: 75115.09999999999, rotte: {4: [(1, 2)], 2: [(1, 5), (5, 6)], 7: [(1, 8), (8, 9)], 9: [(1, 3), (3, 2)], 6: [(1, 2), (2, 10)], 5: [(1, 7), (7, 6), (6, 8)], 3: [(1, 2), (2, 11)], 8: [(1, 4)]}, padri: [9], figli: [], mosse: [(6, 8, 1, 2, 4)]
trasportoPalletDiGamma: {4: [(2, 10)], 2: [(5, 8), (6, 2)], 7: [(8, 6), (9, 14)], 9: [(3, 18), (2, 2)], 6: [(2, 4), (10, 9)], 5: [(7, 1), (6, 2), (8, 12)], 3: [(2, 4), (11, 6)], 8: [(4, 15)]}
itMosseLS: 16, itMosseTS: 10
time elapsed: 202.50s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88617.99999999999, rotte: {4: [(1, 6), (6, 11)], 7: [(1, 8), (8, 2)], 2: [(1, 7), (7, 3), (3, 2)], 6: [(1, 5), (5, 4)], 9: [(1, 9), (9, 2)], 8: [(1, 10), (10, 2)], 5: [(1, 3)], 3: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85526.4, rotte: {4: [(1, 6), (6, 11)], 7: [(1, 8), (8, 2)], 2: [(1, 7), (7, 3), (3, 2)], 6: [(1, 5), (5, 4)], 9: [(1, 9), (9, 2)], 8: [(1, 2), (2, 10)], 5: [(1, 3)], 3: [(1, 4)]}, padri: [0], figli: [2], mosse: [(8, 8, 10, 2)]
2 -> costo: 82573.99999999999, rotte: {4: [(1, 6), (6, 11)], 7: [(1, 8), (8, 2)], 2: [(1, 7), (7, 3), (3, 2)], 6: [(1, 5), (5, 4)], 9: [(1, 2), (2, 9)], 8: [(1, 2), (2, 10)], 5: [(1, 3)], 3: [(1, 4)]}, padri: [1], figli: [3], mosse: [(9, 9, 1, 2, 6)]
3 -> costo: 80346.49999999999, rotte: {4: [(1, 6), (6, 11)], 7: [(1, 8)], 2: [(1, 7), (7, 3), (3, 2)], 6: [(1, 5), (5, 4)], 9: [(1, 2), (2, 9)], 8: [(1, 2), (2, 10)], 5: [(1, 3)], 3: [(1, 4)]}, padri: [2], figli: [4, 8], mosse: [(2, 7, 1, 2, 2)]
4 -> costo: 79201.49999999999, rotte: {4: [(1, 6), (6, 11)], 7: [(1, 7), (7, 8)], 2: [(1, 3), (3, 2)], 6: [(1, 5), (5, 4)], 9: [(1, 2), (2, 9)], 8: [(1, 2), (2, 10)], 5: [(1, 3)], 3: [(1, 4)]}, padri: [3], figli: [5, 7, 7, 9], mosse: [(7, 2, 1, 7, 1)]
5 -> costo: 78540.09999999999, rotte: {4: [(1, 6), (6, 11)], 7: [(1, 7), (7, 8)], 2: [(1, 3), (3, 2)], 6: [(1, 4), (4, 5)], 9: [(1, 2), (2, 9)], 8: [(1, 2), (2, 10)], 5: [(1, 3)], 3: [(1, 4)]}, padri: [4, 8], figli: [6, 6], mosse: [(6, 6, 5, 4), (7, 2, 1, 7, 1)]
6 -> costo: 78132.7, rotte: {4: [(1, 6), (6, 11)], 7: [(1, 7), (7, 8)], 2: [(1, 2), (2, 3)], 6: [(1, 4), (4, 5)], 9: [(1, 2), (2, 9)], 8: [(1, 2), (2, 10)], 5: [(1, 3)], 3: [(1, 4)]}, padri: [5, 5, 7], figli: [], mosse: [(2, 2, 1, 2, 3), (2, 2, 2, 3, 3), (6, 6, 5, 4)]
7 -> costo: 78794.09999999999, rotte: {4: [(1, 6), (6, 11)], 7: [(1, 7), (7, 8)], 2: [(1, 2), (2, 3)], 6: [(1, 5), (5, 4)], 9: [(1, 2), (2, 9)], 8: [(1, 2), (2, 10)], 5: [(1, 3)], 3: [(1, 4)]}, padri: [4, 4], figli: [6], mosse: [(2, 2, 1, 2, 3), (2, 2, 2, 3, 3)]
8 -> costo: 79685.09999999999, rotte: {4: [(1, 6), (6, 11)], 7: [(1, 8)], 2: [(1, 7), (7, 3), (3, 2)], 6: [(1, 4), (4, 5)], 9: [(1, 2), (2, 9)], 8: [(1, 2), (2, 10)], 5: [(1, 3)], 3: [(1, 4)]}, padri: [3], figli: [5, 9], mosse: [(6, 6, 5, 4)]
9 -> costo: 79109.59999999999, rotte: {4: [(1, 6), (6, 11)], 7: [(1, 8)], 2: [(1, 3), (3, 2)], 6: [(1, 4), (4, 5), (5, 7)], 9: [(1, 2), (2, 9)], 8: [(1, 2), (2, 10)], 5: [(1, 3)], 3: [(1, 4)]}, padri: [8], figli: [10, 10], mosse: [(6, 2, 5, 7, 1)]
10 -> costo: 78702.2, rotte: {4: [(1, 6), (6, 11)], 7: [(1, 8)], 2: [(1, 2), (2, 3)], 6: [(1, 4), (4, 5), (5, 7)], 9: [(1, 2), (2, 9)], 8: [(1, 2), (2, 10)], 5: [(1, 3)], 3: [(1, 4)]}, padri: [9, 9], figli: [], mosse: [(2, 2, 1, 2, 3), (2, 2, 2, 3, 3)]
bestSolutionIndice: 6
6 -> costo: 78132.7, rotte: {4: [(1, 6), (6, 11)], 7: [(1, 7), (7, 8)], 2: [(1, 2), (2, 3)], 6: [(1, 4), (4, 5)], 9: [(1, 2), (2, 9)], 8: [(1, 2), (2, 10)], 5: [(1, 3)], 3: [(1, 4)]}, padri: [5, 5, 7], figli: [], mosse: [(2, 2, 1, 2, 3), (2, 2, 2, 3, 3), (6, 6, 5, 4)]
trasportoPalletDiGamma: {4: [(6, 4), (11, 6)], 7: [(7, 1), (8, 18)], 2: [(2, 3), (3, 3)], 6: [(4, 5), (5, 8)], 9: [(2, 6), (9, 14)], 8: [(2, 11), (10, 9)], 5: [(3, 15)], 3: [(4, 10)]}
itMosseLS: 15, itMosseTS: 10
time elapsed: 308.02s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 85207.29999999999, rotte: {5: [(1, 5), (5, 9)], 4: [(1, 7), (7, 8)], 7: [(1, 3), (3, 2)], 6: [(1, 10), (10, 4), (4, 2)], 2: [(1, 2)], 3: [(1, 4)], 9: [(1, 11), (11, 9), (9, 2)], 8: [(1, 6), (6, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 81542.9, rotte: {5: [(1, 5), (5, 9)], 4: [(1, 7), (7, 8)], 7: [(1, 3), (3, 2)], 6: [(1, 10), (10, 4), (4, 2)], 2: [(1, 2)], 3: [(1, 4)], 9: [(1, 2), (2, 11), (11, 9)], 8: [(1, 6), (6, 8)]}, padri: [0], figli: [2], mosse: [(9, 9, 1, 2, 7)]
2 -> costo: 80889.1, rotte: {5: [(1, 5), (5, 9)], 4: [(1, 7), (7, 8)], 7: [(1, 3), (3, 2)], 6: [(1, 2), (2, 10), (10, 4)], 2: [(1, 2)], 3: [(1, 4)], 9: [(1, 2), (2, 11), (11, 9)], 8: [(1, 6), (6, 8)]}, padri: [1], figli: [3, 5, 6, 5, 7, 7], mosse: [(6, 6, 1, 2, 1)]
3 -> costo: 77970.4, rotte: {5: [(1, 5), (5, 9)], 4: [(1, 7), (7, 8)], 7: [(1, 3), (3, 2)], 6: [(1, 4), (4, 2), (2, 10)], 2: [(1, 2)], 3: [(1, 4)], 9: [(1, 2), (2, 11), (11, 9)], 8: [(1, 6), (6, 8)]}, padri: [2, 5], figli: [4, 4], mosse: [(6, 6, 1, 4, 5), (6, 6, 4, 2, 1)]
4 -> costo: 77563.0, rotte: {5: [(1, 5), (5, 9)], 4: [(1, 7), (7, 8)], 7: [(1, 2), (2, 3)], 6: [(1, 4), (4, 2), (2, 10)], 2: [(1, 2)], 3: [(1, 4)], 9: [(1, 2), (2, 11), (11, 9)], 8: [(1, 6), (6, 8)]}, padri: [3, 3, 6, 7], figli: [], mosse: [(7, 7, 1, 2, 2), (7, 7, 2, 3, 18), (6, 6, 4, 2, 1), (6, 6, 1, 4, 5)]
5 -> costo: 78450.7, rotte: {5: [(1, 5), (5, 9)], 4: [(1, 7), (7, 8)], 7: [(1, 3), (3, 2)], 6: [(1, 2), (2, 4), (4, 10)], 2: [(1, 2)], 3: [(1, 4)], 9: [(1, 2), (2, 11), (11, 9)], 8: [(1, 6), (6, 8)]}, padri: [2, 2], figli: [3, 6, 6], mosse: [(6, 6, 2, 4, 5), (6, 6, 4, 10, 9)]
6 -> costo: 78043.29999999999, rotte: {5: [(1, 5), (5, 9)], 4: [(1, 7), (7, 8)], 7: [(1, 2), (2, 3)], 6: [(1, 2), (2, 4), (4, 10)], 2: [(1, 2)], 3: [(1, 4)], 9: [(1, 2), (2, 11), (11, 9)], 8: [(1, 6), (6, 8)]}, padri: [5, 5, 7], figli: [4], mosse: [(7, 7, 1, 2, 2), (7, 7, 2, 3, 18), (6, 6, 2, 4, 5)]
7 -> costo: 80481.7, rotte: {5: [(1, 5), (5, 9)], 4: [(1, 7), (7, 8)], 7: [(1, 2), (2, 3)], 6: [(1, 2), (2, 10), (10, 4)], 2: [(1, 2)], 3: [(1, 4)], 9: [(1, 2), (2, 11), (11, 9)], 8: [(1, 6), (6, 8)]}, padri: [2], figli: [4, 6], mosse: [(7, 7, 1, 2, 2)]
bestSolutionIndice: 4
4 -> costo: 77563.0, rotte: {5: [(1, 5), (5, 9)], 4: [(1, 7), (7, 8)], 7: [(1, 2), (2, 3)], 6: [(1, 4), (4, 2), (2, 10)], 2: [(1, 2)], 3: [(1, 4)], 9: [(1, 2), (2, 11), (11, 9)], 8: [(1, 6), (6, 8)]}, padri: [3, 3, 6, 7], figli: [], mosse: [(7, 7, 1, 2, 2), (7, 7, 2, 3, 18), (6, 6, 4, 2, 1), (6, 6, 1, 4, 5)]
trasportoPalletDiGamma: {5: [(5, 8), (9, 7)], 4: [(7, 1), (8, 9)], 7: [(2, 2), (3, 18)], 6: [(4, 5), (2, 1), (10, 9)], 2: [(2, 10)], 3: [(4, 10)], 9: [(2, 7), (11, 6), (9, 7)], 8: [(6, 4), (8, 9)]}
itMosseLS: 14, itMosseTS: 10
time elapsed: 214.23s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 85854.59999999999, rotte: {6: [(1, 3)], 3: [(1, 2)], 8: [(1, 9), (9, 11)], 5: [(1, 10), (10, 6), (6, 2)], 7: [(1, 8), (8, 3)], 4: [(1, 5), (5, 2)], 2: [(1, 7), (7, 3), (3, 2)], 9: [(1, 4), (4, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 83659.29999999999, rotte: {6: [(1, 3)], 3: [(1, 2)], 8: [(1, 9), (9, 11)], 5: [(1, 2), (2, 10), (10, 6)], 7: [(1, 8), (8, 3)], 4: [(1, 5), (5, 2)], 2: [(1, 7), (7, 3), (3, 2)], 9: [(1, 4), (4, 2)]}, padri: [0], figli: [2], mosse: [(5, 5, 1, 2, 2)]
2 -> costo: 82698.5, rotte: {6: [(1, 3)], 3: [(1, 2)], 8: [(1, 9), (9, 11)], 5: [(1, 2), (2, 10), (10, 6)], 7: [(1, 3), (3, 8)], 4: [(1, 5), (5, 2)], 2: [(1, 7), (7, 3), (3, 2)], 9: [(1, 4), (4, 2)]}, padri: [1], figli: [3], mosse: [(7, 7, 1, 3, 2)]
3 -> costo: 81799.7, rotte: {6: [(1, 3)], 3: [(1, 2)], 8: [(1, 9), (9, 11)], 5: [(1, 2), (2, 6), (6, 10)], 7: [(1, 3), (3, 8)], 4: [(1, 5), (5, 2)], 2: [(1, 7), (7, 3), (3, 2)], 9: [(1, 4), (4, 2)]}, padri: [2], figli: [4], mosse: [(5, 5, 2, 6, 4)]
4 -> costo: 81026.59999999999, rotte: {6: [(1, 3)], 3: [(1, 2)], 8: [(1, 9), (9, 11)], 5: [(1, 2), (2, 6), (6, 10)], 7: [(1, 3), (3, 8)], 4: [(1, 2), (2, 5)], 2: [(1, 7), (7, 3), (3, 2)], 9: [(1, 4), (4, 2)]}, padri: [3], figli: [5, 5, 5, 7, 7, 7, 7], mosse: [(4, 4, 5, 2)]
5 -> costo: 80473.2, rotte: {6: [(1, 3)], 3: [(1, 2)], 8: [(1, 11), (11, 9)], 5: [(1, 2), (2, 6), (6, 10)], 7: [(1, 3), (3, 8)], 4: [(1, 2), (2, 5)], 2: [(1, 7), (7, 3), (3, 2)], 9: [(1, 4), (4, 2)]}, padri: [4, 4, 4], figli: [6, 6, 6], mosse: [(8, 8, 1, 11, 6), (8, 8, 11, 9, 14), (8, 8, 9, 11)]
6 -> costo: 80361.5, rotte: {6: [(1, 3)], 3: [(1, 2)], 8: [(1, 11), (11, 9)], 5: [(1, 2), (2, 6), (6, 10)], 7: [(1, 3), (3, 8)], 4: [(1, 2), (2, 5)], 2: [(1, 7), (7, 3), (3, 2)], 9: [(1, 2), (2, 4)]}, padri: [5, 5, 5, 7, 7, 7], figli: [], mosse: [(9, 9, 1, 2, 5), (9, 9, 2, 4, 15), (9, 9, 4, 2), (8, 8, 1, 11, 6), (8, 8, 11, 9, 14), (8, 8, 9, 11)]
7 -> costo: 80914.9, rotte: {6: [(1, 3)], 3: [(1, 2)], 8: [(1, 9), (9, 11)], 5: [(1, 2), (2, 6), (6, 10)], 7: [(1, 3), (3, 8)], 4: [(1, 2), (2, 5)], 2: [(1, 7), (7, 3), (3, 2)], 9: [(1, 2), (2, 4)]}, padri: [4, 4], figli: [6, 6, 6], mosse: [(9, 9, 1, 2, 5), (9, 9, 2, 4, 15)]
bestSolutionIndice: 6
6 -> costo: 80361.5, rotte: {6: [(1, 3)], 3: [(1, 2)], 8: [(1, 11), (11, 9)], 5: [(1, 2), (2, 6), (6, 10)], 7: [(1, 3), (3, 8)], 4: [(1, 2), (2, 5)], 2: [(1, 7), (7, 3), (3, 2)], 9: [(1, 2), (2, 4)]}, padri: [5, 5, 5, 7, 7, 7], figli: [], mosse: [(9, 9, 1, 2, 5), (9, 9, 2, 4, 15), (9, 9, 4, 2), (8, 8, 1, 11, 6), (8, 8, 11, 9, 14), (8, 8, 9, 11)]
trasportoPalletDiGamma: {6: [(3, 15)], 3: [(2, 10)], 8: [(11, 6), (9, 14)], 5: [(2, 2), (6, 4), (10, 9)], 7: [(3, 2), (8, 18)], 4: [(2, 2), (5, 8)], 2: [(7, 1), (3, 1), (2, 1)], 9: [(2, 5), (4, 15)]}
itMosseLS: 15, itMosseTS: 10
time elapsed: 358.62s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88804.20000000001, rotte: {6: [(1, 11), (11, 9)], 9: [(1, 7), (7, 4), (4, 2)], 3: [(1, 8)], 7: [(1, 3), (3, 8)], 4: [(1, 10), (10, 2)], 2: [(1, 2)], 8: [(1, 5), (5, 9), (9, 2)], 5: [(1, 6), (6, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85712.6, rotte: {6: [(1, 11), (11, 9)], 9: [(1, 7), (7, 4), (4, 2)], 3: [(1, 8)], 7: [(1, 3), (3, 8)], 4: [(1, 2), (2, 10)], 2: [(1, 2)], 8: [(1, 5), (5, 9), (9, 2)], 5: [(1, 6), (6, 8)]}, padri: [0], figli: [2], mosse: [(4, 4, 10, 2)]
2 -> costo: 83113.2, rotte: {6: [(1, 11), (11, 9)], 9: [(1, 4), (4, 2)], 3: [(1, 8)], 7: [(1, 3), (3, 8)], 4: [(1, 2), (2, 10)], 2: [(1, 2)], 8: [(1, 5), (5, 9), (9, 2)], 5: [(1, 7), (7, 6), (6, 8)]}, padri: [1], figli: [3], mosse: [(5, 9, 1, 7, 1)]
3 -> costo: 80638.1, rotte: {6: [(1, 11), (11, 9)], 9: [(1, 4), (4, 2)], 3: [(1, 8)], 7: [(1, 3), (3, 8)], 4: [(1, 2), (2, 10)], 2: [(1, 2)], 8: [(1, 2), (2, 5), (5, 9)], 5: [(1, 7), (7, 6), (6, 8)]}, padri: [2], figli: [4, 4, 4, 7, 7, 7], mosse: [(8, 8, 1, 2, 5)]
4 -> costo: 80526.40000000001, rotte: {6: [(1, 11), (11, 9)], 9: [(1, 2), (2, 4)], 3: [(1, 8)], 7: [(1, 3), (3, 8)], 4: [(1, 2), (2, 10)], 2: [(1, 2)], 8: [(1, 2), (2, 5), (5, 9)], 5: [(1, 7), (7, 6), (6, 8)]}, padri: [3, 3, 3], figli: [5, 5], mosse: [(9, 9, 1, 2, 4), (9, 9, 2, 4, 15), (9, 9, 4, 2)]
5 -> costo: 80458.6, rotte: {6: [(1, 11), (11, 9)], 9: [(1, 2), (2, 4)], 3: [(1, 8)], 7: [(1, 3), (3, 8)], 4: [(1, 10)], 2: [(1, 2)], 8: [(1, 2), (2, 5), (5, 9)], 5: [(1, 7), (7, 6), (6, 8)]}, padri: [4, 4, 7], figli: [6], mosse: [(9, 4, 1, 2, 1), (9, 4, 4, 2, 1), (9, 9, 1, 2, 5)]
6 -> costo: 80155.70000000001, rotte: {6: [(1, 11), (11, 9)], 9: [(1, 2), (2, 4)], 3: [(1, 8)], 7: [(1, 3), (3, 8)], 4: [(1, 7), (7, 10)], 2: [(1, 2)], 8: [(1, 2), (2, 5), (5, 9)], 5: [(1, 6), (6, 8)]}, padri: [5, 8, 8, 8], figli: [], mosse: [(4, 5, 1, 7, 1), (9, 9, 1, 2, 5), (9, 9, 2, 4, 15), (9, 9, 4, 2)]
7 -> costo: 80570.3, rotte: {6: [(1, 11), (11, 9)], 9: [(1, 4), (4, 2)], 3: [(1, 8)], 7: [(1, 3), (3, 8)], 4: [(1, 10)], 2: [(1, 2)], 8: [(1, 2), (2, 5), (5, 9)], 5: [(1, 7), (7, 6), (6, 8)]}, padri: [3], figli: [8, 5], mosse: [(9, 4, 1, 2, 1)]
8 -> costo: 80267.40000000001, rotte: {6: [(1, 11), (11, 9)], 9: [(1, 4), (4, 2)], 3: [(1, 8)], 7: [(1, 3), (3, 8)], 4: [(1, 7), (7, 10)], 2: [(1, 2)], 8: [(1, 2), (2, 5), (5, 9)], 5: [(1, 6), (6, 8)]}, padri: [7], figli: [6, 6, 6], mosse: [(4, 5, 1, 7, 1)]
bestSolutionIndice: 6
6 -> costo: 80155.70000000001, rotte: {6: [(1, 11), (11, 9)], 9: [(1, 2), (2, 4)], 3: [(1, 8)], 7: [(1, 3), (3, 8)], 4: [(1, 7), (7, 10)], 2: [(1, 2)], 8: [(1, 2), (2, 5), (5, 9)], 5: [(1, 6), (6, 8)]}, padri: [5, 8, 8, 8], figli: [], mosse: [(4, 5, 1, 7, 1), (9, 9, 1, 2, 5), (9, 9, 2, 4, 15), (9, 9, 4, 2)]
trasportoPalletDiGamma: {6: [(11, 6), (9, 9)], 9: [(2, 5), (4, 15)], 3: [(8, 10)], 7: [(3, 18), (8, 2)], 4: [(7, 1), (10, 9)], 2: [(2, 10)], 8: [(2, 5), (5, 8), (9, 5)], 5: [(6, 4), (8, 6)]}
itMosseLS: 15, itMosseTS: 10
time elapsed: 282.54s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 85095.7, rotte: {9: [(1, 9), (9, 11)], 4: [(1, 4)], 3: [(1, 6), (6, 5)], 5: [(1, 10), (10, 4), (4, 8)], 8: [(1, 2)], 2: [(1, 8)], 7: [(1, 7), (7, 3), (3, 8), (8, 5)], 6: [(1, 3)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 80496.2, rotte: {9: [(1, 9), (9, 11)], 4: [(1, 4)], 3: [(1, 6), (6, 5)], 5: [(1, 4), (4, 8), (8, 10)], 8: [(1, 2)], 2: [(1, 8)], 7: [(1, 7), (7, 3), (3, 8), (8, 5)], 6: [(1, 3)]}, padri: [0], figli: [2], mosse: [(5, 5, 8, 10, 9)]
2 -> costo: 79557.40000000001, rotte: {9: [(1, 9), (9, 11)], 4: [(1, 4)], 3: [(1, 6), (6, 5)], 5: [(1, 4), (4, 8), (8, 10)], 8: [(1, 2)], 2: [(1, 8)], 7: [(1, 3), (3, 7), (7, 8), (8, 5)], 6: [(1, 3)]}, padri: [1], figli: [3], mosse: [(7, 7, 3, 7, 1)]
3 -> costo: 78631.50000000001, rotte: {9: [(1, 9), (9, 11)], 4: [(1, 4)], 3: [(1, 6), (6, 5)], 5: [(1, 8), (8, 10)], 8: [(1, 2)], 2: [(1, 8)], 7: [(1, 4), (4, 3), (3, 7), (7, 8), (8, 5)], 6: [(1, 3)]}, padri: [2], figli: [4], mosse: [(7, 5, 1, 4, 5)]
4 -> costo: 78014.50000000001, rotte: {9: [(1, 9), (9, 11)], 4: [(1, 4)], 3: [(1, 5)], 5: [(1, 6), (6, 8), (8, 10)], 8: [(1, 2)], 2: [(1, 8)], 7: [(1, 4), (4, 3), (3, 7), (7, 8), (8, 5)], 6: [(1, 3)]}, padri: [3], figli: [5, 7, 7, 7, 9, 9, 9], mosse: [(5, 3, 1, 6, 4)]
5 -> costo: 77190.40000000001, rotte: {9: [(1, 9), (9, 11)], 4: [(1, 4)], 3: [(1, 5)], 5: [(1, 6), (6, 8), (8, 10)], 8: [(1, 2)], 2: [(1, 8)], 7: [(1, 4), (4, 3), (3, 7), (7, 8)], 6: [(1, 3)]}, padri: [4, 9], figli: [6, 6, 6, 8, 8, 8], mosse: [(3, 7, 1, 5, 2), (3, 7, 1, 5, 2)]
6 -> costo: 76637.0, rotte: {9: [(1, 11), (11, 9)], 4: [(1, 4)], 3: [(1, 5)], 5: [(1, 6), (6, 8), (8, 10)], 8: [(1, 2)], 2: [(1, 8)], 7: [(1, 4), (4, 3), (3, 7), (7, 8)], 6: [(1, 3)]}, padri: [5, 5, 5, 7, 8], figli: [], mosse: [(9, 9, 1, 11, 6), (9, 9, 11, 9, 14), (9, 9, 9, 11), (3, 7, 1, 5, 2), (3, 7, 1, 5, 2)]
7 -> costo: 77461.1, rotte: {9: [(1, 11), (11, 9)], 4: [(1, 4)], 3: [(1, 5)], 5: [(1, 6), (6, 8), (8, 10)], 8: [(1, 2)], 2: [(1, 8)], 7: [(1, 4), (4, 3), (3, 7), (7, 8), (8, 5)], 6: [(1, 3)]}, padri: [4, 4, 4], figli: [6, 8], mosse: [(9, 9, 1, 11, 6), (9, 9, 11, 9, 14), (9, 9, 9, 11)]
8 -> costo: 77398.79999999999, rotte: {9: [(1, 11), (11, 9)], 4: [(1, 4)], 3: [(1, 5)], 5: [(1, 6), (6, 8), (8, 10)], 8: [(1, 2)], 2: [(1, 8)], 7: [(1, 4), (4, 3), (3, 7), (7, 5), (5, 8)], 6: [(1, 3)]}, padri: [7], figli: [6], mosse: [(7, 7, 8, 5)]
9 -> costo: 77952.2, rotte: {9: [(1, 9), (9, 11)], 4: [(1, 4)], 3: [(1, 5)], 5: [(1, 6), (6, 8), (8, 10)], 8: [(1, 2)], 2: [(1, 8)], 7: [(1, 4), (4, 3), (3, 7), (7, 5), (5, 8)], 6: [(1, 3)]}, padri: [4], figli: [5], mosse: [(7, 7, 8, 5)]
bestSolutionIndice: 6
6 -> costo: 76637.0, rotte: {9: [(1, 11), (11, 9)], 4: [(1, 4)], 3: [(1, 5)], 5: [(1, 6), (6, 8), (8, 10)], 8: [(1, 2)], 2: [(1, 8)], 7: [(1, 4), (4, 3), (3, 7), (7, 8)], 6: [(1, 3)]}, padri: [5, 5, 5, 7, 8], figli: [], mosse: [(9, 9, 1, 11, 6), (9, 9, 11, 9, 14), (9, 9, 9, 11), (3, 7, 1, 5, 2), (3, 7, 1, 5, 2)]
trasportoPalletDiGamma: {9: [(11, 6), (9, 14)], 4: [(4, 10)], 3: [(5, 8)], 5: [(6, 4), (8, 1), (10, 9)], 8: [(2, 20)], 2: [(8, 10)], 7: [(4, 5), (3, 3), (7, 1), (8, 7)], 6: [(3, 15)]}
itMosseLS: 16, itMosseTS: 10
time elapsed: 279.19s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 82580.60000000002, rotte: {5: [(1, 5), (5, 11), (11, 8)], 6: [(1, 6), (6, 8)], 4: [(1, 2)], 2: [(1, 3)], 8: [(1, 4), (4, 2)], 9: [(1, 7), (7, 3), (3, 2)], 3: [(1, 9)], 7: [(1, 10), (10, 9), (9, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 80793.70000000001, rotte: {5: [(1, 5), (5, 8), (8, 11)], 6: [(1, 6), (6, 8)], 4: [(1, 2)], 2: [(1, 3)], 8: [(1, 4), (4, 2)], 9: [(1, 7), (7, 3), (3, 2)], 3: [(1, 9)], 7: [(1, 10), (10, 9), (9, 8)]}, padri: [0], figli: [2], mosse: [(5, 5, 5, 8, 1)]
2 -> costo: 79555.1, rotte: {5: [(1, 5), (5, 8), (8, 11)], 6: [(1, 6), (6, 8)], 4: [(1, 2)], 2: [(1, 3)], 8: [(1, 4), (4, 2)], 9: [(1, 3), (3, 2)], 3: [(1, 9)], 7: [(1, 7), (7, 10), (10, 9), (9, 8)]}, padri: [1], figli: [3, 5, 6], mosse: [(7, 9, 1, 7, 1)]
3 -> costo: 78488.90000000001, rotte: {5: [(1, 5), (5, 8), (8, 11)], 6: [(1, 6), (6, 8)], 4: [(1, 2)], 2: [(1, 3)], 8: [(1, 4), (4, 2)], 9: [(1, 3), (3, 2)], 3: [(1, 9)], 7: [(1, 7), (7, 8), (8, 10), (10, 9)]}, padri: [2, 5], figli: [4, 4, 4, 7, 7, 7], mosse: [(7, 7, 7, 8, 6), (7, 7, 7, 8, 6)]
4 -> costo: 78377.20000000001, rotte: {5: [(1, 5), (5, 8), (8, 11)], 6: [(1, 6), (6, 8)], 4: [(1, 2)], 2: [(1, 3)], 8: [(1, 2), (2, 4)], 9: [(1, 3), (3, 2)], 3: [(1, 9)], 7: [(1, 7), (7, 8), (8, 10), (10, 9)]}, padri: [3, 3, 3, 6], figli: [], mosse: [(8, 8, 1, 2, 5), (8, 8, 2, 4, 15), (8, 8, 4, 2), (7, 7, 7, 8, 6)]
5 -> costo: 79413.1, rotte: {5: [(1, 5), (5, 8), (8, 11)], 6: [(1, 6), (6, 8)], 4: [(1, 2)], 2: [(1, 3)], 8: [(1, 4), (4, 2)], 9: [(1, 3), (3, 2)], 3: [(1, 9)], 7: [(1, 8), (8, 7), (7, 10), (10, 9)]}, padri: [2], figli: [3, 6, 6], mosse: [(7, 7, 1, 8, 6)]
6 -> costo: 79301.40000000001, rotte: {5: [(1, 5), (5, 8), (8, 11)], 6: [(1, 6), (6, 8)], 4: [(1, 2)], 2: [(1, 3)], 8: [(1, 2), (2, 4)], 9: [(1, 3), (3, 2)], 3: [(1, 9)], 7: [(1, 8), (8, 7), (7, 10), (10, 9)]}, padri: [5, 5], figli: [4, 7, 7], mosse: [(8, 8, 1, 2, 5), (8, 8, 2, 4, 15)]
7 -> costo: 79223.6, rotte: {5: [(1, 5), (5, 8), (8, 11)], 6: [(1, 6), (6, 8)], 4: [(1, 2)], 2: [(1, 3)], 8: [(1, 2), (2, 4)], 9: [(1, 3), (3, 2)], 3: [(1, 9)], 7: [(1, 8), (8, 7), (7, 9), (9, 10)]}, padri: [6, 6], figli: [8], mosse: [(7, 7, 7, 9, 4), (7, 7, 9, 10, 9)]
8 -> costo: 77890.80000000002, rotte: {5: [(1, 5), (5, 8), (8, 11)], 6: [(1, 6), (6, 8)], 4: [(1, 2)], 2: [(1, 3)], 8: [(1, 2), (2, 4)], 9: [(1, 3), (3, 2)], 3: [(1, 9)], 7: [(1, 7), (7, 8), (8, 9), (9, 10)]}, padri: [7], figli: [], mosse: [(7, 7, 7, 8, 6)]
bestSolutionIndice: 8
8 -> costo: 77890.80000000002, rotte: {5: [(1, 5), (5, 8), (8, 11)], 6: [(1, 6), (6, 8)], 4: [(1, 2)], 2: [(1, 3)], 8: [(1, 2), (2, 4)], 9: [(1, 3), (3, 2)], 3: [(1, 9)], 7: [(1, 7), (7, 8), (8, 9), (9, 10)]}, padri: [7], figli: [], mosse: [(7, 7, 7, 8, 6)]
trasportoPalletDiGamma: {5: [(5, 8), (8, 1), (11, 6)], 6: [(6, 4), (8, 11)], 4: [(2, 10)], 2: [(3, 10)], 8: [(2, 5), (4, 15)], 9: [(3, 8), (2, 5)], 3: [(9, 10)], 7: [(7, 1), (8, 6), (9, 4), (10, 9)]}
itMosseLS: 14, itMosseTS: 10
time elapsed: 252.04s.


##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
