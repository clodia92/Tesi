itNSIMax: 50, itMosseTSMax: 5.
##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 83639.5, rotte: {8: [(1, 2)], 7: [(1, 11), (11, 10), (10, 8)], 3: [(1, 5), (5, 3)], 4: [(1, 6), (6, 8)], 9: [(1, 4), (4, 7)], 5: [(1, 3)], 6: [(1, 9), (9, 3)], 2: [(1, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 81157.5, rotte: {8: [(1, 2)], 7: [(1, 11), (11, 10), (10, 8)], 3: [(1, 5), (5, 3)], 4: [(1, 6), (6, 8)], 9: [(1, 4), (4, 7)], 5: [(1, 3)], 6: [(1, 3), (3, 9)], 2: [(1, 8)]}, padri: [0], figli: [2], mosse: [(6, 6, 1, 3, 1)]
2 -> costo: 80861.1, rotte: {8: [(1, 2)], 7: [(1, 11), (11, 10), (10, 8)], 3: [(1, 3), (3, 5)], 4: [(1, 6), (6, 8)], 9: [(1, 4), (4, 7)], 5: [(1, 3)], 6: [(1, 3), (3, 9)], 2: [(1, 8)]}, padri: [1], figli: [3], mosse: [(3, 3, 5, 3)]
3 -> costo: 78928.0, rotte: {8: [(1, 2)], 7: [(1, 3), (3, 11), (11, 10), (10, 8)], 3: [(1, 5)], 4: [(1, 6), (6, 8)], 9: [(1, 4), (4, 7)], 5: [(1, 3)], 6: [(1, 3), (3, 9)], 2: [(1, 8)]}, padri: [2], figli: [4, 4, 4, 4, 5, 5, 5, 5], mosse: [(7, 3, 1, 3, 2)]
4 -> costo: 78012.4, rotte: {8: [(1, 2)], 7: [(1, 3), (3, 11), (11, 10), (10, 8)], 3: [(1, 5)], 4: [(1, 6), (6, 8)], 9: [(1, 4), (4, 7)], 5: [(1, 3)], 6: [(1, 9)], 2: [(1, 8)]}, padri: [3, 3, 3, 3, 5, 5], figli: [], mosse: [(7, 6, 1, 3, 1), (7, 6, 11, 3, 1), (7, 6, 10, 3, 1), (7, 6, 8, 3, 1), (7, 9, 1, 3, 1), (7, 9, 11, 3, 1)]
5 -> costo: 78233.09999999999, rotte: {8: [(1, 2)], 7: [(1, 3), (3, 11), (11, 10), (10, 8)], 3: [(1, 5)], 4: [(1, 6), (6, 8)], 9: [(1, 4), (4, 3), (3, 7)], 5: [(1, 3)], 6: [(1, 9)], 2: [(1, 8)]}, padri: [3], figli: [4, 4], mosse: [(9, 6, 4, 3, 1)]
bestSolutionIndice: 4
4 -> costo: 78012.4, rotte: {8: [(1, 2)], 7: [(1, 3), (3, 11), (11, 10), (10, 8)], 3: [(1, 5)], 4: [(1, 6), (6, 8)], 9: [(1, 4), (4, 7)], 5: [(1, 3)], 6: [(1, 9)], 2: [(1, 8)]}, padri: [3, 3, 3, 3, 5, 5], figli: [], mosse: [(7, 6, 1, 3, 1), (7, 6, 11, 3, 1), (7, 6, 10, 3, 1), (7, 6, 8, 3, 1), (7, 9, 1, 3, 1), (7, 9, 11, 3, 1)]
trasportoPalletDiGamma: {8: [(2, 20)], 7: [(3, 3), (11, 6), (10, 9), (8, 2)], 3: [(5, 8)], 4: [(6, 4), (8, 6)], 9: [(4, 15), (7, 1)], 5: [(3, 15)], 6: [(9, 14)], 2: [(8, 10)]}
itMosseLS: 10, itMosseTS: 5
time elapsed: 138.68s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 81498.09999999999, rotte: {2: [(1, 7), (7, 6)], 8: [(1, 4), (4, 9)], 9: [(1, 2)], 5: [(1, 11), (11, 9)], 6: [(1, 10), (10, 8)], 4: [(1, 8)], 3: [(1, 5), (5, 8)], 7: [(1, 3)]}, padri: [-1], figli: [1, 1, 1], mosse: [-1]
1 -> costo: 79848.79999999999, rotte: {2: [(1, 7), (7, 6)], 8: [(1, 4), (4, 9)], 9: [(1, 2)], 5: [(1, 11), (11, 9)], 6: [(1, 8), (8, 10)], 4: [(1, 8)], 3: [(1, 5), (5, 8)], 7: [(1, 3)]}, padri: [0, 0, 0], figli: [], mosse: [(6, 6, 1, 8, 6), (6, 6, 10, 8), (6, 6, 8, 10, 9)]
bestSolutionIndice: 1
1 -> costo: 79848.79999999999, rotte: {2: [(1, 7), (7, 6)], 8: [(1, 4), (4, 9)], 9: [(1, 2)], 5: [(1, 11), (11, 9)], 6: [(1, 8), (8, 10)], 4: [(1, 8)], 3: [(1, 5), (5, 8)], 7: [(1, 3)]}, padri: [0, 0, 0], figli: [], mosse: [(6, 6, 1, 8, 6), (6, 6, 10, 8), (6, 6, 8, 10, 9)]
trasportoPalletDiGamma: {2: [(7, 1), (6, 4)], 8: [(4, 15), (9, 5)], 9: [(2, 20)], 5: [(11, 6), (9, 9)], 6: [(8, 6), (10, 9)], 4: [(8, 10)], 3: [(5, 8), (8, 2)], 7: [(3, 18)]}
itMosseLS: 3, itMosseTS: 3
time elapsed: 60.91s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 92415.5, rotte: {5: [(1, 6), (6, 11), (11, 3)], 2: [(1, 7), (7, 2)], 7: [(1, 4), (4, 8)], 4: [(1, 5), (5, 3)], 3: [(1, 8)], 9: [(1, 9), (9, 2)], 8: [(1, 10), (10, 8), (8, 2)], 6: [(1, 3)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 89463.1, rotte: {5: [(1, 6), (6, 11), (11, 3)], 2: [(1, 7), (7, 2)], 7: [(1, 4), (4, 8)], 4: [(1, 5), (5, 3)], 3: [(1, 8)], 9: [(1, 2), (2, 9)], 8: [(1, 10), (10, 8), (8, 2)], 6: [(1, 3)]}, padri: [0], figli: [2], mosse: [(9, 9, 1, 2, 6)]
2 -> costo: 88315.5, rotte: {5: [(1, 6), (6, 3), (3, 11)], 2: [(1, 7), (7, 2)], 7: [(1, 4), (4, 8)], 4: [(1, 5), (5, 3)], 3: [(1, 8)], 9: [(1, 2), (2, 9)], 8: [(1, 10), (10, 8), (8, 2)], 6: [(1, 3)]}, padri: [1], figli: [3], mosse: [(5, 5, 11, 3)]
3 -> costo: 85758.7, rotte: {5: [(1, 6), (6, 7), (7, 3), (3, 11)], 2: [(1, 2)], 7: [(1, 4), (4, 8)], 4: [(1, 5), (5, 3)], 3: [(1, 8)], 9: [(1, 2), (2, 9)], 8: [(1, 10), (10, 8), (8, 2)], 6: [(1, 3)]}, padri: [2], figli: [4], mosse: [(5, 2, 6, 7, 1)]
4 -> costo: 85462.3, rotte: {5: [(1, 6), (6, 7), (7, 3), (3, 11)], 2: [(1, 2)], 7: [(1, 4), (4, 8)], 4: [(1, 3), (3, 5)], 3: [(1, 8)], 9: [(1, 2), (2, 9)], 8: [(1, 10), (10, 8), (8, 2)], 6: [(1, 3)]}, padri: [3], figli: [5], mosse: [(4, 4, 5, 3)]
5 -> costo: 83302.6, rotte: {5: [(1, 6), (6, 7), (7, 3), (3, 11)], 2: [(1, 2)], 7: [(1, 4), (4, 8)], 4: [(1, 3), (3, 5)], 3: [(1, 8)], 9: [(1, 2), (2, 9)], 8: [(1, 2), (2, 10), (10, 8)], 6: [(1, 3)]}, padri: [4], figli: [6, 8], mosse: [(8, 8, 1, 2, 5)]
6 -> costo: 82381.8, rotte: {5: [(1, 6), (6, 7), (7, 3), (3, 11)], 2: [(1, 2)], 7: [(1, 4), (4, 8)], 4: [(1, 3), (3, 5)], 3: [(1, 8)], 9: [(1, 2), (2, 9)], 8: [(1, 2), (2, 8), (8, 10)], 6: [(1, 3)]}, padri: [5], figli: [7, 7, 7, 7], mosse: [(8, 8, 10, 8)]
7 -> costo: 80448.7, rotte: {5: [(1, 6), (6, 7), (7, 3), (3, 11)], 2: [(1, 2)], 7: [(1, 4), (4, 8)], 4: [(1, 5)], 3: [(1, 8)], 9: [(1, 2), (2, 9)], 8: [(1, 2), (2, 8), (8, 10)], 6: [(1, 3)]}, padri: [6, 6, 6, 6, 8], figli: [], mosse: [(5, 4, 1, 3, 2), (5, 4, 6, 3, 2), (5, 4, 7, 3, 2), (5, 4, 11, 3, 2), (8, 8, 10, 8)]
8 -> costo: 81369.5, rotte: {5: [(1, 6), (6, 7), (7, 3), (3, 11)], 2: [(1, 2)], 7: [(1, 4), (4, 8)], 4: [(1, 5)], 3: [(1, 8)], 9: [(1, 2), (2, 9)], 8: [(1, 2), (2, 10), (10, 8)], 6: [(1, 3)]}, padri: [5], figli: [7], mosse: [(5, 4, 1, 3, 2)]
bestSolutionIndice: 7
7 -> costo: 80448.7, rotte: {5: [(1, 6), (6, 7), (7, 3), (3, 11)], 2: [(1, 2)], 7: [(1, 4), (4, 8)], 4: [(1, 5)], 3: [(1, 8)], 9: [(1, 2), (2, 9)], 8: [(1, 2), (2, 8), (8, 10)], 6: [(1, 3)]}, padri: [6, 6, 6, 6, 8], figli: [], mosse: [(5, 4, 1, 3, 2), (5, 4, 6, 3, 2), (5, 4, 7, 3, 2), (5, 4, 11, 3, 2), (8, 8, 10, 8)]
trasportoPalletDiGamma: {5: [(6, 4), (7, 1), (3, 3), (11, 6)], 2: [(2, 9)], 7: [(4, 15), (8, 5)], 4: [(5, 8)], 3: [(8, 10)], 9: [(2, 6), (9, 14)], 8: [(2, 5), (8, 3), (10, 9)], 6: [(3, 15)]}
itMosseLS: 12, itMosseTS: 5
time elapsed: 172.60s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 85109.2, rotte: {5: [(1, 5), (5, 7), (7, 9)], 7: [(1, 8), (8, 9)], 2: [(1, 3)], 3: [(1, 6), (6, 3)], 4: [(1, 2)], 9: [(1, 10), (10, 2)], 6: [(1, 11), (11, 9)], 8: [(1, 4), (4, 3)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 82017.59999999999, rotte: {5: [(1, 5), (5, 7), (7, 9)], 7: [(1, 8), (8, 9)], 2: [(1, 3)], 3: [(1, 6), (6, 3)], 4: [(1, 2)], 9: [(1, 2), (2, 10)], 6: [(1, 11), (11, 9)], 8: [(1, 4), (4, 3)]}, padri: [0], figli: [2, 4], mosse: [(9, 9, 10, 2)]
2 -> costo: 80680.5, rotte: {5: [(1, 5), (5, 7), (7, 9)], 7: [(1, 8)], 2: [(1, 3)], 3: [(1, 6), (6, 3)], 4: [(1, 2)], 9: [(1, 2), (2, 10)], 6: [(1, 11), (11, 9)], 8: [(1, 4), (4, 3)]}, padri: [1], figli: [3, 3, 3], mosse: [(5, 7, 1, 9, 2)]
3 -> costo: 80090.59999999999, rotte: {5: [(1, 5), (5, 7), (7, 9)], 7: [(1, 8)], 2: [(1, 3)], 3: [(1, 3), (3, 6)], 4: [(1, 2)], 9: [(1, 2), (2, 10)], 6: [(1, 11), (11, 9)], 8: [(1, 4), (4, 3)]}, padri: [2, 2, 2, 4, 4], figli: [], mosse: [(3, 3, 6, 3), (3, 3, 1, 3, 6), (3, 3, 3, 6, 4), (5, 7, 1, 9, 2), (5, 7, 5, 9, 2)]
4 -> costo: 81427.7, rotte: {5: [(1, 5), (5, 7), (7, 9)], 7: [(1, 8), (8, 9)], 2: [(1, 3)], 3: [(1, 3), (3, 6)], 4: [(1, 2)], 9: [(1, 2), (2, 10)], 6: [(1, 11), (11, 9)], 8: [(1, 4), (4, 3)]}, padri: [1], figli: [3, 3], mosse: [(3, 3, 6, 3)]
bestSolutionIndice: 3
3 -> costo: 80090.59999999999, rotte: {5: [(1, 5), (5, 7), (7, 9)], 7: [(1, 8)], 2: [(1, 3)], 3: [(1, 3), (3, 6)], 4: [(1, 2)], 9: [(1, 2), (2, 10)], 6: [(1, 11), (11, 9)], 8: [(1, 4), (4, 3)]}, padri: [2, 2, 2, 4, 4], figli: [], mosse: [(3, 3, 6, 3), (3, 3, 1, 3, 6), (3, 3, 3, 6, 4), (5, 7, 1, 9, 2), (5, 7, 5, 9, 2)]
trasportoPalletDiGamma: {5: [(5, 8), (7, 1), (9, 5)], 7: [(8, 18)], 2: [(3, 10)], 3: [(3, 6), (6, 4)], 4: [(2, 10)], 9: [(2, 10), (10, 9)], 6: [(11, 6), (9, 9)], 8: [(4, 15), (3, 2)]}
itMosseLS: 8, itMosseTS: 5
time elapsed: 115.06s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89276.90000000001, rotte: {6: [(1, 11), (11, 4)], 2: [(1, 3)], 7: [(1, 5), (5, 9)], 3: [(1, 2)], 8: [(1, 8), (8, 3)], 5: [(1, 7), (7, 2), (2, 3)], 9: [(1, 10), (10, 4), (4, 3)], 4: [(1, 6), (6, 9)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 84735.29999999999, rotte: {6: [(1, 11), (11, 4)], 2: [(1, 3)], 7: [(1, 5), (5, 9)], 3: [(1, 2)], 8: [(1, 8), (8, 3)], 5: [(1, 7), (7, 2), (2, 3)], 9: [(1, 4), (4, 3), (3, 10)], 4: [(1, 6), (6, 9)]}, padri: [0], figli: [2], mosse: [(9, 9, 3, 10, 9)]
2 -> costo: 82464.09999999999, rotte: {6: [(1, 4), (4, 11)], 2: [(1, 3)], 7: [(1, 5), (5, 9)], 3: [(1, 2)], 8: [(1, 8), (8, 3)], 5: [(1, 7), (7, 2), (2, 3)], 9: [(1, 4), (4, 3), (3, 10)], 4: [(1, 6), (6, 9)]}, padri: [1], figli: [3, 5], mosse: [(6, 6, 11, 4)]
3 -> costo: 80320.4, rotte: {6: [(1, 4), (4, 11)], 2: [(1, 3)], 7: [(1, 5), (5, 9)], 3: [(1, 2)], 8: [(1, 8), (8, 3)], 5: [(1, 2), (2, 3)], 9: [(1, 4), (4, 3), (3, 10)], 4: [(1, 7), (7, 6), (6, 9)]}, padri: [2], figli: [4, 4, 4, 6, 6, 6], mosse: [(4, 5, 1, 7, 1)]
4 -> costo: 79359.6, rotte: {6: [(1, 4), (4, 11)], 2: [(1, 3)], 7: [(1, 5), (5, 9)], 3: [(1, 2)], 8: [(1, 3), (3, 8)], 5: [(1, 2), (2, 3)], 9: [(1, 4), (4, 3), (3, 10)], 4: [(1, 7), (7, 6), (6, 9)]}, padri: [3, 3, 3, 5, 7], figli: [], mosse: [(8, 8, 8, 3), (8, 8, 1, 3, 2), (8, 8, 3, 8, 18), (4, 5, 1, 7, 1), (5, 5, 3, 2)]
5 -> costo: 81503.3, rotte: {6: [(1, 4), (4, 11)], 2: [(1, 3)], 7: [(1, 5), (5, 9)], 3: [(1, 2)], 8: [(1, 3), (3, 8)], 5: [(1, 7), (7, 2), (2, 3)], 9: [(1, 4), (4, 3), (3, 10)], 4: [(1, 6), (6, 9)]}, padri: [2], figli: [4, 6], mosse: [(8, 8, 8, 3)]
6 -> costo: 80702.70000000001, rotte: {6: [(1, 4), (4, 11)], 2: [(1, 3)], 7: [(1, 5), (5, 9)], 3: [(1, 2)], 8: [(1, 3), (3, 8)], 5: [(1, 7), (7, 3), (3, 2)], 9: [(1, 4), (4, 3), (3, 10)], 4: [(1, 6), (6, 9)]}, padri: [5], figli: [7], mosse: [(5, 5, 2, 3)]
7 -> costo: 79767.0, rotte: {6: [(1, 4), (4, 11)], 2: [(1, 3)], 7: [(1, 5), (5, 9)], 3: [(1, 2)], 8: [(1, 3), (3, 8)], 5: [(1, 3), (3, 2)], 9: [(1, 4), (4, 3), (3, 10)], 4: [(1, 7), (7, 6), (6, 9)]}, padri: [6], figli: [4], mosse: [(4, 5, 1, 7, 1)]
bestSolutionIndice: 4
4 -> costo: 79359.6, rotte: {6: [(1, 4), (4, 11)], 2: [(1, 3)], 7: [(1, 5), (5, 9)], 3: [(1, 2)], 8: [(1, 3), (3, 8)], 5: [(1, 2), (2, 3)], 9: [(1, 4), (4, 3), (3, 10)], 4: [(1, 7), (7, 6), (6, 9)]}, padri: [3, 3, 3, 5, 7], figli: [], mosse: [(8, 8, 8, 3), (8, 8, 1, 3, 2), (8, 8, 3, 8, 18), (4, 5, 1, 7, 1), (5, 5, 3, 2)]
trasportoPalletDiGamma: {6: [(4, 9), (11, 6)], 2: [(3, 10)], 7: [(5, 8), (9, 12)], 3: [(2, 10)], 8: [(3, 2), (8, 18)], 5: [(2, 10), (3, 4)], 9: [(4, 6), (3, 2), (10, 9)], 4: [(7, 1), (6, 4), (9, 2)]}
itMosseLS: 11, itMosseTS: 5
time elapsed: 114.25s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 87075.9, rotte: {3: [(1, 8)], 5: [(1, 5), (5, 10)], 8: [(1, 11), (11, 2)], 2: [(1, 7), (7, 8), (8, 2)], 9: [(1, 9), (9, 3)], 4: [(1, 6), (6, 10)], 6: [(1, 3)], 7: [(1, 4), (4, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 84593.9, rotte: {3: [(1, 8)], 5: [(1, 5), (5, 10)], 8: [(1, 11), (11, 2)], 2: [(1, 7), (7, 8), (8, 2)], 9: [(1, 3), (3, 9)], 4: [(1, 6), (6, 10)], 6: [(1, 3)], 7: [(1, 4), (4, 2)]}, padri: [0], figli: [2], mosse: [(9, 9, 9, 3)]
2 -> costo: 82211.59999999999, rotte: {3: [(1, 8)], 5: [(1, 5), (5, 10)], 8: [(1, 2), (2, 11)], 2: [(1, 7), (7, 8), (8, 2)], 9: [(1, 3), (3, 9)], 4: [(1, 6), (6, 10)], 6: [(1, 3)], 7: [(1, 4), (4, 2)]}, padri: [1], figli: [3, 5], mosse: [(8, 8, 1, 2, 14)]
3 -> costo: 82099.9, rotte: {3: [(1, 8)], 5: [(1, 5), (5, 10)], 8: [(1, 2), (2, 11)], 2: [(1, 7), (7, 8), (8, 2)], 9: [(1, 3), (3, 9)], 4: [(1, 6), (6, 10)], 6: [(1, 3)], 7: [(1, 2), (2, 4)]}, padri: [2], figli: [4], mosse: [(7, 7, 4, 2)]
4 -> costo: 80852.3, rotte: {3: [(1, 8)], 5: [(1, 5), (5, 10)], 8: [(1, 2), (2, 11)], 2: [(1, 2), (2, 7), (7, 8)], 9: [(1, 3), (3, 9)], 4: [(1, 6), (6, 10)], 6: [(1, 3)], 7: [(1, 2), (2, 4)]}, padri: [3, 5, 5, 5], figli: [], mosse: [(2, 2, 1, 2, 1), (7, 7, 4, 2), (7, 7, 1, 2, 5), (7, 7, 2, 4, 15)]
5 -> costo: 80964.0, rotte: {3: [(1, 8)], 5: [(1, 5), (5, 10)], 8: [(1, 2), (2, 11)], 2: [(1, 2), (2, 7), (7, 8)], 9: [(1, 3), (3, 9)], 4: [(1, 6), (6, 10)], 6: [(1, 3)], 7: [(1, 4), (4, 2)]}, padri: [2], figli: [4, 4, 4], mosse: [(2, 2, 1, 2, 1)]
bestSolutionIndice: 4
4 -> costo: 80852.3, rotte: {3: [(1, 8)], 5: [(1, 5), (5, 10)], 8: [(1, 2), (2, 11)], 2: [(1, 2), (2, 7), (7, 8)], 9: [(1, 3), (3, 9)], 4: [(1, 6), (6, 10)], 6: [(1, 3)], 7: [(1, 2), (2, 4)]}, padri: [3, 5, 5, 5], figli: [], mosse: [(2, 2, 1, 2, 1), (7, 7, 4, 2), (7, 7, 1, 2, 5), (7, 7, 2, 4, 15)]
trasportoPalletDiGamma: {3: [(8, 10)], 5: [(5, 8), (10, 7)], 8: [(2, 14), (11, 6)], 2: [(2, 1), (7, 1), (8, 8)], 9: [(3, 3), (9, 14)], 4: [(6, 4), (10, 2)], 6: [(3, 15)], 7: [(2, 5), (4, 15)]}
itMosseLS: 8, itMosseTS: 5
time elapsed: 137.74s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 87692.7, rotte: {5: [(1, 8)], 6: [(1, 7), (7, 10), (10, 3)], 2: [(1, 4)], 7: [(1, 11), (11, 3)], 3: [(1, 6), (6, 8), (8, 4)], 8: [(1, 2)], 9: [(1, 5), (5, 9), (9, 4)], 4: [(1, 9)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85006.2, rotte: {5: [(1, 8)], 6: [(1, 7), (7, 10), (10, 3)], 2: [(1, 4)], 7: [(1, 11), (11, 3)], 3: [(1, 6), (6, 8), (8, 4)], 8: [(1, 2)], 9: [(1, 4), (4, 5), (5, 9)], 4: [(1, 9)]}, padri: [0], figli: [2], mosse: [(9, 9, 1, 4, 2)]
2 -> costo: 83031.29999999999, rotte: {5: [(1, 8)], 6: [(1, 7), (7, 10), (10, 3)], 2: [(1, 4)], 7: [(1, 3), (3, 11)], 3: [(1, 6), (6, 8), (8, 4)], 8: [(1, 2)], 9: [(1, 4), (4, 5), (5, 9)], 4: [(1, 9)]}, padri: [1], figli: [3], mosse: [(7, 7, 11, 3)]
3 -> costo: 81485.4, rotte: {5: [(1, 8)], 6: [(1, 3), (3, 7), (7, 10)], 2: [(1, 4)], 7: [(1, 3), (3, 11)], 3: [(1, 6), (6, 8), (8, 4)], 8: [(1, 2)], 9: [(1, 4), (4, 5), (5, 9)], 4: [(1, 9)]}, padri: [2], figli: [4], mosse: [(6, 6, 1, 3, 4)]
4 -> costo: 80235.8, rotte: {5: [(1, 8)], 6: [(1, 3), (3, 7), (7, 10)], 2: [(1, 4)], 7: [(1, 3), (3, 11)], 3: [(1, 4), (4, 6), (6, 8)], 8: [(1, 2)], 9: [(1, 4), (4, 5), (5, 9)], 4: [(1, 9)]}, padri: [3], figli: [5], mosse: [(3, 3, 1, 4, 3)]
5 -> costo: 79967.0, rotte: {5: [(1, 8)], 6: [(1, 7), (7, 10)], 2: [(1, 4)], 7: [(1, 3), (3, 11)], 3: [(1, 4), (4, 6), (6, 8)], 8: [(1, 2)], 9: [(1, 4), (4, 3), (3, 5), (5, 9)], 4: [(1, 9)]}, padri: [4], figli: [6, 9], mosse: [(9, 6, 4, 3, 4)]
6 -> costo: 79951.5, rotte: {5: [(1, 8)], 6: [(1, 10)], 2: [(1, 4)], 7: [(1, 3), (3, 11)], 3: [(1, 4), (4, 6), (6, 8)], 8: [(1, 2)], 9: [(1, 4), (4, 3), (3, 7), (7, 5), (5, 9)], 4: [(1, 9)]}, padri: [5], figli: [7], mosse: [(9, 6, 3, 7, 1)]
7 -> costo: 79023.5, rotte: {5: [(1, 8)], 6: [(1, 4), (4, 10)], 2: [(1, 4)], 7: [(1, 3), (3, 11)], 3: [(1, 6), (6, 8)], 8: [(1, 2)], 9: [(1, 4), (4, 3), (3, 7), (7, 5), (5, 9)], 4: [(1, 9)]}, padri: [6], figli: [8, 8], mosse: [(6, 3, 1, 4, 3)]
8 -> costo: 78760.7, rotte: {5: [(1, 8)], 6: [(1, 4), (4, 10)], 2: [(1, 4)], 7: [(1, 3), (3, 11)], 3: [(1, 6), (6, 8)], 8: [(1, 2)], 9: [(1, 3), (3, 7), (7, 5), (5, 9)], 4: [(1, 9)]}, padri: [7, 7], figli: [], mosse: [(6, 9, 1, 4, 2), (6, 9, 10, 4, 2)]
9 -> costo: 79956.59999999999, rotte: {5: [(1, 8)], 6: [(1, 4), (4, 7), (7, 10)], 2: [(1, 4)], 7: [(1, 3), (3, 11)], 3: [(1, 6), (6, 8)], 8: [(1, 2)], 9: [(1, 4), (4, 3), (3, 5), (5, 9)], 4: [(1, 9)]}, padri: [5], figli: [10], mosse: [(6, 3, 1, 4, 3)]
10 -> costo: 79693.79999999999, rotte: {5: [(1, 8)], 6: [(1, 4), (4, 7), (7, 10)], 2: [(1, 4)], 7: [(1, 3), (3, 11)], 3: [(1, 6), (6, 8)], 8: [(1, 2)], 9: [(1, 3), (3, 5), (5, 9)], 4: [(1, 9)]}, padri: [9], figli: [11], mosse: [(6, 9, 1, 4, 2)]
11 -> costo: 79624.29999999999, rotte: {5: [(1, 8)], 6: [(1, 4), (4, 7), (7, 10)], 2: [(1, 4)], 7: [(1, 3), (3, 11)], 3: [(1, 8)], 8: [(1, 2)], 9: [(1, 3), (3, 5), (5, 6), (6, 9)], 4: [(1, 9)]}, padri: [10], figli: [], mosse: [(9, 3, 5, 6, 4)]
bestSolutionIndice: 8
8 -> costo: 78760.7, rotte: {5: [(1, 8)], 6: [(1, 4), (4, 10)], 2: [(1, 4)], 7: [(1, 3), (3, 11)], 3: [(1, 6), (6, 8)], 8: [(1, 2)], 9: [(1, 3), (3, 7), (7, 5), (5, 9)], 4: [(1, 9)]}, padri: [7, 7], figli: [], mosse: [(6, 9, 1, 4, 2), (6, 9, 10, 4, 2)]
trasportoPalletDiGamma: {5: [(8, 15)], 6: [(4, 5), (10, 9)], 2: [(4, 10)], 7: [(3, 14), (11, 6)], 3: [(6, 4), (8, 3)], 8: [(2, 20)], 9: [(3, 4), (7, 1), (5, 8), (9, 4)], 4: [(9, 10)]}
itMosseLS: 12, itMosseTS: 5
time elapsed: 185.19s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89779.00000000001, rotte: {3: [(1, 3)], 6: [(1, 8)], 4: [(1, 6), (6, 4)], 8: [(1, 5), (5, 10), (10, 4)], 5: [(1, 2)], 9: [(1, 7), (7, 3), (3, 2), (2, 4)], 7: [(1, 9), (9, 8), (8, 4)], 2: [(1, 11), (11, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 87120.3, rotte: {3: [(1, 3)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 10), (10, 4)], 5: [(1, 2)], 9: [(1, 6), (6, 7), (7, 3), (3, 2), (2, 4)], 7: [(1, 9), (9, 8), (8, 4)], 2: [(1, 11), (11, 2)]}, padri: [0], figli: [2], mosse: [(9, 4, 1, 6, 4)]
2 -> costo: 84738.0, rotte: {3: [(1, 3)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 10), (10, 4)], 5: [(1, 2)], 9: [(1, 6), (6, 7), (7, 3), (3, 2), (2, 4)], 7: [(1, 9), (9, 8), (8, 4)], 2: [(1, 2), (2, 11)]}, padri: [1], figli: [3], mosse: [(2, 2, 11, 2)]
3 -> costo: 81426.90000000001, rotte: {3: [(1, 3)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 10)], 5: [(1, 2)], 9: [(1, 6), (6, 7), (7, 3), (3, 2), (2, 4)], 7: [(1, 9), (9, 8), (8, 4)], 2: [(1, 2), (2, 11)]}, padri: [2], figli: [4, 6], mosse: [(4, 8, 1, 4, 3)]
4 -> costo: 80023.1, rotte: {3: [(1, 3)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 10)], 5: [(1, 2)], 9: [(1, 6), (6, 7), (7, 3), (3, 2), (2, 4)], 7: [(1, 4), (4, 9), (9, 8)], 2: [(1, 2), (2, 11)]}, padri: [3], figli: [5, 5, 5], mosse: [(7, 7, 1, 4, 3)]
5 -> costo: 78590.3, rotte: {3: [(1, 3)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 10)], 5: [(1, 2)], 9: [(1, 6), (6, 7), (7, 3), (3, 2), (2, 4)], 7: [(1, 4), (4, 8), (8, 9)], 2: [(1, 2), (2, 11)]}, padri: [4, 4, 4], figli: [], mosse: [(7, 7, 9, 8), (7, 7, 4, 8, 3), (7, 7, 8, 9, 14)]
6 -> costo: 81346.70000000001, rotte: {3: [(1, 3)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 10)], 5: [(1, 2)], 9: [(1, 6), (6, 7), (7, 3), (3, 2), (2, 4)], 7: [(1, 8), (8, 9), (9, 4)], 2: [(1, 2), (2, 11)]}, padri: [3], figli: [], mosse: [(7, 7, 8, 9, 14)]
bestSolutionIndice: 5
5 -> costo: 78590.3, rotte: {3: [(1, 3)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 10)], 5: [(1, 2)], 9: [(1, 6), (6, 7), (7, 3), (3, 2), (2, 4)], 7: [(1, 4), (4, 8), (8, 9)], 2: [(1, 2), (2, 11)]}, padri: [4, 4, 4], figli: [], mosse: [(7, 7, 9, 8), (7, 7, 4, 8, 3), (7, 7, 8, 9, 14)]
trasportoPalletDiGamma: {3: [(3, 10)], 6: [(8, 15)], 4: [(4, 9)], 8: [(5, 8), (10, 9)], 5: [(2, 15)], 9: [(6, 4), (7, 1), (3, 8), (2, 1), (4, 3)], 7: [(4, 3), (8, 3), (9, 14)], 2: [(2, 4), (11, 6)]}
itMosseLS: 8, itMosseTS: 5
time elapsed: 145.93s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 87268.3, rotte: {3: [(1, 11), (11, 6)], 8: [(1, 5), (5, 9)], 9: [(1, 7), (7, 3), (3, 8), (8, 9), (9, 2)], 5: [(1, 3)], 6: [(1, 10), (10, 8)], 4: [(1, 8)], 7: [(1, 4), (4, 2)], 2: [(1, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 84340.90000000001, rotte: {3: [(1, 6)], 8: [(1, 5), (5, 9)], 9: [(1, 7), (7, 3), (3, 8), (8, 9), (9, 11), (11, 2)], 5: [(1, 3)], 6: [(1, 10), (10, 8)], 4: [(1, 8)], 7: [(1, 4), (4, 2)], 2: [(1, 2)]}, padri: [0], figli: [2], mosse: [(9, 3, 9, 11, 6)]
2 -> costo: 82691.6, rotte: {3: [(1, 6)], 8: [(1, 5), (5, 9)], 9: [(1, 7), (7, 3), (3, 8), (8, 9), (9, 11), (11, 2)], 5: [(1, 3)], 6: [(1, 8), (8, 10)], 4: [(1, 8)], 7: [(1, 4), (4, 2)], 2: [(1, 2)]}, padri: [1], figli: [3, 5], mosse: [(6, 6, 10, 8)]
3 -> costo: 80546.7, rotte: {3: [(1, 6)], 8: [(1, 5), (5, 9)], 9: [(1, 7), (7, 8), (8, 9), (9, 11), (11, 3), (3, 2)], 5: [(1, 3)], 6: [(1, 8), (8, 10)], 4: [(1, 8)], 7: [(1, 4), (4, 2)], 2: [(1, 2)]}, padri: [2], figli: [4, 4, 4, 6, 6, 6], mosse: [(9, 9, 11, 3, 3)]
4 -> costo: 80435.0, rotte: {3: [(1, 6)], 8: [(1, 5), (5, 9)], 9: [(1, 7), (7, 8), (8, 9), (9, 11), (11, 3), (3, 2)], 5: [(1, 3)], 6: [(1, 8), (8, 10)], 4: [(1, 8)], 7: [(1, 2), (2, 4)], 2: [(1, 2)]}, padri: [3, 3, 3, 5], figli: [], mosse: [(7, 7, 4, 2), (7, 7, 1, 2, 5), (7, 7, 2, 4, 15), (9, 9, 11, 3, 3)]
5 -> costo: 82579.90000000001, rotte: {3: [(1, 6)], 8: [(1, 5), (5, 9)], 9: [(1, 7), (7, 3), (3, 8), (8, 9), (9, 11), (11, 2)], 5: [(1, 3)], 6: [(1, 8), (8, 10)], 4: [(1, 8)], 7: [(1, 2), (2, 4)], 2: [(1, 2)]}, padri: [2], figli: [4, 6], mosse: [(7, 7, 4, 2)]
6 -> costo: 81177.5, rotte: {3: [(1, 6)], 8: [(1, 5), (5, 9)], 9: [(1, 2), (2, 7), (7, 3), (3, 8), (8, 9), (9, 11)], 5: [(1, 3)], 6: [(1, 8), (8, 10)], 4: [(1, 8)], 7: [(1, 2), (2, 4)], 2: [(1, 2)]}, padri: [5], figli: [7], mosse: [(9, 9, 1, 2, 5)]
7 -> costo: 79258.8, rotte: {3: [(1, 6)], 8: [(1, 5), (5, 9)], 9: [(1, 2), (2, 3), (3, 7), (7, 8), (8, 9), (9, 11)], 5: [(1, 3)], 6: [(1, 8), (8, 10)], 4: [(1, 8)], 7: [(1, 2), (2, 4)], 2: [(1, 2)]}, padri: [6], figli: [], mosse: [(9, 9, 3, 7, 1)]
bestSolutionIndice: 7
7 -> costo: 79258.8, rotte: {3: [(1, 6)], 8: [(1, 5), (5, 9)], 9: [(1, 2), (2, 3), (3, 7), (7, 8), (8, 9), (9, 11)], 5: [(1, 3)], 6: [(1, 8), (8, 10)], 4: [(1, 8)], 7: [(1, 2), (2, 4)], 2: [(1, 2)]}, padri: [6], figli: [], mosse: [(9, 9, 3, 7, 1)]
trasportoPalletDiGamma: {3: [(6, 4)], 8: [(5, 8), (9, 12)], 9: [(2, 5), (3, 3), (7, 1), (8, 2), (9, 2), (11, 6)], 5: [(3, 15)], 6: [(8, 6), (10, 9)], 4: [(8, 10)], 7: [(2, 5), (4, 15)], 2: [(2, 10)]}
itMosseLS: 10, itMosseTS: 5
time elapsed: 153.40s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 91415.5, rotte: {9: [(1, 11), (11, 4)], 4: [(1, 3)], 7: [(1, 7), (7, 2)], 8: [(1, 6), (6, 3), (3, 8)], 2: [(1, 5), (5, 8)], 5: [(1, 10), (10, 4)], 3: [(1, 8)], 6: [(1, 9), (9, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 88463.10000000002, rotte: {9: [(1, 11), (11, 4)], 4: [(1, 3)], 7: [(1, 7), (7, 2)], 8: [(1, 6), (6, 3), (3, 8)], 2: [(1, 5), (5, 8)], 5: [(1, 10), (10, 4)], 3: [(1, 8)], 6: [(1, 2), (2, 9)]}, padri: [0], figli: [2], mosse: [(6, 6, 1, 2, 1)]
2 -> costo: 85482.60000000002, rotte: {9: [(1, 11), (11, 4)], 4: [(1, 3)], 7: [(1, 7), (7, 2)], 8: [(1, 6), (6, 3), (3, 8)], 2: [(1, 5), (5, 8)], 5: [(1, 4), (4, 10)], 3: [(1, 8)], 6: [(1, 2), (2, 9)]}, padri: [1], figli: [3], mosse: [(5, 5, 10, 4)]
3 -> costo: 82925.80000000002, rotte: {9: [(1, 11), (11, 4)], 4: [(1, 3)], 7: [(1, 2)], 8: [(1, 6), (6, 7), (7, 3), (3, 8)], 2: [(1, 5), (5, 8)], 5: [(1, 4), (4, 10)], 3: [(1, 8)], 6: [(1, 2), (2, 9)]}, padri: [2], figli: [4], mosse: [(8, 7, 6, 7, 1)]
4 -> costo: 80654.60000000002, rotte: {9: [(1, 4), (4, 11)], 4: [(1, 3)], 7: [(1, 2)], 8: [(1, 6), (6, 7), (7, 3), (3, 8)], 2: [(1, 5), (5, 8)], 5: [(1, 4), (4, 10)], 3: [(1, 8)], 6: [(1, 2), (2, 9)]}, padri: [3], figli: [5, 8], mosse: [(9, 9, 11, 4)]
5 -> costo: 80045.40000000001, rotte: {9: [(1, 4), (4, 11)], 4: [(1, 3)], 7: [(1, 2)], 8: [(1, 6), (6, 8), (8, 7), (7, 3)], 2: [(1, 5), (5, 8)], 5: [(1, 4), (4, 10)], 3: [(1, 8)], 6: [(1, 2), (2, 9)]}, padri: [4], figli: [6], mosse: [(8, 8, 6, 8, 6)]
6 -> costo: 79995.50000000001, rotte: {9: [(1, 4), (4, 11)], 4: [(1, 3)], 7: [(1, 2), (2, 4)], 8: [(1, 6), (6, 8), (8, 7), (7, 3)], 2: [(1, 5), (5, 8)], 5: [(1, 10)], 3: [(1, 8)], 6: [(1, 2), (2, 9)]}, padri: [5], figli: [7], mosse: [(7, 5, 2, 4, 1)]
7 -> costo: 79351.3, rotte: {9: [(1, 4), (4, 11)], 4: [(1, 3)], 7: [(1, 2), (2, 4)], 8: [(1, 6), (6, 8), (8, 7), (7, 3)], 2: [(1, 5), (5, 8)], 5: [(1, 2), (2, 10)], 3: [(1, 8)], 6: [(1, 9)]}, padri: [6], figli: [], mosse: [(5, 6, 1, 2, 1)]
8 -> costo: 80470.40000000001, rotte: {9: [(1, 4), (4, 11)], 4: [(1, 3)], 7: [(1, 2)], 8: [(1, 6), (6, 7), (7, 8), (8, 3)], 2: [(1, 5), (5, 8)], 5: [(1, 4), (4, 10)], 3: [(1, 8)], 6: [(1, 2), (2, 9)]}, padri: [4], figli: [9], mosse: [(8, 8, 3, 8)]
9 -> costo: 80042.70000000001, rotte: {9: [(1, 4), (4, 11)], 4: [(1, 3)], 7: [(1, 2)], 8: [(1, 7), (7, 6), (6, 8), (8, 3)], 2: [(1, 5), (5, 8)], 5: [(1, 4), (4, 10)], 3: [(1, 8)], 6: [(1, 2), (2, 9)]}, padri: [8], figli: [10], mosse: [(8, 8, 7, 6, 4)]
10 -> costo: 79288.10000000002, rotte: {9: [(1, 4), (4, 11)], 4: [(1, 3)], 7: [(1, 2)], 8: [(1, 3), (3, 7), (7, 6), (6, 8)], 2: [(1, 5), (5, 8)], 5: [(1, 4), (4, 10)], 3: [(1, 8)], 6: [(1, 2), (2, 9)]}, padri: [9], figli: [11], mosse: [(8, 8, 1, 3, 8)]
11 -> costo: 79238.20000000001, rotte: {9: [(1, 4), (4, 11)], 4: [(1, 3)], 7: [(1, 2), (2, 4)], 8: [(1, 3), (3, 7), (7, 6), (6, 8)], 2: [(1, 5), (5, 8)], 5: [(1, 10)], 3: [(1, 8)], 6: [(1, 2), (2, 9)]}, padri: [10], figli: [12], mosse: [(7, 5, 2, 4, 1)]
12 -> costo: 78594.0, rotte: {9: [(1, 4), (4, 11)], 4: [(1, 3)], 7: [(1, 2), (2, 4)], 8: [(1, 3), (3, 7), (7, 6), (6, 8)], 2: [(1, 5), (5, 8)], 5: [(1, 2), (2, 10)], 3: [(1, 8)], 6: [(1, 9)]}, padri: [11], figli: [], mosse: [(5, 6, 1, 2, 1)]
bestSolutionIndice: 12
12 -> costo: 78594.0, rotte: {9: [(1, 4), (4, 11)], 4: [(1, 3)], 7: [(1, 2), (2, 4)], 8: [(1, 3), (3, 7), (7, 6), (6, 8)], 2: [(1, 5), (5, 8)], 5: [(1, 2), (2, 10)], 3: [(1, 8)], 6: [(1, 9)]}, padri: [11], figli: [], mosse: [(5, 6, 1, 2, 1)]
trasportoPalletDiGamma: {9: [(4, 14), (11, 6)], 4: [(3, 10)], 7: [(2, 19), (4, 1)], 8: [(3, 8), (7, 1), (6, 4), (8, 6)], 2: [(5, 8), (8, 2)], 5: [(2, 1), (10, 9)], 3: [(8, 10)], 6: [(9, 14)]}
itMosseLS: 12, itMosseTS: 5
time elapsed: 158.68s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 91872.1, rotte: {4: [(1, 3)], 9: [(1, 10), (10, 2)], 6: [(1, 7), (7, 8)], 3: [(1, 9)], 2: [(1, 6), (6, 3)], 8: [(1, 4), (4, 9), (9, 3)], 7: [(1, 11), (11, 2), (2, 3)], 5: [(1, 5), (5, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 88520.70000000001, rotte: {4: [(1, 3)], 9: [(1, 10), (10, 2)], 6: [(1, 7), (7, 8)], 3: [(1, 9)], 2: [(1, 6), (6, 3)], 8: [(1, 4), (4, 9), (9, 3)], 7: [(1, 2), (2, 3), (3, 11)], 5: [(1, 5), (5, 8)]}, padri: [0], figli: [2], mosse: [(7, 7, 3, 11, 6)]
2 -> costo: 85197.1, rotte: {4: [(1, 3)], 9: [(1, 10), (10, 2)], 6: [(1, 7), (7, 8)], 3: [(1, 9)], 2: [(1, 6), (6, 3)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 2), (2, 3), (3, 11)], 5: [(1, 5), (5, 8)]}, padri: [1], figli: [3, 3, 3], mosse: [(8, 8, 9, 3)]
3 -> costo: 82105.50000000001, rotte: {4: [(1, 3)], 9: [(1, 2), (2, 10)], 6: [(1, 7), (7, 8)], 3: [(1, 9)], 2: [(1, 6), (6, 3)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 2), (2, 3), (3, 11)], 5: [(1, 5), (5, 8)]}, padri: [2, 2, 2], figli: [4, 4, 4], mosse: [(9, 9, 1, 2, 11), (9, 9, 10, 2), (9, 9, 2, 10, 9)]
4 -> costo: 81515.60000000002, rotte: {4: [(1, 3)], 9: [(1, 2), (2, 10)], 6: [(1, 7), (7, 8)], 3: [(1, 9)], 2: [(1, 3), (3, 6)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 2), (2, 3), (3, 11)], 5: [(1, 5), (5, 8)]}, padri: [3, 3, 3], figli: [], mosse: [(2, 2, 6, 3), (2, 2, 1, 3, 6), (2, 2, 3, 6, 4)]
bestSolutionIndice: 4
4 -> costo: 81515.60000000002, rotte: {4: [(1, 3)], 9: [(1, 2), (2, 10)], 6: [(1, 7), (7, 8)], 3: [(1, 9)], 2: [(1, 3), (3, 6)], 8: [(1, 4), (4, 3), (3, 9)], 7: [(1, 2), (2, 3), (3, 11)], 5: [(1, 5), (5, 8)]}, padri: [3, 3, 3], figli: [], mosse: [(2, 2, 6, 3), (2, 2, 1, 3, 6), (2, 2, 3, 6, 4)]
trasportoPalletDiGamma: {4: [(3, 10)], 9: [(2, 11), (10, 9)], 6: [(7, 1), (8, 14)], 3: [(9, 10)], 2: [(3, 6), (6, 4)], 8: [(4, 15), (3, 1), (9, 4)], 7: [(2, 9), (3, 1), (11, 6)], 5: [(5, 8), (8, 4)]}
itMosseLS: 8, itMosseTS: 5
time elapsed: 114.58s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 84008.7, rotte: {3: [(1, 3)], 8: [(1, 10), (10, 9)], 9: [(1, 7), (7, 5), (5, 9), (9, 3)], 4: [(1, 11), (11, 3)], 5: [(1, 6), (6, 8), (8, 3)], 6: [(1, 4)], 2: [(1, 8)], 7: [(1, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 81661.20000000001, rotte: {3: [(1, 3)], 8: [(1, 10), (10, 9)], 9: [(1, 7), (7, 5), (5, 9), (9, 11), (11, 3)], 4: [(1, 3)], 5: [(1, 6), (6, 8), (8, 3)], 6: [(1, 4)], 2: [(1, 8)], 7: [(1, 2)]}, padri: [0], figli: [2], mosse: [(9, 4, 9, 11, 6)]
2 -> costo: 81532.1, rotte: {3: [(1, 3)], 8: [(1, 9), (9, 10)], 9: [(1, 7), (7, 5), (5, 9), (9, 11), (11, 3)], 4: [(1, 3)], 5: [(1, 6), (6, 8), (8, 3)], 6: [(1, 4)], 2: [(1, 8)], 7: [(1, 2)]}, padri: [1], figli: [3, 6], mosse: [(8, 8, 10, 9)]
3 -> costo: 80763.3, rotte: {3: [(1, 3)], 8: [(1, 9), (9, 10)], 9: [(1, 3), (3, 7), (7, 5), (5, 9), (9, 11)], 4: [(1, 3)], 5: [(1, 6), (6, 8), (8, 3)], 6: [(1, 4)], 2: [(1, 8)], 7: [(1, 2)]}, padri: [2], figli: [4], mosse: [(9, 9, 1, 3, 1)]
4 -> costo: 80421.8, rotte: {3: [(1, 3)], 8: [(1, 9), (9, 10)], 9: [(1, 3), (3, 7), (7, 5), (5, 9), (9, 11)], 4: [(1, 3)], 5: [(1, 3), (3, 6), (6, 8)], 6: [(1, 4)], 2: [(1, 8)], 7: [(1, 2)]}, padri: [3], figli: [5, 5, 5], mosse: [(5, 5, 1, 3, 3)]
5 -> costo: 80173.5, rotte: {3: [(1, 3)], 8: [(1, 9), (9, 10)], 9: [(1, 3), (3, 7), (7, 5), (5, 9), (9, 11)], 4: [(1, 3)], 5: [(1, 3), (3, 8), (8, 6)], 6: [(1, 4)], 2: [(1, 8)], 7: [(1, 2)]}, padri: [4, 4, 4, 7], figli: [], mosse: [(5, 5, 6, 8), (5, 5, 3, 8, 8), (5, 5, 8, 6, 4), (9, 9, 1, 3, 1)]
6 -> costo: 81190.6, rotte: {3: [(1, 3)], 8: [(1, 9), (9, 10)], 9: [(1, 7), (7, 5), (5, 9), (9, 11), (11, 3)], 4: [(1, 3)], 5: [(1, 3), (3, 6), (6, 8)], 6: [(1, 4)], 2: [(1, 8)], 7: [(1, 2)]}, padri: [2], figli: [7], mosse: [(5, 5, 1, 3, 3)]
7 -> costo: 80942.3, rotte: {3: [(1, 3)], 8: [(1, 9), (9, 10)], 9: [(1, 7), (7, 5), (5, 9), (9, 11), (11, 3)], 4: [(1, 3)], 5: [(1, 3), (3, 8), (8, 6)], 6: [(1, 4)], 2: [(1, 8)], 7: [(1, 2)]}, padri: [6], figli: [5], mosse: [(5, 5, 6, 8)]
bestSolutionIndice: 5
5 -> costo: 80173.5, rotte: {3: [(1, 3)], 8: [(1, 9), (9, 10)], 9: [(1, 3), (3, 7), (7, 5), (5, 9), (9, 11)], 4: [(1, 3)], 5: [(1, 3), (3, 8), (8, 6)], 6: [(1, 4)], 2: [(1, 8)], 7: [(1, 2)]}, padri: [4, 4, 4, 7], figli: [], mosse: [(5, 5, 6, 8), (5, 5, 3, 8, 8), (5, 5, 8, 6, 4), (9, 9, 1, 3, 1)]
trasportoPalletDiGamma: {3: [(3, 10)], 8: [(9, 11), (10, 9)], 9: [(3, 1), (7, 1), (5, 8), (9, 3), (11, 6)], 4: [(3, 4)], 5: [(3, 3), (8, 8), (6, 4)], 6: [(4, 15)], 2: [(8, 10)], 7: [(2, 20)]}
itMosseLS: 10, itMosseTS: 5
time elapsed: 172.80s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89029.69999999998, rotte: {8: [(1, 8), (8, 5)], 2: [(1, 7), (7, 2)], 7: [(1, 6), (6, 3), (3, 2)], 6: [(1, 11), (11, 4)], 4: [(1, 3)], 5: [(1, 10), (10, 5)], 3: [(1, 4)], 9: [(1, 9), (9, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86077.3, rotte: {8: [(1, 8), (8, 5)], 2: [(1, 7), (7, 2)], 7: [(1, 6), (6, 3), (3, 2)], 6: [(1, 11), (11, 4)], 4: [(1, 3)], 5: [(1, 10), (10, 5)], 3: [(1, 4)], 9: [(1, 2), (2, 9)]}, padri: [0], figli: [2], mosse: [(9, 9, 1, 2, 6)]
2 -> costo: 83747.8, rotte: {8: [(1, 8), (8, 5)], 2: [(1, 7), (7, 2)], 7: [(1, 6), (6, 3), (3, 2)], 6: [(1, 11), (11, 4)], 4: [(1, 3)], 5: [(1, 5), (5, 10)], 3: [(1, 4)], 9: [(1, 2), (2, 9)]}, padri: [1], figli: [3], mosse: [(5, 5, 10, 5)]
3 -> costo: 81191.00000000001, rotte: {8: [(1, 8), (8, 5)], 2: [(1, 2)], 7: [(1, 6), (6, 7), (7, 3), (3, 2)], 6: [(1, 11), (11, 4)], 4: [(1, 3)], 5: [(1, 5), (5, 10)], 3: [(1, 4)], 9: [(1, 2), (2, 9)]}, padri: [2], figli: [4, 7], mosse: [(7, 2, 6, 7, 1)]
4 -> costo: 78919.8, rotte: {8: [(1, 8), (8, 5)], 2: [(1, 2)], 7: [(1, 6), (6, 7), (7, 3), (3, 2)], 6: [(1, 4), (4, 11)], 4: [(1, 3)], 5: [(1, 5), (5, 10)], 3: [(1, 4)], 9: [(1, 2), (2, 9)]}, padri: [3], figli: [5, 5, 5], mosse: [(6, 6, 11, 4)]
5 -> costo: 78239.6, rotte: {8: [(1, 5), (5, 8)], 2: [(1, 2)], 7: [(1, 6), (6, 7), (7, 3), (3, 2)], 6: [(1, 4), (4, 11)], 4: [(1, 3)], 5: [(1, 5), (5, 10)], 3: [(1, 4)], 9: [(1, 2), (2, 9)]}, padri: [4, 4, 4, 7], figli: [6], mosse: [(8, 8, 1, 5, 2), (8, 8, 8, 5), (8, 8, 5, 8, 18), (6, 6, 1, 4, 5)]
6 -> costo: 78170.1, rotte: {8: [(1, 8)], 2: [(1, 2)], 7: [(1, 5), (5, 6), (6, 7), (7, 3), (3, 2)], 6: [(1, 4), (4, 11)], 4: [(1, 3)], 5: [(1, 5), (5, 10)], 3: [(1, 4)], 9: [(1, 2), (2, 9)]}, padri: [5], figli: [], mosse: [(7, 8, 1, 5, 2)]
7 -> costo: 80510.8, rotte: {8: [(1, 5), (5, 8)], 2: [(1, 2)], 7: [(1, 6), (6, 7), (7, 3), (3, 2)], 6: [(1, 11), (11, 4)], 4: [(1, 3)], 5: [(1, 5), (5, 10)], 3: [(1, 4)], 9: [(1, 2), (2, 9)]}, padri: [3], figli: [5], mosse: [(8, 8, 8, 5)]
bestSolutionIndice: 6
6 -> costo: 78170.1, rotte: {8: [(1, 8)], 2: [(1, 2)], 7: [(1, 5), (5, 6), (6, 7), (7, 3), (3, 2)], 6: [(1, 4), (4, 11)], 4: [(1, 3)], 5: [(1, 5), (5, 10)], 3: [(1, 4)], 9: [(1, 2), (2, 9)]}, padri: [5], figli: [], mosse: [(7, 8, 1, 5, 2)]
trasportoPalletDiGamma: {8: [(8, 18)], 2: [(2, 9)], 7: [(5, 2), (6, 4), (7, 1), (3, 8), (2, 5)], 6: [(4, 5), (11, 6)], 4: [(3, 10)], 5: [(5, 6), (10, 9)], 3: [(4, 10)], 9: [(2, 6), (9, 14)]}
itMosseLS: 10, itMosseTS: 5
time elapsed: 130.30s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 86674.9, rotte: {9: [(1, 9), (9, 7), (7, 2)], 2: [(1, 3)], 4: [(1, 8)], 8: [(1, 10), (10, 2)], 7: [(1, 11), (11, 3), (3, 2)], 5: [(1, 6), (6, 8)], 6: [(1, 4)], 3: [(1, 5), (5, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85612.3, rotte: {9: [(1, 2), (2, 9), (9, 7)], 2: [(1, 3)], 4: [(1, 8)], 8: [(1, 10), (10, 2)], 7: [(1, 11), (11, 3), (3, 2)], 5: [(1, 6), (6, 8)], 6: [(1, 4)], 3: [(1, 5), (5, 2)]}, padri: [0], figli: [2], mosse: [(9, 9, 1, 2, 5)]
2 -> costo: 82520.7, rotte: {9: [(1, 2), (2, 9), (9, 7)], 2: [(1, 3)], 4: [(1, 8)], 8: [(1, 2), (2, 10)], 7: [(1, 11), (11, 3), (3, 2)], 5: [(1, 6), (6, 8)], 6: [(1, 4)], 3: [(1, 5), (5, 2)]}, padri: [1], figli: [3], mosse: [(8, 8, 10, 2)]
3 -> costo: 80633.3, rotte: {9: [(1, 2), (2, 7), (7, 9)], 2: [(1, 3)], 4: [(1, 8)], 8: [(1, 2), (2, 10)], 7: [(1, 11), (11, 3), (3, 2)], 5: [(1, 6), (6, 8)], 6: [(1, 4)], 3: [(1, 5), (5, 2)]}, padri: [2], figli: [4], mosse: [(9, 9, 2, 7, 1)]
4 -> costo: 79860.20000000001, rotte: {9: [(1, 2), (2, 7), (7, 9)], 2: [(1, 3)], 4: [(1, 8)], 8: [(1, 2), (2, 10)], 7: [(1, 11), (11, 3), (3, 2)], 5: [(1, 6), (6, 8)], 6: [(1, 4)], 3: [(1, 2), (2, 5)]}, padri: [3], figli: [5, 6], mosse: [(3, 3, 5, 2)]
5 -> costo: 78854.4, rotte: {9: [(1, 2), (2, 7), (7, 9)], 2: [(1, 3)], 4: [(1, 8)], 8: [(1, 2), (2, 10)], 7: [(1, 3), (3, 2), (2, 11)], 5: [(1, 6), (6, 8)], 6: [(1, 4)], 3: [(1, 2), (2, 5)]}, padri: [4, 6], figli: [], mosse: [(7, 7, 2, 11, 6), (7, 7, 1, 3, 8)]
6 -> costo: 79452.8, rotte: {9: [(1, 2), (2, 7), (7, 9)], 2: [(1, 3)], 4: [(1, 8)], 8: [(1, 2), (2, 10)], 7: [(1, 2), (2, 11), (11, 3)], 5: [(1, 6), (6, 8)], 6: [(1, 4)], 3: [(1, 2), (2, 5)]}, padri: [4], figli: [7, 7, 5], mosse: [(7, 7, 1, 2, 2)]
7 -> costo: 77477.9, rotte: {9: [(1, 2), (2, 7), (7, 9)], 2: [(1, 3)], 4: [(1, 8)], 8: [(1, 2), (2, 10)], 7: [(1, 2), (2, 3), (3, 11)], 5: [(1, 6), (6, 8)], 6: [(1, 4)], 3: [(1, 2), (2, 5)]}, padri: [6, 6], figli: [], mosse: [(7, 7, 2, 3, 8), (7, 7, 3, 11, 6)]
bestSolutionIndice: 7
7 -> costo: 77477.9, rotte: {9: [(1, 2), (2, 7), (7, 9)], 2: [(1, 3)], 4: [(1, 8)], 8: [(1, 2), (2, 10)], 7: [(1, 2), (2, 3), (3, 11)], 5: [(1, 6), (6, 8)], 6: [(1, 4)], 3: [(1, 2), (2, 5)]}, padri: [6, 6], figli: [], mosse: [(7, 7, 2, 3, 8), (7, 7, 3, 11, 6)]
trasportoPalletDiGamma: {9: [(2, 5), (7, 1), (9, 14)], 2: [(3, 10)], 4: [(8, 10)], 8: [(2, 11), (10, 9)], 7: [(2, 2), (3, 8), (11, 6)], 5: [(6, 4), (8, 8)], 6: [(4, 15)], 3: [(2, 2), (5, 8)]}
itMosseLS: 9, itMosseTS: 5
time elapsed: 142.11s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 83436.6, rotte: {5: [(1, 8)], 9: [(1, 5), (5, 9)], 7: [(1, 2)], 6: [(1, 3)], 3: [(1, 6), (6, 8), (8, 7), (7, 9)], 8: [(1, 10), (10, 3), (3, 4)], 4: [(1, 4)], 2: [(1, 11), (11, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 79045.59999999999, rotte: {5: [(1, 8)], 9: [(1, 5), (5, 9)], 7: [(1, 2)], 6: [(1, 3)], 3: [(1, 6), (6, 8), (8, 7), (7, 9)], 8: [(1, 10), (10, 11), (11, 3), (3, 4)], 4: [(1, 4)], 2: [(1, 4)]}, padri: [0], figli: [2], mosse: [(8, 2, 10, 11, 6)]
2 -> costo: 78817.09999999999, rotte: {5: [(1, 8)], 9: [(1, 5), (5, 9)], 7: [(1, 2)], 6: [(1, 3)], 3: [(1, 6), (6, 8), (8, 7), (7, 9)], 8: [(1, 4), (4, 10), (10, 11), (11, 3)], 4: [(1, 4)], 2: [(1, 4)]}, padri: [1], figli: [3, 5], mosse: [(8, 8, 1, 4, 1)]
3 -> costo: 76842.2, rotte: {5: [(1, 8)], 9: [(1, 5), (5, 9)], 7: [(1, 2)], 6: [(1, 3)], 3: [(1, 6), (6, 8), (8, 7), (7, 9)], 8: [(1, 4), (4, 3), (3, 10), (10, 11)], 4: [(1, 4)], 2: [(1, 4)]}, padri: [2], figli: [4, 4, 4], mosse: [(8, 8, 4, 3, 3)]
4 -> costo: 76091.9, rotte: {5: [(1, 8)], 9: [(1, 5), (5, 9)], 7: [(1, 2)], 6: [(1, 3)], 3: [(1, 6), (6, 8), (8, 7), (7, 9)], 8: [(1, 4), (4, 3), (3, 11), (11, 10)], 4: [(1, 4)], 2: [(1, 4)]}, padri: [3, 3, 3], figli: [], mosse: [(8, 8, 10, 11), (8, 8, 3, 11, 6), (8, 8, 11, 10, 9)]
5 -> costo: 78699.59999999999, rotte: {5: [(1, 8)], 9: [(1, 5), (5, 9)], 7: [(1, 2)], 6: [(1, 3)], 3: [(1, 6), (6, 8), (8, 7), (7, 9)], 8: [(1, 3), (3, 4), (4, 10), (10, 11)], 4: [(1, 4)], 2: [(1, 4)]}, padri: [2], figli: [6, 6], mosse: [(8, 8, 1, 3, 3)]
6 -> costo: 77949.29999999999, rotte: {5: [(1, 8)], 9: [(1, 5), (5, 9)], 7: [(1, 2)], 6: [(1, 3)], 3: [(1, 6), (6, 8), (8, 7), (7, 9)], 8: [(1, 3), (3, 4), (4, 11), (11, 10)], 4: [(1, 4)], 2: [(1, 4)]}, padri: [5, 5], figli: [], mosse: [(8, 8, 10, 11), (8, 8, 4, 11, 6)]
bestSolutionIndice: 4
4 -> costo: 76091.9, rotte: {5: [(1, 8)], 9: [(1, 5), (5, 9)], 7: [(1, 2)], 6: [(1, 3)], 3: [(1, 6), (6, 8), (8, 7), (7, 9)], 8: [(1, 4), (4, 3), (3, 11), (11, 10)], 4: [(1, 4)], 2: [(1, 4)]}, padri: [3, 3, 3], figli: [], mosse: [(8, 8, 10, 11), (8, 8, 3, 11, 6), (8, 8, 11, 10, 9)]
trasportoPalletDiGamma: {5: [(8, 15)], 9: [(5, 8), (9, 12)], 7: [(2, 20)], 6: [(3, 15)], 3: [(6, 4), (8, 3), (7, 1), (9, 2)], 8: [(4, 1), (3, 3), (11, 6), (10, 9)], 4: [(4, 10)], 2: [(4, 4)]}
itMosseLS: 9, itMosseTS: 5
time elapsed: 152.87s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88862.0, rotte: {6: [(1, 11), (11, 7), (7, 8), (8, 2)], 9: [(1, 6), (6, 8)], 3: [(1, 3)], 8: [(1, 9), (9, 3)], 5: [(1, 10), (10, 2)], 4: [(1, 2)], 7: [(1, 5), (5, 4), (4, 3)], 2: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86380.0, rotte: {6: [(1, 11), (11, 7), (7, 8), (8, 2)], 9: [(1, 6), (6, 8)], 3: [(1, 3)], 8: [(1, 3), (3, 9)], 5: [(1, 10), (10, 2)], 4: [(1, 2)], 7: [(1, 5), (5, 4), (4, 3)], 2: [(1, 4)]}, padri: [0], figli: [2], mosse: [(8, 8, 1, 3, 6)]
2 -> costo: 83288.4, rotte: {6: [(1, 11), (11, 7), (7, 8), (8, 2)], 9: [(1, 6), (6, 8)], 3: [(1, 3)], 8: [(1, 3), (3, 9)], 5: [(1, 2), (2, 10)], 4: [(1, 2)], 7: [(1, 5), (5, 4), (4, 3)], 2: [(1, 4)]}, padri: [1], figli: [3], mosse: [(5, 5, 10, 2)]
3 -> costo: 81060.9, rotte: {6: [(1, 2), (2, 11), (11, 7), (7, 8)], 9: [(1, 6), (6, 8)], 3: [(1, 3)], 8: [(1, 3), (3, 9)], 5: [(1, 2), (2, 10)], 4: [(1, 2)], 7: [(1, 5), (5, 4), (4, 3)], 2: [(1, 4)]}, padri: [2], figli: [4], mosse: [(6, 6, 1, 2, 4)]
4 -> costo: 80368.4, rotte: {6: [(1, 2), (2, 11), (11, 7), (7, 8)], 9: [(1, 6), (6, 8)], 3: [(1, 3)], 8: [(1, 3), (3, 9)], 5: [(1, 2), (2, 10)], 4: [(1, 2)], 7: [(1, 5), (5, 3), (3, 4)], 2: [(1, 4)]}, padri: [3], figli: [5], mosse: [(7, 7, 4, 3)]
5 -> costo: 80011.0, rotte: {6: [(1, 2), (2, 7), (7, 8), (8, 11)], 9: [(1, 6), (6, 8)], 3: [(1, 3)], 8: [(1, 3), (3, 9)], 5: [(1, 2), (2, 10)], 4: [(1, 2)], 7: [(1, 5), (5, 3), (3, 4)], 2: [(1, 4)]}, padri: [4], figli: [6, 8, 9], mosse: [(6, 6, 8, 11, 6)]
6 -> costo: 79160.09999999998, rotte: {6: [(1, 7), (7, 8), (8, 11)], 9: [(1, 6), (6, 8)], 3: [(1, 3)], 8: [(1, 3), (3, 9)], 5: [(1, 2), (2, 10)], 4: [(1, 2)], 7: [(1, 5), (5, 3), (3, 2), (2, 4)], 2: [(1, 4)]}, padri: [5, 8], figli: [7], mosse: [(7, 6, 3, 2, 4), (7, 7, 3, 2, 4)]
7 -> costo: 79035.79999999999, rotte: {6: [(1, 8), (8, 11)], 9: [(1, 6), (6, 8)], 3: [(1, 3)], 8: [(1, 3), (3, 9)], 5: [(1, 2), (2, 10)], 4: [(1, 2)], 7: [(1, 5), (5, 7), (7, 3), (3, 2), (2, 4)], 2: [(1, 4)]}, padri: [6], figli: [], mosse: [(7, 6, 5, 7, 1)]
8 -> costo: 79733.09999999999, rotte: {6: [(1, 7), (7, 8), (8, 11)], 9: [(1, 6), (6, 8)], 3: [(1, 3)], 8: [(1, 3), (3, 9)], 5: [(1, 2), (2, 10)], 4: [(1, 2)], 7: [(1, 5), (5, 2), (2, 3), (3, 4)], 2: [(1, 4)]}, padri: [5], figli: [6, 9], mosse: [(7, 6, 5, 2, 4)]
9 -> costo: 79358.5, rotte: {6: [(1, 7), (7, 8), (8, 11)], 9: [(1, 6), (6, 8)], 3: [(1, 3)], 8: [(1, 3), (3, 9)], 5: [(1, 2), (2, 10)], 4: [(1, 2)], 7: [(1, 2), (2, 3), (3, 4), (4, 5)], 2: [(1, 4)]}, padri: [8], figli: [10], mosse: [(7, 7, 4, 5, 8)]
10 -> costo: 79048.29999999999, rotte: {6: [(1, 7), (7, 8), (8, 11)], 9: [(1, 6), (6, 8)], 3: [(1, 3)], 8: [(1, 3), (3, 9)], 5: [(1, 2), (2, 10)], 4: [(1, 2)], 7: [(1, 2), (2, 4), (4, 3), (3, 5)], 2: [(1, 4)]}, padri: [9], figli: [11, 13], mosse: [(7, 7, 4, 3, 2)]
11 -> costo: 78568.0, rotte: {6: [(1, 7), (7, 8), (8, 11)], 9: [(1, 6), (6, 8)], 3: [(1, 3)], 8: [(1, 3), (3, 9)], 5: [(1, 2), (2, 10)], 4: [(1, 2)], 7: [(1, 4), (4, 2), (2, 3), (3, 5)], 2: [(1, 4)]}, padri: [10], figli: [12], mosse: [(7, 7, 4, 2, 4)]
12 -> costo: 78458.90000000001, rotte: {6: [(1, 8), (8, 11)], 9: [(1, 6), (6, 8)], 3: [(1, 3)], 8: [(1, 3), (3, 9)], 5: [(1, 2), (2, 10)], 4: [(1, 2)], 7: [(1, 4), (4, 2), (2, 3), (3, 7), (7, 5)], 2: [(1, 4)]}, padri: [11, 13], figli: [], mosse: [(7, 6, 3, 7, 1), (7, 7, 4, 2, 4)]
13 -> costo: 78939.2, rotte: {6: [(1, 8), (8, 11)], 9: [(1, 6), (6, 8)], 3: [(1, 3)], 8: [(1, 3), (3, 9)], 5: [(1, 2), (2, 10)], 4: [(1, 2)], 7: [(1, 2), (2, 4), (4, 3), (3, 7), (7, 5)], 2: [(1, 4)]}, padri: [10], figli: [12], mosse: [(7, 6, 3, 7, 1)]
bestSolutionIndice: 12
12 -> costo: 78458.90000000001, rotte: {6: [(1, 8), (8, 11)], 9: [(1, 6), (6, 8)], 3: [(1, 3)], 8: [(1, 3), (3, 9)], 5: [(1, 2), (2, 10)], 4: [(1, 2)], 7: [(1, 4), (4, 2), (2, 3), (3, 7), (7, 5)], 2: [(1, 4)]}, padri: [11, 13], figli: [], mosse: [(7, 6, 3, 7, 1), (7, 7, 4, 2, 4)]
trasportoPalletDiGamma: {6: [(8, 2), (11, 6)], 9: [(6, 4), (8, 16)], 3: [(3, 10)], 8: [(3, 6), (9, 14)], 5: [(2, 6), (10, 9)], 4: [(2, 10)], 7: [(4, 5), (2, 4), (3, 2), (7, 1), (5, 8)], 2: [(4, 10)]}
itMosseLS: 15, itMosseTS: 5
time elapsed: 206.49s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 86351.80000000002, rotte: {4: [(1, 9)], 6: [(1, 6), (6, 4)], 7: [(1, 2)], 5: [(1, 11), (11, 9), (9, 7)], 8: [(1, 5), (5, 3), (3, 4)], 3: [(1, 3)], 9: [(1, 10), (10, 8)], 2: [(1, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 83300.80000000002, rotte: {4: [(1, 9)], 6: [(1, 4)], 7: [(1, 2)], 5: [(1, 11), (11, 9), (9, 6), (6, 7)], 8: [(1, 5), (5, 3), (3, 4)], 3: [(1, 3)], 9: [(1, 10), (10, 8)], 2: [(1, 8)]}, padri: [0], figli: [2], mosse: [(5, 6, 9, 6, 4)]
2 -> costo: 81651.50000000001, rotte: {4: [(1, 9)], 6: [(1, 4)], 7: [(1, 2)], 5: [(1, 11), (11, 9), (9, 6), (6, 7)], 8: [(1, 5), (5, 3), (3, 4)], 3: [(1, 3)], 9: [(1, 8), (8, 10)], 2: [(1, 8)]}, padri: [1], figli: [3], mosse: [(9, 9, 10, 8)]
3 -> costo: 81092.40000000001, rotte: {4: [(1, 9)], 6: [(1, 4)], 7: [(1, 2)], 5: [(1, 11), (11, 9), (9, 6), (6, 7)], 8: [(1, 5), (5, 3)], 3: [(1, 3)], 9: [(1, 8), (8, 10)], 2: [(1, 8)]}, padri: [2], figli: [4], mosse: [(6, 8, 1, 4, 4)]
4 -> costo: 80796.00000000001, rotte: {4: [(1, 9)], 6: [(1, 4)], 7: [(1, 2)], 5: [(1, 11), (11, 9), (9, 6), (6, 7)], 8: [(1, 3), (3, 5)], 3: [(1, 3)], 9: [(1, 8), (8, 10)], 2: [(1, 8)]}, padri: [3], figli: [5], mosse: [(8, 8, 5, 3)]
5 -> costo: 80644.1, rotte: {4: [(1, 9)], 6: [(1, 4)], 7: [(1, 2)], 5: [(1, 7), (7, 11), (11, 9), (9, 6)], 8: [(1, 3), (3, 5)], 3: [(1, 3)], 9: [(1, 8), (8, 10)], 2: [(1, 8)]}, padri: [4], figli: [6], mosse: [(5, 5, 1, 7, 1)]
6 -> costo: 79393.0, rotte: {4: [(1, 9)], 6: [(1, 4)], 7: [(1, 2)], 5: [(1, 6), (6, 7), (7, 11), (11, 9)], 8: [(1, 3), (3, 5)], 3: [(1, 3)], 9: [(1, 8), (8, 10)], 2: [(1, 8)]}, padri: [5], figli: [7, 9, 10], mosse: [(5, 5, 1, 6, 4)]
7 -> costo: 79059.1, rotte: {4: [(1, 9)], 6: [(1, 4)], 7: [(1, 2)], 5: [(1, 7), (7, 11), (11, 9)], 8: [(1, 3), (3, 6), (6, 5)], 3: [(1, 3)], 9: [(1, 8), (8, 10)], 2: [(1, 8)]}, padri: [6, 9], figli: [8], mosse: [(8, 5, 3, 6, 4), (8, 8, 5, 6)]
8 -> costo: 78741.40000000001, rotte: {4: [(1, 9)], 6: [(1, 4)], 7: [(1, 2)], 5: [(1, 11), (11, 9)], 8: [(1, 3), (3, 6), (6, 5)], 3: [(1, 3)], 9: [(1, 7), (7, 8), (8, 10)], 2: [(1, 8)]}, padri: [7, 10, 10, 10], figli: [], mosse: [(9, 5, 1, 7, 1), (8, 8, 5, 6), (8, 8, 3, 6, 4), (8, 8, 6, 5, 8)]
9 -> costo: 79070.70000000001, rotte: {4: [(1, 9)], 6: [(1, 4)], 7: [(1, 2)], 5: [(1, 7), (7, 11), (11, 9)], 8: [(1, 3), (3, 5), (5, 6)], 3: [(1, 3)], 9: [(1, 8), (8, 10)], 2: [(1, 8)]}, padri: [6], figli: [7, 10], mosse: [(8, 5, 5, 6, 4)]
10 -> costo: 78753.00000000001, rotte: {4: [(1, 9)], 6: [(1, 4)], 7: [(1, 2)], 5: [(1, 11), (11, 9)], 8: [(1, 3), (3, 5), (5, 6)], 3: [(1, 3)], 9: [(1, 7), (7, 8), (8, 10)], 2: [(1, 8)]}, padri: [9], figli: [8, 8, 8], mosse: [(9, 5, 1, 7, 1)]
bestSolutionIndice: 8
8 -> costo: 78741.40000000001, rotte: {4: [(1, 9)], 6: [(1, 4)], 7: [(1, 2)], 5: [(1, 11), (11, 9)], 8: [(1, 3), (3, 6), (6, 5)], 3: [(1, 3)], 9: [(1, 7), (7, 8), (8, 10)], 2: [(1, 8)]}, padri: [7, 10, 10, 10], figli: [], mosse: [(9, 5, 1, 7, 1), (8, 8, 5, 6), (8, 8, 3, 6, 4), (8, 8, 6, 5, 8)]
trasportoPalletDiGamma: {4: [(9, 10)], 6: [(4, 15)], 7: [(2, 20)], 5: [(11, 6), (9, 4)], 8: [(3, 8), (6, 4), (5, 8)], 3: [(3, 10)], 9: [(7, 1), (8, 8), (10, 9)], 2: [(8, 10)]}
itMosseLS: 14, itMosseTS: 5
time elapsed: 171.31s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 84511.90000000001, rotte: {2: [(1, 2)], 9: [(1, 7), (7, 10), (10, 4)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 9), (9, 5)], 7: [(1, 11), (11, 2), (2, 3)], 3: [(1, 6), (6, 8), (8, 5)], 5: [(1, 3)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 81160.5, rotte: {2: [(1, 2)], 9: [(1, 7), (7, 10), (10, 4)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 9), (9, 5)], 7: [(1, 2), (2, 3), (3, 11)], 3: [(1, 6), (6, 8), (8, 5)], 5: [(1, 3)]}, padri: [0], figli: [2], mosse: [(7, 7, 3, 11, 6)]
2 -> costo: 78963.2, rotte: {2: [(1, 2)], 9: [(1, 7), (7, 10), (10, 4)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 9)], 7: [(1, 2), (2, 3), (3, 11)], 3: [(1, 6), (6, 8), (8, 5)], 5: [(1, 3)]}, padri: [1], figli: [3], mosse: [(8, 8, 9, 5)]
3 -> costo: 76900.3, rotte: {2: [(1, 2)], 9: [(1, 4), (4, 7), (7, 10)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 9)], 7: [(1, 2), (2, 3), (3, 11)], 3: [(1, 6), (6, 8), (8, 5)], 5: [(1, 3)]}, padri: [2], figli: [4], mosse: [(9, 9, 1, 4, 5)]
4 -> costo: 76837.09999999999, rotte: {2: [(1, 2)], 9: [(1, 4), (4, 7), (7, 10)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 9)], 7: [(1, 2), (2, 3), (3, 11)], 3: [(1, 6), (6, 5), (5, 8)], 5: [(1, 3)]}, padri: [3], figli: [5, 6, 7], mosse: [(3, 3, 8, 5)]
5 -> costo: 76150.59999999999, rotte: {2: [(1, 2)], 9: [(1, 4), (4, 7), (7, 10)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 9)], 7: [(1, 2), (2, 3), (3, 11)], 3: [(1, 5), (5, 6), (6, 8)], 5: [(1, 3)]}, padri: [4, 6, 6, 6], figli: [], mosse: [(3, 3, 5, 6, 4), (3, 3, 8, 6), (3, 3, 5, 6, 4), (3, 3, 6, 8, 3)]
6 -> costo: 76591.09999999999, rotte: {2: [(1, 2)], 9: [(1, 4), (4, 7), (7, 10)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 9)], 7: [(1, 2), (2, 3), (3, 11)], 3: [(1, 5), (5, 8), (8, 6)], 5: [(1, 3)]}, padri: [4], figli: [5, 5, 5], mosse: [(3, 3, 8, 6, 4)]
7 -> costo: 76823.9, rotte: {2: [(1, 2)], 9: [(1, 4), (4, 7), (7, 10)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 9)], 7: [(1, 2), (2, 3), (3, 11)], 3: [(1, 8), (8, 6), (6, 5)], 5: [(1, 3)]}, padri: [4], figli: [8], mosse: [(3, 3, 1, 8, 3)]
8 -> costo: 76333.09999999999, rotte: {2: [(1, 2)], 9: [(1, 4), (4, 7), (7, 8), (8, 10)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 9)], 7: [(1, 2), (2, 3), (3, 11)], 3: [(1, 6), (6, 5)], 5: [(1, 3)]}, padri: [7], figli: [9], mosse: [(9, 3, 7, 8, 3)]
9 -> costo: 76030.79999999999, rotte: {2: [(1, 2)], 9: [(1, 4), (4, 7), (7, 8), (8, 10)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 9)], 7: [(1, 2), (2, 3), (3, 11)], 3: [(1, 5), (5, 6)], 5: [(1, 3)]}, padri: [8], figli: [], mosse: [(3, 3, 6, 5)]
bestSolutionIndice: 9
9 -> costo: 76030.79999999999, rotte: {2: [(1, 2)], 9: [(1, 4), (4, 7), (7, 8), (8, 10)], 6: [(1, 8)], 4: [(1, 4)], 8: [(1, 5), (5, 9)], 7: [(1, 2), (2, 3), (3, 11)], 3: [(1, 5), (5, 6)], 5: [(1, 3)]}, padri: [8], figli: [], mosse: [(3, 3, 6, 5)]
trasportoPalletDiGamma: {2: [(2, 10)], 9: [(4, 5), (7, 1), (8, 3), (10, 9)], 6: [(8, 15)], 4: [(4, 10)], 8: [(5, 6), (9, 14)], 7: [(2, 10), (3, 3), (11, 6)], 3: [(5, 2), (6, 4)], 5: [(3, 15)]}
itMosseLS: 12, itMosseTS: 5
time elapsed: 148.16s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89485.8, rotte: {4: [(1, 5), (5, 6)], 2: [(1, 10), (10, 4)], 8: [(1, 8), (8, 3)], 7: [(1, 11), (11, 9), (9, 3), (3, 6)], 9: [(1, 2)], 6: [(1, 3)], 3: [(1, 9)], 5: [(1, 7), (7, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86505.3, rotte: {4: [(1, 5), (5, 6)], 2: [(1, 4), (4, 10)], 8: [(1, 8), (8, 3)], 7: [(1, 11), (11, 9), (9, 3), (3, 6)], 9: [(1, 2)], 6: [(1, 3)], 3: [(1, 9)], 5: [(1, 7), (7, 4)]}, padri: [0], figli: [2], mosse: [(2, 2, 10, 4)]
2 -> costo: 83492.79999999999, rotte: {4: [(1, 5), (5, 6)], 2: [(1, 4), (4, 10)], 8: [(1, 8), (8, 3)], 7: [(1, 11), (11, 9), (9, 3), (3, 7), (7, 6)], 9: [(1, 2)], 6: [(1, 3)], 3: [(1, 9)], 5: [(1, 4)]}, padri: [1], figli: [3], mosse: [(7, 5, 3, 7, 1)]
3 -> costo: 82531.99999999999, rotte: {4: [(1, 5), (5, 6)], 2: [(1, 4), (4, 10)], 8: [(1, 3), (3, 8)], 7: [(1, 11), (11, 9), (9, 3), (3, 7), (7, 6)], 9: [(1, 2)], 6: [(1, 3)], 3: [(1, 9)], 5: [(1, 4)]}, padri: [2], figli: [4], mosse: [(8, 8, 8, 3)]
4 -> costo: 80835.9, rotte: {4: [(1, 5), (5, 6)], 2: [(1, 4), (4, 10)], 8: [(1, 3), (3, 8)], 7: [(1, 11), (11, 3), (3, 7), (7, 6), (6, 9)], 9: [(1, 2)], 6: [(1, 3)], 3: [(1, 9)], 5: [(1, 4)]}, padri: [3], figli: [5], mosse: [(7, 7, 6, 9, 4)]
5 -> costo: 79836.0, rotte: {4: [(1, 5), (5, 6)], 2: [(1, 4), (4, 10)], 8: [(1, 8)], 7: [(1, 11), (11, 3), (3, 7), (7, 6), (6, 9)], 9: [(1, 2)], 6: [(1, 3)], 3: [(1, 9)], 5: [(1, 4)]}, padri: [4], figli: [6], mosse: [(7, 8, 1, 3, 2)]
6 -> costo: 78911.19999999998, rotte: {4: [(1, 5), (5, 6)], 2: [(1, 4), (4, 10)], 8: [(1, 8)], 7: [(1, 3), (3, 7), (7, 6), (6, 9), (9, 11)], 9: [(1, 2)], 6: [(1, 3)], 3: [(1, 9)], 5: [(1, 4)]}, padri: [5], figli: [7, 7, 7], mosse: [(7, 7, 9, 11, 6)]
7 -> costo: 78447.29999999999, rotte: {4: [(1, 5)], 2: [(1, 4), (4, 10)], 8: [(1, 8)], 7: [(1, 3), (3, 7), (7, 6), (6, 9), (9, 11)], 9: [(1, 2)], 6: [(1, 3)], 3: [(1, 9)], 5: [(1, 4)]}, padri: [6, 6, 6], figli: [8, 9], mosse: [(7, 4, 1, 6, 2), (7, 4, 3, 6, 2), (7, 4, 7, 6, 2)]
8 -> costo: 78116.69999999998, rotte: {4: [(1, 5)], 2: [(1, 10)], 8: [(1, 8)], 7: [(1, 3), (3, 7), (7, 6), (6, 9), (9, 11)], 9: [(1, 2)], 6: [(1, 3)], 3: [(1, 9)], 5: [(1, 4)]}, padri: [7, 9], figli: [], mosse: [(5, 2, 1, 4, 1), (5, 7, 1, 4, 1)]
9 -> costo: 78379.49999999999, rotte: {4: [(1, 5)], 2: [(1, 10)], 8: [(1, 8)], 7: [(1, 4), (4, 3), (3, 7), (7, 6), (6, 9), (9, 11)], 9: [(1, 2)], 6: [(1, 3)], 3: [(1, 9)], 5: [(1, 4)]}, padri: [7], figli: [8], mosse: [(7, 2, 1, 4, 1)]
bestSolutionIndice: 8
8 -> costo: 78116.69999999998, rotte: {4: [(1, 5)], 2: [(1, 10)], 8: [(1, 8)], 7: [(1, 3), (3, 7), (7, 6), (6, 9), (9, 11)], 9: [(1, 2)], 6: [(1, 3)], 3: [(1, 9)], 5: [(1, 4)]}, padri: [7, 9], figli: [], mosse: [(5, 2, 1, 4, 1), (5, 7, 1, 4, 1)]
trasportoPalletDiGamma: {4: [(5, 8)], 2: [(10, 9)], 8: [(8, 18)], 7: [(3, 3), (7, 1), (6, 4), (9, 4), (11, 6)], 9: [(2, 20)], 6: [(3, 15)], 3: [(9, 10)], 5: [(4, 15)]}
itMosseLS: 12, itMosseTS: 5
time elapsed: 163.43s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89243.5, rotte: {4: [(1, 10), (10, 2)], 2: [(1, 4)], 3: [(1, 11), (11, 8)], 5: [(1, 7), (7, 4), (4, 2), (2, 8)], 8: [(1, 3), (3, 2)], 9: [(1, 5), (5, 8)], 7: [(1, 6), (6, 2)], 6: [(1, 9), (9, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86084.1, rotte: {4: [(1, 10)], 2: [(1, 4)], 3: [(1, 11), (11, 8)], 5: [(1, 7), (7, 4), (4, 2), (2, 8)], 8: [(1, 3), (3, 2)], 9: [(1, 5), (5, 8)], 7: [(1, 6), (6, 2)], 6: [(1, 9), (9, 8)]}, padri: [0], figli: [2], mosse: [(5, 4, 1, 2, 1)]
2 -> costo: 84567.00000000001, rotte: {4: [(1, 10)], 2: [(1, 4)], 3: [(1, 11), (11, 8)], 5: [(1, 7), (7, 4), (4, 2), (2, 8)], 8: [(1, 3), (3, 2)], 9: [(1, 5), (5, 8)], 7: [(1, 6), (6, 2)], 6: [(1, 8), (8, 9)]}, padri: [1], figli: [3], mosse: [(6, 6, 9, 8)]
3 -> costo: 81664.70000000003, rotte: {4: [(1, 7), (7, 10)], 2: [(1, 4)], 3: [(1, 11), (11, 8)], 5: [(1, 4), (4, 2), (2, 8)], 8: [(1, 3), (3, 2)], 9: [(1, 5), (5, 8)], 7: [(1, 6), (6, 2)], 6: [(1, 8), (8, 9)]}, padri: [2], figli: [4], mosse: [(4, 5, 1, 7, 1)]
4 -> costo: 80590.90000000002, rotte: {4: [(1, 7), (7, 10)], 2: [(1, 4)], 3: [(1, 11), (11, 8)], 5: [(1, 4), (4, 2), (2, 8)], 8: [(1, 3), (3, 2)], 9: [(1, 5), (5, 8)], 7: [(1, 2), (2, 6)], 6: [(1, 8), (8, 9)]}, padri: [3], figli: [5], mosse: [(7, 7, 6, 2)]
5 -> costo: 78359.20000000001, rotte: {4: [(1, 7), (7, 10)], 2: [(1, 4)], 3: [(1, 11)], 5: [(1, 4), (4, 2), (2, 8)], 8: [(1, 3), (3, 2)], 9: [(1, 5), (5, 8)], 7: [(1, 2), (2, 6)], 6: [(1, 8), (8, 9)]}, padri: [4], figli: [6, 7, 8, 9, 6, 6], mosse: [(5, 3, 1, 8, 4)]
6 -> costo: 77951.8, rotte: {4: [(1, 7), (7, 10)], 2: [(1, 4)], 3: [(1, 11)], 5: [(1, 4), (4, 2), (2, 8)], 8: [(1, 2), (2, 3)], 9: [(1, 5), (5, 8)], 7: [(1, 2), (2, 6)], 6: [(1, 8), (8, 9)]}, padri: [5, 5, 5], figli: [], mosse: [(8, 8, 3, 2), (8, 8, 1, 2, 2), (8, 8, 2, 3, 18)]
7 -> costo: 77951.8, rotte: {4: [(1, 7), (7, 10)], 2: [(1, 4)], 3: [(1, 11)], 5: [(1, 4), (4, 2), (2, 8)], 8: [(1, 3)], 9: [(1, 5), (5, 8)], 7: [(1, 2), (2, 6)], 6: [(1, 8), (8, 9)]}, padri: [5], figli: [], mosse: [(5, 8, 1, 2, 2)]
8 -> costo: 77951.8, rotte: {4: [(1, 7), (7, 10)], 2: [(1, 4)], 3: [(1, 11)], 5: [(1, 4), (4, 2), (2, 8)], 8: [(1, 3)], 9: [(1, 5), (5, 8)], 7: [(1, 2), (2, 6)], 6: [(1, 8), (8, 9)]}, padri: [5], figli: [], mosse: [(5, 8, 4, 2, 2)]
9 -> costo: 77951.8, rotte: {4: [(1, 7), (7, 10)], 2: [(1, 4)], 3: [(1, 11)], 5: [(1, 4), (4, 2), (2, 8)], 8: [(1, 3)], 9: [(1, 5), (5, 8)], 7: [(1, 2), (2, 6)], 6: [(1, 8), (8, 9)]}, padri: [5], figli: [], mosse: [(5, 8, 8, 2, 2)]
bestSolutionIndice: 6
6 -> costo: 77951.8, rotte: {4: [(1, 7), (7, 10)], 2: [(1, 4)], 3: [(1, 11)], 5: [(1, 4), (4, 2), (2, 8)], 8: [(1, 2), (2, 3)], 9: [(1, 5), (5, 8)], 7: [(1, 2), (2, 6)], 6: [(1, 8), (8, 9)]}, padri: [5, 5, 5], figli: [], mosse: [(8, 8, 3, 2), (8, 8, 1, 2, 2), (8, 8, 2, 3, 18)]
trasportoPalletDiGamma: {4: [(7, 1), (10, 9)], 2: [(4, 10)], 3: [(11, 6)], 5: [(4, 5), (2, 2), (8, 5)], 8: [(2, 2), (3, 18)], 9: [(5, 8), (8, 12)], 7: [(2, 16), (6, 4)], 6: [(8, 1), (9, 14)]}
itMosseLS: 11, itMosseTS: 5
time elapsed: 105.23s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89577.3, rotte: {9: [(1, 10), (10, 7), (7, 3), (3, 4), (4, 2)], 6: [(1, 3)], 7: [(1, 9), (9, 6), (6, 2)], 8: [(1, 8), (8, 3)], 5: [(1, 5), (5, 2)], 4: [(1, 11), (11, 4)], 2: [(1, 2)], 3: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85280.9, rotte: {9: [(1, 11), (11, 10), (10, 7), (7, 3), (3, 4), (4, 2)], 6: [(1, 3)], 7: [(1, 9), (9, 6), (6, 2)], 8: [(1, 8), (8, 3)], 5: [(1, 5), (5, 2)], 4: [(1, 4)], 2: [(1, 2)], 3: [(1, 4)]}, padri: [0], figli: [2], mosse: [(9, 4, 1, 11, 6)]
2 -> costo: 84320.1, rotte: {9: [(1, 11), (11, 10), (10, 7), (7, 3), (3, 4), (4, 2)], 6: [(1, 3)], 7: [(1, 9), (9, 6), (6, 2)], 8: [(1, 3), (3, 8)], 5: [(1, 5), (5, 2)], 4: [(1, 4)], 2: [(1, 2)], 3: [(1, 4)]}, padri: [1], figli: [3], mosse: [(8, 8, 8, 3)]
3 -> costo: 82769.0, rotte: {9: [(1, 11), (11, 10), (10, 7), (7, 3), (3, 4), (4, 2)], 6: [(1, 3)], 7: [(1, 2), (2, 9), (9, 6)], 8: [(1, 3), (3, 8)], 5: [(1, 5), (5, 2)], 4: [(1, 4)], 2: [(1, 2)], 3: [(1, 4)]}, padri: [2], figli: [4], mosse: [(7, 7, 1, 2, 2)]
4 -> costo: 81358.20000000001, rotte: {9: [(1, 11), (11, 10), (10, 7), (7, 3), (3, 4), (4, 2)], 6: [(1, 3)], 7: [(1, 2), (2, 6), (6, 9)], 8: [(1, 3), (3, 8)], 5: [(1, 5), (5, 2)], 4: [(1, 4)], 2: [(1, 2)], 3: [(1, 4)]}, padri: [3], figli: [5], mosse: [(7, 7, 9, 6)]
5 -> costo: 80484.90000000001, rotte: {9: [(1, 11), (11, 10), (10, 7), (7, 3), (3, 2)], 6: [(1, 3)], 7: [(1, 2), (2, 6), (6, 9)], 8: [(1, 3), (3, 8)], 5: [(1, 5), (5, 2)], 4: [(1, 4)], 2: [(1, 2)], 3: [(1, 4)]}, padri: [4], figli: [6], mosse: [(4, 9, 1, 4, 1)]
6 -> costo: 79711.80000000002, rotte: {9: [(1, 11), (11, 10), (10, 7), (7, 3), (3, 2)], 6: [(1, 3)], 7: [(1, 2), (2, 6), (6, 9)], 8: [(1, 3), (3, 8)], 5: [(1, 2), (2, 5)], 4: [(1, 4)], 2: [(1, 2)], 3: [(1, 4)]}, padri: [5], figli: [7], mosse: [(5, 5, 5, 2)]
7 -> costo: 78522.50000000001, rotte: {9: [(1, 11), (11, 10), (10, 7), (7, 3), (3, 2)], 6: [(1, 3)], 7: [(1, 6), (6, 9)], 8: [(1, 3), (3, 8)], 5: [(1, 2), (2, 5)], 4: [(1, 4)], 2: [(1, 2)], 3: [(1, 4)]}, padri: [6], figli: [8], mosse: [(9, 7, 1, 2, 2)]
8 -> costo: 78115.1, rotte: {9: [(1, 2), (2, 11), (11, 10), (10, 7), (7, 3)], 6: [(1, 3)], 7: [(1, 6), (6, 9)], 8: [(1, 3), (3, 8)], 5: [(1, 2), (2, 5)], 4: [(1, 4)], 2: [(1, 2)], 3: [(1, 4)]}, padri: [7], figli: [9], mosse: [(9, 9, 1, 2, 3)]
9 -> costo: 77960.90000000001, rotte: {9: [(1, 2), (2, 11), (11, 10), (10, 3), (3, 7)], 6: [(1, 3)], 7: [(1, 6), (6, 9)], 8: [(1, 3), (3, 8)], 5: [(1, 2), (2, 5)], 4: [(1, 4)], 2: [(1, 2)], 3: [(1, 4)]}, padri: [8], figli: [10, 11], mosse: [(9, 9, 7, 3)]
10 -> costo: 77934.1, rotte: {9: [(1, 2), (2, 10), (10, 11), (11, 3), (3, 7)], 6: [(1, 3)], 7: [(1, 6), (6, 9)], 8: [(1, 3), (3, 8)], 5: [(1, 2), (2, 5)], 4: [(1, 4)], 2: [(1, 2)], 3: [(1, 4)]}, padri: [9], figli: [], mosse: [(9, 9, 10, 11, 6)]
11 -> costo: 77945.00000000001, rotte: {9: [(1, 2), (2, 11), (11, 3), (3, 7), (7, 10)], 6: [(1, 3)], 7: [(1, 6), (6, 9)], 8: [(1, 3), (3, 8)], 5: [(1, 2), (2, 5)], 4: [(1, 4)], 2: [(1, 2)], 3: [(1, 4)]}, padri: [9], figli: [12, 13], mosse: [(9, 9, 7, 10, 9)]
12 -> costo: 75917.30000000002, rotte: {9: [(1, 2), (2, 3), (3, 7), (7, 11), (11, 10)], 6: [(1, 3)], 7: [(1, 6), (6, 9)], 8: [(1, 3), (3, 8)], 5: [(1, 2), (2, 5)], 4: [(1, 4)], 2: [(1, 2)], 3: [(1, 4)]}, padri: [11, 13, 13, 13], figli: [], mosse: [(9, 9, 7, 11, 6), (9, 9, 10, 11), (9, 9, 7, 11, 6), (9, 9, 11, 10, 9)]
13 -> costo: 76188.50000000001, rotte: {9: [(1, 2), (2, 3), (3, 7), (7, 10), (10, 11)], 6: [(1, 3)], 7: [(1, 6), (6, 9)], 8: [(1, 3), (3, 8)], 5: [(1, 2), (2, 5)], 4: [(1, 4)], 2: [(1, 2)], 3: [(1, 4)]}, padri: [11], figli: [12, 12, 12], mosse: [(9, 9, 10, 11, 6)]
bestSolutionIndice: 12
12 -> costo: 75917.30000000002, rotte: {9: [(1, 2), (2, 3), (3, 7), (7, 11), (11, 10)], 6: [(1, 3)], 7: [(1, 6), (6, 9)], 8: [(1, 3), (3, 8)], 5: [(1, 2), (2, 5)], 4: [(1, 4)], 2: [(1, 2)], 3: [(1, 4)]}, padri: [11, 13, 13, 13], figli: [], mosse: [(9, 9, 7, 11, 6), (9, 9, 10, 11), (9, 9, 7, 11, 6), (9, 9, 11, 10, 9)]
trasportoPalletDiGamma: {9: [(2, 3), (3, 1), (7, 1), (11, 6), (10, 9)], 6: [(3, 15)], 7: [(6, 4), (9, 14)], 8: [(3, 2), (8, 18)], 5: [(2, 7), (5, 8)], 4: [(4, 5)], 2: [(2, 10)], 3: [(4, 10)]}
itMosseLS: 16, itMosseTS: 5
time elapsed: 153.60s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89665.3, rotte: {7: [(1, 8), (8, 11)], 4: [(1, 10), (10, 4)], 9: [(1, 9), (9, 2)], 2: [(1, 7), (7, 11)], 6: [(1, 2)], 5: [(1, 5), (5, 4)], 8: [(1, 3), (3, 4)], 3: [(1, 6), (6, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86684.8, rotte: {7: [(1, 8), (8, 11)], 4: [(1, 4), (4, 10)], 9: [(1, 9), (9, 2)], 2: [(1, 7), (7, 11)], 6: [(1, 2)], 5: [(1, 5), (5, 4)], 8: [(1, 3), (3, 4)], 3: [(1, 6), (6, 4)]}, padri: [0], figli: [2], mosse: [(4, 4, 1, 4, 1)]
2 -> costo: 83732.4, rotte: {7: [(1, 8), (8, 11)], 4: [(1, 4), (4, 10)], 9: [(1, 2), (2, 9)], 2: [(1, 7), (7, 11)], 6: [(1, 2)], 5: [(1, 5), (5, 4)], 8: [(1, 3), (3, 4)], 3: [(1, 6), (6, 4)]}, padri: [1], figli: [3], mosse: [(9, 9, 9, 2)]
3 -> costo: 81073.7, rotte: {7: [(1, 8), (8, 11)], 4: [(1, 4), (4, 10)], 9: [(1, 2), (2, 9)], 2: [(1, 6), (6, 7), (7, 11)], 6: [(1, 2)], 5: [(1, 5), (5, 4)], 8: [(1, 3), (3, 4)], 3: [(1, 4)]}, padri: [2], figli: [4, 6], mosse: [(2, 3, 1, 6, 4)]
4 -> costo: 80412.3, rotte: {7: [(1, 8), (8, 11)], 4: [(1, 4), (4, 10)], 9: [(1, 2), (2, 9)], 2: [(1, 6), (6, 7), (7, 11)], 6: [(1, 2)], 5: [(1, 4), (4, 5)], 8: [(1, 3), (3, 4)], 3: [(1, 4)]}, padri: [3], figli: [5, 5, 5], mosse: [(5, 5, 5, 4)]
5 -> costo: 80116.0, rotte: {7: [(1, 8), (8, 11)], 4: [(1, 4), (4, 10)], 9: [(1, 2), (2, 9)], 2: [(1, 6), (6, 7), (7, 11)], 6: [(1, 2)], 5: [(1, 4), (4, 5)], 8: [(1, 4), (4, 3)], 3: [(1, 4)]}, padri: [4, 4, 4, 6], figli: [], mosse: [(8, 8, 1, 4, 2), (8, 8, 3, 4), (8, 8, 4, 3, 18), (5, 5, 5, 4)]
6 -> costo: 80777.4, rotte: {7: [(1, 8), (8, 11)], 4: [(1, 4), (4, 10)], 9: [(1, 2), (2, 9)], 2: [(1, 6), (6, 7), (7, 11)], 6: [(1, 2)], 5: [(1, 5), (5, 4)], 8: [(1, 4), (4, 3)], 3: [(1, 4)]}, padri: [3], figli: [5], mosse: [(8, 8, 3, 4)]
bestSolutionIndice: 5
5 -> costo: 80116.0, rotte: {7: [(1, 8), (8, 11)], 4: [(1, 4), (4, 10)], 9: [(1, 2), (2, 9)], 2: [(1, 6), (6, 7), (7, 11)], 6: [(1, 2)], 5: [(1, 4), (4, 5)], 8: [(1, 4), (4, 3)], 3: [(1, 4)]}, padri: [4, 4, 4, 6], figli: [], mosse: [(8, 8, 1, 4, 2), (8, 8, 3, 4), (8, 8, 4, 3, 18), (5, 5, 5, 4)]
trasportoPalletDiGamma: {7: [(8, 18), (11, 2)], 4: [(4, 1), (10, 9)], 9: [(2, 5), (9, 14)], 2: [(6, 4), (7, 1), (11, 4)], 6: [(2, 15)], 5: [(4, 7), (5, 8)], 8: [(4, 2), (3, 18)], 3: [(4, 5)]}
itMosseLS: 9, itMosseTS: 5
time elapsed: 128.15s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 92208.2, rotte: {4: [(1, 8)], 8: [(1, 6), (6, 3)], 7: [(1, 2)], 9: [(1, 5), (5, 8), (8, 4)], 6: [(1, 7), (7, 3), (3, 4)], 2: [(1, 10), (10, 4)], 5: [(1, 9), (9, 4)], 3: [(1, 11), (11, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 89227.7, rotte: {4: [(1, 8)], 8: [(1, 6), (6, 3)], 7: [(1, 2)], 9: [(1, 5), (5, 8), (8, 4)], 6: [(1, 7), (7, 3), (3, 4)], 2: [(1, 4), (4, 10)], 5: [(1, 9), (9, 4)], 3: [(1, 11), (11, 4)]}, padri: [0], figli: [2], mosse: [(2, 2, 10, 4)]
2 -> costo: 86386.99999999999, rotte: {4: [(1, 8)], 8: [(1, 6), (6, 3)], 7: [(1, 2)], 9: [(1, 5), (5, 8), (8, 4)], 6: [(1, 7), (7, 3), (3, 4)], 2: [(1, 4), (4, 10)], 5: [(1, 4), (4, 9)], 3: [(1, 11), (11, 4)]}, padri: [1], figli: [3], mosse: [(5, 5, 1, 4, 1)]
3 -> costo: 84115.79999999997, rotte: {4: [(1, 8)], 8: [(1, 6), (6, 3)], 7: [(1, 2)], 9: [(1, 5), (5, 8), (8, 4)], 6: [(1, 7), (7, 3), (3, 4)], 2: [(1, 4), (4, 10)], 5: [(1, 4), (4, 9)], 3: [(1, 4), (4, 11)]}, padri: [2], figli: [4], mosse: [(3, 3, 11, 4)]
4 -> costo: 81607.59999999998, rotte: {4: [(1, 8)], 8: [(1, 6), (6, 3)], 7: [(1, 2)], 9: [(1, 5), (5, 8)], 6: [(1, 7), (7, 3), (3, 4)], 2: [(1, 4), (4, 10)], 5: [(1, 4), (4, 9)], 3: [(1, 4), (4, 11)]}, padri: [3], figli: [5], mosse: [(6, 9, 1, 4, 4)]
5 -> costo: 81017.69999999998, rotte: {4: [(1, 8)], 8: [(1, 3), (3, 6)], 7: [(1, 2)], 9: [(1, 5), (5, 8)], 6: [(1, 7), (7, 3), (3, 4)], 2: [(1, 4), (4, 10)], 5: [(1, 4), (4, 9)], 3: [(1, 4), (4, 11)]}, padri: [4], figli: [6], mosse: [(8, 8, 6, 3)]
6 -> costo: 79913.29999999999, rotte: {4: [(1, 8)], 8: [(1, 3), (3, 6)], 7: [(1, 2)], 9: [(1, 5), (5, 8)], 6: [(1, 7), (7, 3), (3, 4)], 2: [(1, 4), (4, 10)], 5: [(1, 9)], 3: [(1, 4), (4, 11)]}, padri: [5], figli: [7], mosse: [(6, 5, 1, 4, 1)]
7 -> costo: 78725.99999999999, rotte: {4: [(1, 8)], 8: [(1, 3), (3, 6)], 7: [(1, 2)], 9: [(1, 5), (5, 8)], 6: [(1, 3), (3, 4)], 2: [(1, 4), (4, 10)], 5: [(1, 7), (7, 9)], 3: [(1, 4), (4, 11)]}, padri: [6], figli: [8, 11], mosse: [(5, 6, 1, 7, 1)]
8 -> costo: 78429.69999999998, rotte: {4: [(1, 8)], 8: [(1, 3), (3, 6)], 7: [(1, 2)], 9: [(1, 5), (5, 8)], 6: [(1, 4), (4, 3)], 2: [(1, 4), (4, 10)], 5: [(1, 7), (7, 9)], 3: [(1, 4), (4, 11)]}, padri: [7], figli: [9, 9], mosse: [(6, 6, 3, 4)]
9 -> costo: 78099.09999999999, rotte: {4: [(1, 8)], 8: [(1, 3), (3, 6)], 7: [(1, 2)], 9: [(1, 5), (5, 8)], 6: [(1, 4), (4, 3)], 2: [(1, 10)], 5: [(1, 7), (7, 9)], 3: [(1, 4), (4, 11)]}, padri: [8, 8, 11, 11], figli: [10], mosse: [(6, 2, 1, 4, 1), (6, 2, 3, 4, 1), (6, 6, 3, 4), (6, 6, 1, 4, 11)]
10 -> costo: 78047.79999999999, rotte: {4: [(1, 8)], 8: [(1, 3), (3, 6)], 7: [(1, 2)], 9: [(1, 5), (5, 8)], 6: [(1, 4), (4, 3)], 2: [(1, 7), (7, 10)], 5: [(1, 9)], 3: [(1, 4), (4, 11)]}, padri: [9], figli: [], mosse: [(2, 5, 1, 7, 1)]
11 -> costo: 78395.39999999998, rotte: {4: [(1, 8)], 8: [(1, 3), (3, 6)], 7: [(1, 2)], 9: [(1, 5), (5, 8)], 6: [(1, 3), (3, 4)], 2: [(1, 10)], 5: [(1, 7), (7, 9)], 3: [(1, 4), (4, 11)]}, padri: [7], figli: [9, 9], mosse: [(6, 2, 1, 4, 1)]
bestSolutionIndice: 10
10 -> costo: 78047.79999999999, rotte: {4: [(1, 8)], 8: [(1, 3), (3, 6)], 7: [(1, 2)], 9: [(1, 5), (5, 8)], 6: [(1, 4), (4, 3)], 2: [(1, 7), (7, 10)], 5: [(1, 9)], 3: [(1, 4), (4, 11)]}, padri: [9], figli: [], mosse: [(2, 5, 1, 7, 1)]
trasportoPalletDiGamma: {4: [(8, 10)], 8: [(3, 16), (6, 4)], 7: [(2, 20)], 9: [(5, 8), (8, 8)], 6: [(4, 11), (3, 2)], 2: [(7, 1), (10, 9)], 5: [(9, 14)], 3: [(4, 4), (11, 6)]}
itMosseLS: 14, itMosseTS: 5
time elapsed: 120.74s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 89738.90000000001, rotte: {2: [(1, 4)], 5: [(1, 3)], 7: [(1, 10), (10, 7), (7, 4), (4, 8)], 6: [(1, 6), (6, 5), (5, 8)], 3: [(1, 8)], 4: [(1, 11), (11, 4)], 8: [(1, 9), (9, 3), (3, 8)], 9: [(1, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85442.50000000001, rotte: {2: [(1, 4)], 5: [(1, 3)], 7: [(1, 11), (11, 10), (10, 7), (7, 4), (4, 8)], 6: [(1, 6), (6, 5), (5, 8)], 3: [(1, 8)], 4: [(1, 4)], 8: [(1, 9), (9, 3), (3, 8)], 9: [(1, 2)]}, padri: [0], figli: [2], mosse: [(7, 4, 1, 11, 6)]
2 -> costo: 83953.3, rotte: {2: [(1, 4)], 5: [(1, 3)], 7: [(1, 11), (11, 10), (10, 7), (7, 8), (8, 4)], 6: [(1, 6), (6, 5), (5, 8)], 3: [(1, 8)], 4: [(1, 4)], 8: [(1, 9), (9, 3), (3, 8)], 9: [(1, 2)]}, padri: [1], figli: [3], mosse: [(7, 7, 4, 8)]
3 -> costo: 80208.3, rotte: {2: [(1, 4)], 5: [(1, 3)], 7: [(1, 11), (11, 10), (10, 7), (7, 8), (8, 4)], 6: [(1, 6), (6, 5), (5, 8)], 3: [(1, 8)], 4: [(1, 4)], 8: [(1, 3), (3, 8), (8, 9)], 9: [(1, 2)]}, padri: [2], figli: [4], mosse: [(8, 8, 8, 9, 14)]
4 -> costo: 79320.8, rotte: {2: [(1, 4)], 5: [(1, 3)], 7: [(1, 11), (11, 10), (10, 8), (8, 7), (7, 4)], 6: [(1, 6), (6, 5), (5, 8)], 3: [(1, 8)], 4: [(1, 4)], 8: [(1, 3), (3, 8), (8, 9)], 9: [(1, 2)]}, padri: [3], figli: [5], mosse: [(7, 7, 8, 7, 1)]
5 -> costo: 77682.50000000001, rotte: {2: [(1, 4)], 5: [(1, 3)], 7: [(1, 4), (4, 11), (11, 10), (10, 8), (8, 7)], 6: [(1, 6), (6, 5), (5, 8)], 3: [(1, 8)], 4: [(1, 4)], 8: [(1, 3), (3, 8), (8, 9)], 9: [(1, 2)]}, padri: [4], figli: [6, 7, 8], mosse: [(7, 7, 1, 4, 1)]
6 -> costo: 76996.00000000001, rotte: {2: [(1, 4)], 5: [(1, 3)], 7: [(1, 4), (4, 11), (11, 10), (10, 8), (8, 7)], 6: [(1, 5), (5, 6), (6, 8)], 3: [(1, 8)], 4: [(1, 4)], 8: [(1, 3), (3, 8), (8, 9)], 9: [(1, 2)]}, padri: [5, 7, 7, 7], figli: [], mosse: [(6, 6, 5, 6, 4), (6, 6, 8, 6), (6, 6, 5, 6, 4), (6, 6, 6, 8, 3)]
7 -> costo: 77436.50000000001, rotte: {2: [(1, 4)], 5: [(1, 3)], 7: [(1, 4), (4, 11), (11, 10), (10, 8), (8, 7)], 6: [(1, 5), (5, 8), (8, 6)], 3: [(1, 8)], 4: [(1, 4)], 8: [(1, 3), (3, 8), (8, 9)], 9: [(1, 2)]}, padri: [5, 8], figli: [6, 6, 6], mosse: [(6, 6, 8, 6, 4), (6, 6, 1, 5, 8)]
8 -> costo: 77669.3, rotte: {2: [(1, 4)], 5: [(1, 3)], 7: [(1, 4), (4, 11), (11, 10), (10, 8), (8, 7)], 6: [(1, 8), (8, 6), (6, 5)], 3: [(1, 8)], 4: [(1, 4)], 8: [(1, 3), (3, 8), (8, 9)], 9: [(1, 2)]}, padri: [5], figli: [7], mosse: [(6, 6, 1, 8, 3)]
bestSolutionIndice: 6
6 -> costo: 76996.00000000001, rotte: {2: [(1, 4)], 5: [(1, 3)], 7: [(1, 4), (4, 11), (11, 10), (10, 8), (8, 7)], 6: [(1, 5), (5, 6), (6, 8)], 3: [(1, 8)], 4: [(1, 4)], 8: [(1, 3), (3, 8), (8, 9)], 9: [(1, 2)]}, padri: [5, 7, 7, 7], figli: [], mosse: [(6, 6, 5, 6, 4), (6, 6, 8, 6), (6, 6, 5, 6, 4), (6, 6, 6, 8, 3)]
trasportoPalletDiGamma: {2: [(4, 10)], 5: [(3, 15)], 7: [(4, 1), (11, 6), (10, 9), (8, 2), (7, 1)], 6: [(5, 8), (6, 4), (8, 3)], 3: [(8, 10)], 4: [(4, 4)], 8: [(3, 3), (8, 3), (9, 14)], 9: [(2, 20)]}
itMosseLS: 12, itMosseTS: 5
time elapsed: 135.42s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88705.40000000001, rotte: {3: [(1, 7), (7, 11)], 7: [(1, 8), (8, 4)], 8: [(1, 2)], 5: [(1, 10), (10, 4)], 4: [(1, 3)], 2: [(1, 6), (6, 3)], 6: [(1, 5), (5, 4)], 9: [(1, 9), (9, 3)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 86223.40000000001, rotte: {3: [(1, 7), (7, 11)], 7: [(1, 8), (8, 4)], 8: [(1, 2)], 5: [(1, 10), (10, 4)], 4: [(1, 3)], 2: [(1, 6), (6, 3)], 6: [(1, 5), (5, 4)], 9: [(1, 3), (3, 9)]}, padri: [0], figli: [2], mosse: [(9, 9, 1, 3, 2)]
2 -> costo: 83242.90000000001, rotte: {3: [(1, 7), (7, 11)], 7: [(1, 8), (8, 4)], 8: [(1, 2)], 5: [(1, 4), (4, 10)], 4: [(1, 3)], 2: [(1, 6), (6, 3)], 6: [(1, 5), (5, 4)], 9: [(1, 3), (3, 9)]}, padri: [1], figli: [3], mosse: [(5, 5, 10, 4)]
3 -> costo: 81923.40000000001, rotte: {3: [(1, 7), (7, 11)], 7: [(1, 4), (4, 8)], 8: [(1, 2)], 5: [(1, 4), (4, 10)], 4: [(1, 3)], 2: [(1, 6), (6, 3)], 6: [(1, 5), (5, 4)], 9: [(1, 3), (3, 9)]}, padri: [2], figli: [4], mosse: [(7, 7, 1, 4, 2)]
4 -> costo: 81262.0, rotte: {3: [(1, 7), (7, 11)], 7: [(1, 4), (4, 8)], 8: [(1, 2)], 5: [(1, 4), (4, 10)], 4: [(1, 3)], 2: [(1, 6), (6, 3)], 6: [(1, 4), (4, 5)], 9: [(1, 3), (3, 9)]}, padri: [3], figli: [5], mosse: [(6, 6, 5, 4)]
5 -> costo: 79979.8, rotte: {3: [(1, 7), (7, 11)], 7: [(1, 4), (4, 8)], 8: [(1, 2)], 5: [(1, 4), (4, 10)], 4: [(1, 3)], 2: [(1, 3)], 6: [(1, 4), (4, 5)], 9: [(1, 3), (3, 6), (6, 9)]}, padri: [4], figli: [6], mosse: [(9, 2, 3, 6, 4)]
6 -> costo: 79187.90000000001, rotte: {3: [(1, 7), (7, 3), (3, 11)], 7: [(1, 4), (4, 8)], 8: [(1, 2)], 5: [(1, 4), (4, 10)], 4: [(1, 3)], 2: [(1, 3)], 6: [(1, 4), (4, 5)], 9: [(1, 6), (6, 9)]}, padri: [5], figli: [7, 10], mosse: [(3, 9, 7, 3, 2)]
7 -> costo: 78252.2, rotte: {3: [(1, 3), (3, 11)], 7: [(1, 4), (4, 8)], 8: [(1, 2)], 5: [(1, 4), (4, 10)], 4: [(1, 3)], 2: [(1, 3)], 6: [(1, 4), (4, 5)], 9: [(1, 7), (7, 6), (6, 9)]}, padri: [6, 10], figli: [8], mosse: [(9, 3, 1, 7, 1), (9, 9, 7, 6, 4)]
8 -> costo: 77326.3, rotte: {3: [(1, 4), (4, 3), (3, 11)], 7: [(1, 8)], 8: [(1, 2)], 5: [(1, 4), (4, 10)], 4: [(1, 3)], 2: [(1, 3)], 6: [(1, 4), (4, 5)], 9: [(1, 7), (7, 6), (6, 9)]}, padri: [7, 11], figli: [9], mosse: [(3, 7, 1, 4, 2), (9, 9, 7, 6, 4)]
9 -> costo: 77117.0, rotte: {3: [(1, 4), (4, 3), (3, 11)], 7: [(1, 7), (7, 8)], 8: [(1, 2)], 5: [(1, 4), (4, 10)], 4: [(1, 3)], 2: [(1, 3)], 6: [(1, 4), (4, 5)], 9: [(1, 6), (6, 9)]}, padri: [8], figli: [], mosse: [(7, 9, 1, 7, 1)]
10 -> costo: 78637.59999999999, rotte: {3: [(1, 3), (3, 11)], 7: [(1, 4), (4, 8)], 8: [(1, 2)], 5: [(1, 4), (4, 10)], 4: [(1, 3)], 2: [(1, 3)], 6: [(1, 4), (4, 5)], 9: [(1, 6), (6, 7), (7, 9)]}, padri: [6], figli: [11, 7], mosse: [(9, 3, 6, 7, 1)]
11 -> costo: 77711.7, rotte: {3: [(1, 4), (4, 3), (3, 11)], 7: [(1, 8)], 8: [(1, 2)], 5: [(1, 4), (4, 10)], 4: [(1, 3)], 2: [(1, 3)], 6: [(1, 4), (4, 5)], 9: [(1, 6), (6, 7), (7, 9)]}, padri: [10], figli: [8], mosse: [(3, 7, 1, 4, 2)]
bestSolutionIndice: 9
9 -> costo: 77117.0, rotte: {3: [(1, 4), (4, 3), (3, 11)], 7: [(1, 7), (7, 8)], 8: [(1, 2)], 5: [(1, 4), (4, 10)], 4: [(1, 3)], 2: [(1, 3)], 6: [(1, 4), (4, 5)], 9: [(1, 6), (6, 9)]}, padri: [8], figli: [], mosse: [(7, 9, 1, 7, 1)]
trasportoPalletDiGamma: {3: [(4, 2), (3, 2), (11, 6)], 7: [(7, 1), (8, 18)], 8: [(2, 20)], 5: [(4, 6), (10, 9)], 4: [(3, 10)], 2: [(3, 6)], 6: [(4, 7), (5, 8)], 9: [(6, 4), (9, 14)]}
itMosseLS: 13, itMosseTS: 5
time elapsed: 150.91s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 88617.00000000001, rotte: {9: [(1, 3), (3, 2)], 5: [(1, 11), (11, 8)], 6: [(1, 10), (10, 2)], 8: [(1, 4), (4, 8)], 7: [(1, 9), (9, 2)], 3: [(1, 6), (6, 8)], 2: [(1, 7), (7, 2)], 4: [(1, 5)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 85664.60000000002, rotte: {9: [(1, 3), (3, 2)], 5: [(1, 11), (11, 8)], 6: [(1, 10), (10, 2)], 8: [(1, 4), (4, 8)], 7: [(1, 2), (2, 9)], 3: [(1, 6), (6, 8)], 2: [(1, 7), (7, 2)], 4: [(1, 5)]}, padri: [0], figli: [2], mosse: [(7, 7, 1, 2, 6)]
2 -> costo: 82573.00000000001, rotte: {9: [(1, 3), (3, 2)], 5: [(1, 11), (11, 8)], 6: [(1, 2), (2, 10)], 8: [(1, 4), (4, 8)], 7: [(1, 2), (2, 9)], 3: [(1, 6), (6, 8)], 2: [(1, 7), (7, 2)], 4: [(1, 5)]}, padri: [1], figli: [3], mosse: [(6, 6, 10, 2)]
3 -> costo: 80429.3, rotte: {9: [(1, 3), (3, 2)], 5: [(1, 11), (11, 8)], 6: [(1, 2), (2, 10)], 8: [(1, 4), (4, 8)], 7: [(1, 2), (2, 9)], 3: [(1, 7), (7, 6), (6, 8)], 2: [(1, 2)], 4: [(1, 5)]}, padri: [2], figli: [4], mosse: [(3, 2, 1, 7, 1)]
4 -> costo: 79490.0, rotte: {9: [(1, 3), (3, 2)], 5: [(1, 8), (8, 11)], 6: [(1, 2), (2, 10)], 8: [(1, 4), (4, 8)], 7: [(1, 2), (2, 9)], 3: [(1, 7), (7, 6), (6, 8)], 2: [(1, 2)], 4: [(1, 5)]}, padri: [3], figli: [5], mosse: [(5, 5, 11, 8)]
5 -> costo: 79082.6, rotte: {9: [(1, 2), (2, 3)], 5: [(1, 8), (8, 11)], 6: [(1, 2), (2, 10)], 8: [(1, 4), (4, 8)], 7: [(1, 2), (2, 9)], 3: [(1, 7), (7, 6), (6, 8)], 2: [(1, 2)], 4: [(1, 5)]}, padri: [4], figli: [], mosse: [(9, 9, 1, 2, 2)]
bestSolutionIndice: 5
5 -> costo: 79082.6, rotte: {9: [(1, 2), (2, 3)], 5: [(1, 8), (8, 11)], 6: [(1, 2), (2, 10)], 8: [(1, 4), (4, 8)], 7: [(1, 2), (2, 9)], 3: [(1, 7), (7, 6), (6, 8)], 2: [(1, 2)], 4: [(1, 5)]}, padri: [4], figli: [], mosse: [(9, 9, 1, 2, 2)]
trasportoPalletDiGamma: {9: [(2, 2), (3, 18)], 5: [(8, 9), (11, 6)], 6: [(2, 6), (10, 9)], 8: [(4, 15), (8, 5)], 7: [(2, 6), (9, 14)], 3: [(7, 1), (6, 4), (8, 4)], 2: [(2, 6)], 4: [(5, 8)]}
itMosseLS: 5, itMosseTS: 1
time elapsed: 24.55s.


##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
