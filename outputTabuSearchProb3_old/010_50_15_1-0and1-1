itNSIMax: 50, itMosseTSMax: 15.
##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 91410.19999999998, rotte: {3: [(1, 7), (7, 2)], 6: [(1, 11), (11, 4)], 5: [(1, 10), (10, 8)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 6), (6, 4)], 9: [(1, 5), (5, 8), (8, 2)], 8: [(1, 9), (9, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 88044.99999999999, rotte: {3: [(1, 7), (7, 2)], 6: [(1, 11), (11, 4)], 5: [(1, 10), (10, 8)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 4)], 9: [(1, 5), (5, 6), (6, 8), (8, 2)], 8: [(1, 9), (9, 2)]}, padri: [0], figli: [2], mosse: [(9, 4, 5, 6, 4)]
2 -> costo: 85092.6, rotte: {3: [(1, 7), (7, 2)], 6: [(1, 11), (11, 4)], 5: [(1, 10), (10, 8)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 4)], 9: [(1, 5), (5, 6), (6, 8), (8, 2)], 8: [(1, 2), (2, 9)]}, padri: [1], figli: [3], mosse: [(8, 8, 1, 2, 6)]
3 -> costo: 82821.40000000001, rotte: {3: [(1, 7), (7, 2)], 6: [(1, 4), (4, 11)], 5: [(1, 10), (10, 8)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 4)], 9: [(1, 5), (5, 6), (6, 8), (8, 2)], 8: [(1, 2), (2, 9)]}, padri: [2], figli: [4], mosse: [(6, 6, 1, 4, 9)]
4 -> costo: 80652.50000000001, rotte: {3: [(1, 2)], 6: [(1, 4), (4, 11)], 5: [(1, 10), (10, 8)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 4)], 9: [(1, 5), (5, 6), (6, 8), (8, 7), (7, 2)], 8: [(1, 2), (2, 9)]}, padri: [3], figli: [5], mosse: [(9, 3, 8, 7, 1)]
5 -> costo: 79003.20000000003, rotte: {3: [(1, 2)], 6: [(1, 4), (4, 11)], 5: [(1, 8), (8, 10)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 4)], 9: [(1, 5), (5, 6), (6, 8), (8, 7), (7, 2)], 8: [(1, 2), (2, 9)]}, padri: [4], figli: [6], mosse: [(5, 5, 1, 8, 6)]
6 -> costo: 78417.90000000002, rotte: {3: [(1, 2)], 6: [(1, 4), (4, 11)], 5: [(1, 8), (8, 10)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 4)], 9: [(1, 2), (2, 5), (5, 6), (6, 8), (8, 7)], 8: [(1, 2), (2, 9)]}, padri: [5], figli: [7, 13, 14], mosse: [(9, 9, 1, 2, 3)]
7 -> costo: 77950.20000000003, rotte: {3: [(1, 2)], 6: [(1, 4), (4, 11)], 5: [(1, 8), (8, 10)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 4), (4, 2)], 9: [(1, 5), (5, 6), (6, 8), (8, 7)], 8: [(1, 2), (2, 9)]}, padri: [6], figli: [8, 8, 11, 11, 12], mosse: [(4, 9, 4, 2, 3)]
8 -> costo: 77838.50000000001, rotte: {3: [(1, 2)], 6: [(1, 4), (4, 11)], 5: [(1, 8), (8, 10)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 2), (2, 4)], 9: [(1, 5), (5, 6), (6, 8), (8, 7)], 8: [(1, 2), (2, 9)]}, padri: [7, 7], figli: [9, 10], mosse: [(4, 4, 1, 2, 3), (4, 4, 2, 4, 6)]
9 -> costo: 77819.40000000002, rotte: {3: [(1, 2)], 6: [(1, 4), (4, 11)], 5: [(1, 8), (8, 10)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 2), (2, 4)], 9: [(1, 7), (7, 5), (5, 6), (6, 8)], 8: [(1, 2), (2, 9)]}, padri: [8, 10, 11, 11], figli: [], mosse: [(9, 9, 1, 7, 1), (9, 9, 7, 5, 8), (4, 4, 1, 2, 3), (4, 4, 2, 4, 6)]
10 -> costo: 77833.00000000001, rotte: {3: [(1, 2)], 6: [(1, 4), (4, 11)], 5: [(1, 8), (8, 10)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 2), (2, 4)], 9: [(1, 5), (5, 7), (7, 6), (6, 8)], 8: [(1, 2), (2, 9)]}, padri: [8, 12, 12], figli: [9], mosse: [(9, 9, 5, 7, 1), (4, 4, 1, 2, 3), (4, 4, 2, 4, 6)]
11 -> costo: 77931.1, rotte: {3: [(1, 2)], 6: [(1, 4), (4, 11)], 5: [(1, 8), (8, 10)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 4), (4, 2)], 9: [(1, 7), (7, 5), (5, 6), (6, 8)], 8: [(1, 2), (2, 9)]}, padri: [7, 12, 13], figli: [9, 9], mosse: [(9, 9, 1, 7, 1), (9, 9, 7, 5, 8), (4, 9, 4, 2, 3)]
12 -> costo: 77944.70000000001, rotte: {3: [(1, 2)], 6: [(1, 4), (4, 11)], 5: [(1, 8), (8, 10)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 4), (4, 2)], 9: [(1, 5), (5, 7), (7, 6), (6, 8)], 8: [(1, 2), (2, 9)]}, padri: [7, 14], figli: [10, 10, 11], mosse: [(9, 9, 5, 7, 1), (4, 9, 4, 2, 3)]
13 -> costo: 78189.40000000001, rotte: {3: [(1, 2)], 6: [(1, 4), (4, 11)], 5: [(1, 8), (8, 10)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 4)], 9: [(1, 2), (2, 7), (7, 5), (5, 6), (6, 8)], 8: [(1, 2), (2, 9)]}, padri: [6], figli: [11], mosse: [(9, 9, 2, 7, 1)]
14 -> costo: 78412.40000000001, rotte: {3: [(1, 2)], 6: [(1, 4), (4, 11)], 5: [(1, 8), (8, 10)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 4)], 9: [(1, 2), (2, 5), (5, 7), (7, 6), (6, 8)], 8: [(1, 2), (2, 9)]}, padri: [6], figli: [12], mosse: [(9, 9, 5, 7, 1)]
bestSolutionIndice: 9
9 -> costo: 77819.40000000002, rotte: {3: [(1, 2)], 6: [(1, 4), (4, 11)], 5: [(1, 8), (8, 10)], 2: [(1, 8)], 7: [(1, 3), (3, 2)], 4: [(1, 2), (2, 4)], 9: [(1, 7), (7, 5), (5, 6), (6, 8)], 8: [(1, 2), (2, 9)]}, padri: [8, 10, 11, 11], figli: [], mosse: [(9, 9, 1, 7, 1), (9, 9, 7, 5, 8), (4, 4, 1, 2, 3), (4, 4, 2, 4, 6)]
trasportoPalletDiGamma: {3: [(2, 9)], 6: [(4, 9), (11, 6)], 5: [(8, 6), (10, 9)], 2: [(8, 10)], 7: [(3, 18), (2, 2)], 4: [(2, 3), (4, 6)], 9: [(7, 1), (5, 8), (6, 4), (8, 2)], 8: [(2, 6), (9, 14)]}
itMosseLS: 23, itMosseTS: 15
time elapsed: 504.67s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 85286.40000000001, rotte: {7: [(1, 5), (5, 4)], 5: [(1, 6), (6, 10), (10, 4)], 4: [(1, 11), (11, 8)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 7), (7, 9)], 9: [(1, 3), (3, 4)], 8: [(1, 2)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 83233.90000000001, rotte: {7: [(1, 5), (5, 4)], 5: [(1, 4), (4, 6), (6, 10)], 4: [(1, 11), (11, 8)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 7), (7, 9)], 9: [(1, 3), (3, 4)], 8: [(1, 2)]}, padri: [0], figli: [2], mosse: [(5, 5, 1, 4, 1)]
2 -> costo: 82238.10000000002, rotte: {7: [(1, 5), (5, 4)], 5: [(1, 6), (6, 10)], 4: [(1, 4), (4, 11), (11, 8)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 7), (7, 9)], 9: [(1, 3), (3, 4)], 8: [(1, 2)]}, padri: [1], figli: [3], mosse: [(4, 5, 1, 4, 1)]
3 -> costo: 81576.70000000003, rotte: {7: [(1, 4), (4, 5)], 5: [(1, 6), (6, 10)], 4: [(1, 4), (4, 11), (11, 8)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 7), (7, 9)], 9: [(1, 3), (3, 4)], 8: [(1, 2)]}, padri: [2], figli: [4], mosse: [(7, 7, 1, 4, 12)]
4 -> costo: 81280.40000000002, rotte: {7: [(1, 4), (4, 5)], 5: [(1, 6), (6, 10)], 4: [(1, 4), (4, 11), (11, 8)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 7), (7, 9)], 9: [(1, 4), (4, 3)], 8: [(1, 2)]}, padri: [3], figli: [5, 15], mosse: [(9, 9, 1, 4, 2)]
5 -> costo: 81174.70000000003, rotte: {7: [(1, 4), (4, 5)], 5: [(1, 10)], 4: [(1, 4), (4, 11), (11, 8)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 7), (7, 6), (6, 9)], 9: [(1, 4), (4, 3)], 8: [(1, 2)]}, padri: [4], figli: [6, 8, 8], mosse: [(3, 5, 7, 6, 4)]
6 -> costo: 80871.80000000002, rotte: {7: [(1, 4), (4, 5)], 5: [(1, 7), (7, 10)], 4: [(1, 4), (4, 11), (11, 8)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 6), (6, 9)], 9: [(1, 4), (4, 3)], 8: [(1, 2)]}, padri: [5], figli: [7, 7], mosse: [(5, 3, 1, 7, 1)]
7 -> costo: 80858.40000000001, rotte: {7: [(1, 4), (4, 5)], 5: [(1, 7), (7, 10)], 4: [(1, 4), (4, 8), (8, 11)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 6), (6, 9)], 9: [(1, 4), (4, 3)], 8: [(1, 2)]}, padri: [6, 6, 8], figli: [], mosse: [(4, 4, 4, 8, 3), (4, 4, 8, 11, 6), (5, 3, 1, 7, 1)]
8 -> costo: 81161.30000000002, rotte: {7: [(1, 4), (4, 5)], 5: [(1, 10)], 4: [(1, 4), (4, 8), (8, 11)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 7), (7, 6), (6, 9)], 9: [(1, 4), (4, 3)], 8: [(1, 2)]}, padri: [5, 5, 15], figli: [9, 7], mosse: [(4, 4, 4, 8, 3), (4, 4, 8, 11, 6), (3, 5, 7, 6, 4)]
9 -> costo: 80303.20000000001, rotte: {7: [(1, 4), (4, 5)], 5: [(1, 4), (4, 10)], 4: [(1, 8), (8, 11)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 7), (7, 6), (6, 9)], 9: [(1, 4), (4, 3)], 8: [(1, 2)]}, padri: [8], figli: [10, 11], mosse: [(5, 4, 1, 4, 1)]
10 -> costo: 80093.90000000001, rotte: {7: [(1, 4), (4, 5)], 5: [(1, 4), (4, 10)], 4: [(1, 7), (7, 8), (8, 11)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 6), (6, 9)], 9: [(1, 4), (4, 3)], 8: [(1, 2)]}, padri: [9], figli: [], mosse: [(4, 3, 1, 7, 1)]
11 -> costo: 80226.20000000003, rotte: {7: [(1, 4), (4, 5)], 5: [(1, 4), (4, 8), (8, 10)], 4: [(1, 11)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 7), (7, 6), (6, 9)], 9: [(1, 4), (4, 3)], 8: [(1, 2)]}, padri: [9], figli: [12, 14], mosse: [(5, 4, 4, 8, 3)]
12 -> costo: 79300.30000000003, rotte: {7: [(1, 4), (4, 5)], 5: [(1, 8), (8, 10)], 4: [(1, 4), (4, 11)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 7), (7, 6), (6, 9)], 9: [(1, 4), (4, 3)], 8: [(1, 2)]}, padri: [11], figli: [13], mosse: [(4, 5, 1, 4, 1)]
13 -> costo: 79091.00000000001, rotte: {7: [(1, 4), (4, 5)], 5: [(1, 7), (7, 8), (8, 10)], 4: [(1, 4), (4, 11)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 6), (6, 9)], 9: [(1, 4), (4, 3)], 8: [(1, 2)]}, padri: [12, 14], figli: [], mosse: [(5, 3, 1, 7, 1), (4, 5, 1, 4, 1)]
14 -> costo: 80076.40000000001, rotte: {7: [(1, 4), (4, 5)], 5: [(1, 4), (4, 7), (7, 8), (8, 10)], 4: [(1, 11)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 6), (6, 9)], 9: [(1, 4), (4, 3)], 8: [(1, 2)]}, padri: [11], figli: [13], mosse: [(5, 3, 4, 7, 1)]
15 -> costo: 81267.00000000001, rotte: {7: [(1, 4), (4, 5)], 5: [(1, 6), (6, 10)], 4: [(1, 4), (4, 8), (8, 11)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 7), (7, 9)], 9: [(1, 4), (4, 3)], 8: [(1, 2)]}, padri: [4], figli: [8], mosse: [(4, 4, 4, 8, 3)]
bestSolutionIndice: 13
13 -> costo: 79091.00000000001, rotte: {7: [(1, 4), (4, 5)], 5: [(1, 7), (7, 8), (8, 10)], 4: [(1, 4), (4, 11)], 6: [(1, 8)], 2: [(1, 9)], 3: [(1, 6), (6, 9)], 9: [(1, 4), (4, 3)], 8: [(1, 2)]}, padri: [12, 14], figli: [], mosse: [(5, 3, 1, 7, 1), (4, 5, 1, 4, 1)]
trasportoPalletDiGamma: {7: [(4, 12), (5, 8)], 5: [(7, 1), (8, 3), (10, 9)], 4: [(4, 1), (11, 6)], 6: [(8, 15)], 2: [(9, 10)], 3: [(6, 4), (9, 4)], 9: [(4, 2), (3, 18)], 8: [(2, 20)]}
itMosseLS: 20, itMosseTS: 15
time elapsed: 539.55s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 92144.0, rotte: {4: [(1, 11), (11, 2)], 9: [(1, 7), (7, 10), (10, 2)], 7: [(1, 4), (4, 8)], 3: [(1, 8)], 6: [(1, 5), (5, 3), (3, 8)], 5: [(1, 3)], 8: [(1, 6), (6, 9), (9, 2)], 2: [(1, 9)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 88560.6, rotte: {4: [(1, 2)], 9: [(1, 7), (7, 10), (10, 2)], 7: [(1, 4), (4, 8)], 3: [(1, 8)], 6: [(1, 5), (5, 3), (3, 8)], 5: [(1, 3)], 8: [(1, 6), (6, 9), (9, 11), (11, 2)], 2: [(1, 9)]}, padri: [0], figli: [2], mosse: [(8, 4, 9, 11, 6)]
2 -> costo: 86178.3, rotte: {4: [(1, 2)], 9: [(1, 7), (7, 10), (10, 2)], 7: [(1, 4), (4, 8)], 3: [(1, 8)], 6: [(1, 5), (5, 3), (3, 8)], 5: [(1, 3)], 8: [(1, 6), (6, 9), (9, 11)], 2: [(1, 9)]}, padri: [1], figli: [3, 8], mosse: [(4, 8, 1, 2, 6)]
3 -> costo: 83998.8, rotte: {4: [(1, 2)], 9: [(1, 2), (2, 7), (7, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 8)], 6: [(1, 5), (5, 3), (3, 8)], 5: [(1, 3)], 8: [(1, 6), (6, 9), (9, 11)], 2: [(1, 9)]}, padri: [2], figli: [4, 5, 7, 7, 7, 9], mosse: [(9, 9, 1, 2, 10)]
4 -> costo: 83057.00000000001, rotte: {4: [(1, 2)], 9: [(1, 2), (2, 7), (7, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 8)], 6: [(1, 3), (3, 8), (8, 5)], 5: [(1, 3)], 8: [(1, 6), (6, 9), (9, 11)], 2: [(1, 9)]}, padri: [3, 5, 5, 5, 8], figli: [], mosse: [(6, 6, 8, 5, 8), (6, 6, 3, 8, 3), (6, 6, 8, 5, 8), (6, 6, 5, 8), (9, 9, 1, 2, 10)]
5 -> costo: 83310.00000000001, rotte: {4: [(1, 2)], 9: [(1, 2), (2, 7), (7, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 8)], 6: [(1, 3), (3, 5), (5, 8)], 5: [(1, 3)], 8: [(1, 6), (6, 9), (9, 11)], 2: [(1, 9)]}, padri: [3, 7], figli: [6, 4, 4, 4, 9, 9, 9], mosse: [(6, 6, 3, 5, 8), (6, 6, 1, 3, 3)]
6 -> costo: 82996.1, rotte: {4: [(1, 2)], 9: [(1, 2), (2, 7), (7, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 8)], 6: [(1, 5), (5, 8)], 5: [(1, 3)], 8: [(1, 3), (3, 6), (6, 9), (9, 11)], 2: [(1, 9)]}, padri: [5], figli: [], mosse: [(8, 6, 1, 3, 3)]
7 -> costo: 83337.6, rotte: {4: [(1, 2)], 9: [(1, 2), (2, 7), (7, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 8)], 6: [(1, 5), (5, 8), (8, 3)], 5: [(1, 3)], 8: [(1, 6), (6, 9), (9, 11)], 2: [(1, 9)]}, padri: [3, 3, 3], figli: [5], mosse: [(6, 6, 5, 8, 3), (6, 6, 8, 3, 3), (6, 6, 3, 8)]
8 -> costo: 85236.50000000001, rotte: {4: [(1, 2)], 9: [(1, 7), (7, 10), (10, 2)], 7: [(1, 4), (4, 8)], 3: [(1, 8)], 6: [(1, 3), (3, 8), (8, 5)], 5: [(1, 3)], 8: [(1, 6), (6, 9), (9, 11)], 2: [(1, 9)]}, padri: [2], figli: [4, 9], mosse: [(6, 6, 8, 5, 8)]
9 -> costo: 84591.50000000001, rotte: {4: [(1, 2)], 9: [(1, 7), (7, 2), (2, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 8)], 6: [(1, 3), (3, 8), (8, 5)], 5: [(1, 3)], 8: [(1, 6), (6, 9), (9, 11)], 2: [(1, 9)]}, padri: [8], figli: [10], mosse: [(9, 9, 7, 2, 10)]
10 -> costo: 82444.7, rotte: {4: [(1, 2)], 9: [(1, 2), (2, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 8)], 6: [(1, 3), (3, 7), (7, 8), (8, 5)], 5: [(1, 3)], 8: [(1, 6), (6, 9), (9, 11)], 2: [(1, 9)]}, padri: [9], figli: [11, 11, 11], mosse: [(6, 9, 3, 7, 1)]
11 -> costo: 82382.40000000001, rotte: {4: [(1, 2)], 9: [(1, 2), (2, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 8)], 6: [(1, 3), (3, 7), (7, 5), (5, 8)], 5: [(1, 3)], 8: [(1, 6), (6, 9), (9, 11)], 2: [(1, 9)]}, padri: [10, 10, 10], figli: [], mosse: [(6, 6, 7, 5, 8), (6, 6, 5, 8, 3), (6, 6, 8, 5)]
bestSolutionIndice: 11
11 -> costo: 82382.40000000001, rotte: {4: [(1, 2)], 9: [(1, 2), (2, 10)], 7: [(1, 4), (4, 8)], 3: [(1, 8)], 6: [(1, 3), (3, 7), (7, 5), (5, 8)], 5: [(1, 3)], 8: [(1, 6), (6, 9), (9, 11)], 2: [(1, 9)]}, padri: [10, 10, 10], figli: [], mosse: [(6, 6, 7, 5, 8), (6, 6, 5, 8, 3), (6, 6, 8, 5)]
trasportoPalletDiGamma: {4: [(2, 10)], 9: [(2, 10), (10, 9)], 7: [(4, 15), (8, 5)], 3: [(8, 10)], 6: [(3, 3), (7, 1), (5, 8), (8, 3)], 5: [(3, 15)], 8: [(6, 4), (9, 4), (11, 6)], 2: [(9, 10)]}
itMosseLS: 20, itMosseTS: 15
time elapsed: 649.94s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 90773.90000000001, rotte: {6: [(1, 3)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 2)], 2: [(1, 10), (10, 3)], 3: [(1, 11), (11, 8)], 8: [(1, 9), (9, 2)], 7: [(1, 6), (6, 3), (3, 2)], 5: [(1, 7), (7, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 87821.50000000001, rotte: {6: [(1, 3)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 2)], 2: [(1, 10), (10, 3)], 3: [(1, 11), (11, 8)], 8: [(1, 2), (2, 9)], 7: [(1, 6), (6, 3), (3, 2)], 5: [(1, 7), (7, 8)]}, padri: [0], figli: [2], mosse: [(8, 8, 1, 2, 6)]
2 -> costo: 85137.3, rotte: {6: [(1, 3)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 2)], 2: [(1, 3), (3, 10)], 3: [(1, 11), (11, 8)], 8: [(1, 2), (2, 9)], 7: [(1, 6), (6, 3), (3, 2)], 5: [(1, 7), (7, 8)]}, padri: [1], figli: [3], mosse: [(2, 2, 1, 3, 1)]
3 -> costo: 83360.79999999997, rotte: {6: [(1, 3)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 2)], 2: [(1, 3), (3, 10)], 3: [(1, 11), (11, 8)], 8: [(1, 2), (2, 9)], 7: [(1, 3), (3, 2)], 5: [(1, 7), (7, 6), (6, 8)]}, padri: [2], figli: [4, 4, 4, 6, 6, 6], mosse: [(5, 7, 7, 6, 4)]
4 -> costo: 82421.49999999999, rotte: {6: [(1, 3)], 9: [(1, 4), (4, 8)], 4: [(1, 5), (5, 2)], 2: [(1, 3), (3, 10)], 3: [(1, 8), (8, 11)], 8: [(1, 2), (2, 9)], 7: [(1, 3), (3, 2)], 5: [(1, 7), (7, 6), (6, 8)]}, padri: [3, 3, 3], figli: [5, 5, 5, 7, 7, 7], mosse: [(3, 3, 1, 8, 4), (3, 3, 8, 11, 6), (3, 3, 11, 8)]
5 -> costo: 81648.39999999998, rotte: {6: [(1, 3)], 9: [(1, 4), (4, 8)], 4: [(1, 2), (2, 5)], 2: [(1, 3), (3, 10)], 3: [(1, 8), (8, 11)], 8: [(1, 2), (2, 9)], 7: [(1, 3), (3, 2)], 5: [(1, 7), (7, 6), (6, 8)]}, padri: [4, 4, 4, 6, 6, 6], figli: [], mosse: [(4, 4, 5, 2), (4, 4, 1, 2, 2), (4, 4, 2, 5, 8), (3, 3, 1, 8, 4), (3, 3, 8, 11, 6), (3, 3, 11, 8)]
6 -> costo: 82587.69999999998, rotte: {6: [(1, 3)], 9: [(1, 4), (4, 8)], 4: [(1, 2), (2, 5)], 2: [(1, 3), (3, 10)], 3: [(1, 11), (11, 8)], 8: [(1, 2), (2, 9)], 7: [(1, 3), (3, 2)], 5: [(1, 7), (7, 6), (6, 8)]}, padri: [3], figli: [5, 5, 5, 7, 7, 7], mosse: [(4, 4, 5, 2)]
7 -> costo: 81672.49999999999, rotte: {6: [(1, 3)], 9: [(1, 4), (4, 8)], 4: [(1, 2), (2, 5)], 2: [(1, 3), (3, 10)], 3: [(1, 8)], 8: [(1, 2), (2, 9)], 7: [(1, 3), (3, 2), (2, 11)], 5: [(1, 7), (7, 6), (6, 8)]}, padri: [6], figli: [8], mosse: [(7, 3, 2, 11, 6)]
8 -> costo: 78838.09999999998, rotte: {6: [(1, 3)], 9: [(1, 4)], 4: [(1, 2), (2, 5)], 2: [(1, 3), (3, 10)], 3: [(1, 8)], 8: [(1, 2), (2, 9)], 7: [(1, 3), (3, 2), (2, 11)], 5: [(1, 7), (7, 6), (6, 8)]}, padri: [7], figli: [9], mosse: [(3, 9, 1, 8, 5)]
9 -> costo: 78258.69999999998, rotte: {6: [(1, 3)], 9: [(1, 2), (2, 4)], 4: [(1, 5)], 2: [(1, 3), (3, 10)], 3: [(1, 8)], 8: [(1, 2), (2, 9)], 7: [(1, 3), (3, 2), (2, 11)], 5: [(1, 7), (7, 6), (6, 8)]}, padri: [8], figli: [10, 13], mosse: [(9, 4, 1, 2, 2)]
10 -> costo: 78049.4, rotte: {6: [(1, 3)], 9: [(1, 2), (2, 4)], 4: [(1, 5)], 2: [(1, 3), (3, 10)], 3: [(1, 7), (7, 8)], 8: [(1, 2), (2, 9)], 7: [(1, 3), (3, 2), (2, 11)], 5: [(1, 6), (6, 8)]}, padri: [9], figli: [11, 14], mosse: [(3, 5, 1, 7, 1)]
11 -> costo: 77920.4, rotte: {6: [(1, 3)], 9: [(1, 2), (2, 3), (3, 4)], 4: [(1, 5)], 2: [(1, 3), (3, 10)], 3: [(1, 7), (7, 8)], 8: [(1, 2), (2, 9)], 7: [(1, 2), (2, 11)], 5: [(1, 6), (6, 8)]}, padri: [10, 13], figli: [12], mosse: [(9, 7, 2, 3, 2), (3, 5, 1, 7, 1)]
12 -> costo: 77753.69999999998, rotte: {6: [(1, 3)], 9: [(1, 4), (4, 2), (2, 3)], 4: [(1, 5)], 2: [(1, 3), (3, 10)], 3: [(1, 7), (7, 8)], 8: [(1, 2), (2, 9)], 7: [(1, 2), (2, 11)], 5: [(1, 6), (6, 8)]}, padri: [11, 14], figli: [], mosse: [(9, 9, 1, 4, 15), (3, 5, 1, 7, 1)]
13 -> costo: 78129.7, rotte: {6: [(1, 3)], 9: [(1, 2), (2, 3), (3, 4)], 4: [(1, 5)], 2: [(1, 3), (3, 10)], 3: [(1, 8)], 8: [(1, 2), (2, 9)], 7: [(1, 2), (2, 11)], 5: [(1, 7), (7, 6), (6, 8)]}, padri: [9], figli: [11, 14], mosse: [(9, 7, 2, 3, 2)]
14 -> costo: 77962.99999999999, rotte: {6: [(1, 3)], 9: [(1, 4), (4, 2), (2, 3)], 4: [(1, 5)], 2: [(1, 3), (3, 10)], 3: [(1, 8)], 8: [(1, 2), (2, 9)], 7: [(1, 2), (2, 11)], 5: [(1, 7), (7, 6), (6, 8)]}, padri: [13], figli: [12], mosse: [(9, 9, 1, 4, 15)]
bestSolutionIndice: 12
12 -> costo: 77753.69999999998, rotte: {6: [(1, 3)], 9: [(1, 4), (4, 2), (2, 3)], 4: [(1, 5)], 2: [(1, 3), (3, 10)], 3: [(1, 7), (7, 8)], 8: [(1, 2), (2, 9)], 7: [(1, 2), (2, 11)], 5: [(1, 6), (6, 8)]}, padri: [11, 14], figli: [], mosse: [(9, 9, 1, 4, 15), (3, 5, 1, 7, 1)]
trasportoPalletDiGamma: {6: [(3, 15)], 9: [(4, 15), (2, 2), (3, 2)], 4: [(5, 8)], 2: [(3, 1), (10, 9)], 3: [(7, 1), (8, 9)], 8: [(2, 6), (9, 14)], 7: [(2, 12), (11, 6)], 5: [(6, 4), (8, 9)]}
itMosseLS: 23, itMosseTS: 15
time elapsed: 505.13s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 87240.70000000001, rotte: {3: [(1, 7), (7, 3)], 7: [(1, 8), (8, 9)], 9: [(1, 10), (10, 2), (2, 9)], 8: [(1, 11), (11, 3)], 2: [(1, 6), (6, 9)], 4: [(1, 5), (5, 9)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 81919.5, rotte: {3: [(1, 7), (7, 3)], 7: [(1, 8), (8, 9)], 9: [(1, 2), (2, 10), (10, 9)], 8: [(1, 11), (11, 3)], 2: [(1, 6), (6, 9)], 4: [(1, 5), (5, 9)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [0], figli: [2], mosse: [(9, 9, 2, 10, 9)]
2 -> costo: 79944.59999999999, rotte: {3: [(1, 7), (7, 3)], 7: [(1, 8), (8, 9)], 9: [(1, 2), (2, 10), (10, 9)], 8: [(1, 3), (3, 11)], 2: [(1, 6), (6, 9)], 4: [(1, 5), (5, 9)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [1], figli: [3], mosse: [(8, 8, 1, 3, 9)]
3 -> costo: 78607.49999999999, rotte: {3: [(1, 7), (7, 3)], 7: [(1, 8)], 9: [(1, 2), (2, 10), (10, 9)], 8: [(1, 3), (3, 11)], 2: [(1, 6), (6, 9)], 4: [(1, 5), (5, 9)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [2], figli: [4, 5, 6, 6, 6, 7, 7, 7], mosse: [(9, 7, 1, 9, 2)]
4 -> costo: 77462.49999999999, rotte: {3: [(1, 3)], 7: [(1, 7), (7, 8)], 9: [(1, 2), (2, 10), (10, 9)], 8: [(1, 3), (3, 11)], 2: [(1, 6), (6, 9)], 4: [(1, 5), (5, 9)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [3, 5, 5, 5], figli: [], mosse: [(7, 3, 1, 7, 1), (7, 7, 8, 7), (7, 7, 1, 7, 1), (7, 7, 7, 8, 18)]
5 -> costo: 78099.5, rotte: {3: [(1, 3)], 7: [(1, 8), (8, 7)], 9: [(1, 2), (2, 10), (10, 9)], 8: [(1, 3), (3, 11)], 2: [(1, 6), (6, 9)], 4: [(1, 5), (5, 9)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [3], figli: [4, 4, 4], mosse: [(7, 3, 8, 7, 1)]
6 -> costo: 78277.9, rotte: {3: [(1, 3), (3, 7)], 7: [(1, 8)], 9: [(1, 2), (2, 10), (10, 9)], 8: [(1, 3), (3, 11)], 2: [(1, 6), (6, 9)], 4: [(1, 5), (5, 9)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [3, 3, 3], figli: [], mosse: [(3, 3, 1, 3, 9), (3, 3, 3, 7, 1), (3, 3, 7, 3)]
7 -> costo: 78539.7, rotte: {3: [(1, 7), (7, 3)], 7: [(1, 8)], 9: [(1, 10), (10, 9)], 8: [(1, 2), (2, 3), (3, 11)], 2: [(1, 6), (6, 9)], 4: [(1, 5), (5, 9)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [3], figli: [8], mosse: [(8, 9, 1, 2, 5)]
8 -> costo: 76247.7, rotte: {3: [(1, 7), (7, 3)], 7: [(1, 8)], 9: [(1, 10), (10, 9)], 8: [(1, 2), (2, 3), (3, 11)], 2: [(1, 6), (6, 9)], 4: [(1, 5)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [7], figli: [9, 11], mosse: [(9, 4, 1, 9, 2)]
9 -> costo: 75009.09999999999, rotte: {3: [(1, 3)], 7: [(1, 8)], 9: [(1, 7), (7, 10), (10, 9)], 8: [(1, 2), (2, 3), (3, 11)], 2: [(1, 6), (6, 9)], 4: [(1, 5)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [8, 11], figli: [10, 10], mosse: [(9, 3, 1, 7, 1), (9, 7, 1, 7, 1)]
10 -> costo: 74931.3, rotte: {3: [(1, 3)], 7: [(1, 8)], 9: [(1, 7), (7, 9), (9, 10)], 8: [(1, 2), (2, 3), (3, 11)], 2: [(1, 6), (6, 9)], 4: [(1, 5)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [9, 9, 12], figli: [], mosse: [(9, 9, 7, 9, 8), (9, 9, 9, 10, 9), (9, 7, 1, 7, 1)]
11 -> costo: 75102.7, rotte: {3: [(1, 3)], 7: [(1, 7), (7, 8)], 9: [(1, 10), (10, 9)], 8: [(1, 2), (2, 3), (3, 11)], 2: [(1, 6), (6, 9)], 4: [(1, 5)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [8], figli: [12, 12, 9], mosse: [(7, 3, 1, 7, 1)]
12 -> costo: 74973.59999999999, rotte: {3: [(1, 3)], 7: [(1, 7), (7, 8)], 9: [(1, 9), (9, 10)], 8: [(1, 2), (2, 3), (3, 11)], 2: [(1, 6), (6, 9)], 4: [(1, 5)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [11, 11], figli: [10], mosse: [(9, 9, 1, 9, 8), (9, 9, 9, 10, 9)]
bestSolutionIndice: 10
10 -> costo: 74931.3, rotte: {3: [(1, 3)], 7: [(1, 8)], 9: [(1, 7), (7, 9), (9, 10)], 8: [(1, 2), (2, 3), (3, 11)], 2: [(1, 6), (6, 9)], 4: [(1, 5)], 5: [(1, 2)], 6: [(1, 4)]}, padri: [9, 9, 12], figli: [], mosse: [(9, 9, 7, 9, 8), (9, 9, 9, 10, 9), (9, 7, 1, 7, 1)]
trasportoPalletDiGamma: {3: [(3, 9)], 7: [(8, 18)], 9: [(7, 1), (9, 8), (10, 9)], 8: [(2, 5), (3, 9), (11, 6)], 2: [(6, 4), (9, 6)], 4: [(5, 8)], 5: [(2, 15)], 6: [(4, 15)]}
itMosseLS: 21, itMosseTS: 15
time elapsed: 342.85s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 83037.4, rotte: {3: [(1, 5), (5, 9)], 9: [(1, 8), (8, 10)], 7: [(1, 4), (4, 2)], 2: [(1, 7), (7, 9)], 4: [(1, 6), (6, 10)], 6: [(1, 11), (11, 9)], 5: [(1, 2)], 8: [(1, 3), (3, 10)]}, padri: [-1], figli: [1, 1, 1], mosse: [-1]
1 -> costo: 82925.7, rotte: {3: [(1, 5), (5, 9)], 9: [(1, 8), (8, 10)], 7: [(1, 2), (2, 4)], 2: [(1, 7), (7, 9)], 4: [(1, 6), (6, 10)], 6: [(1, 11), (11, 9)], 5: [(1, 2)], 8: [(1, 3), (3, 10)]}, padri: [0, 0, 0], figli: [2], mosse: [(7, 7, 1, 2, 5), (7, 7, 2, 4, 15), (7, 7, 4, 2)]
2 -> costo: 82315.79999999997, rotte: {3: [(1, 5), (5, 9)], 9: [(1, 8), (8, 10)], 7: [(1, 4)], 2: [(1, 7), (7, 9)], 4: [(1, 6), (6, 10)], 6: [(1, 2), (2, 11), (11, 9)], 5: [(1, 2)], 8: [(1, 3), (3, 10)]}, padri: [1], figli: [], mosse: [(6, 7, 1, 2, 5)]
bestSolutionIndice: 2
2 -> costo: 82315.79999999997, rotte: {3: [(1, 5), (5, 9)], 9: [(1, 8), (8, 10)], 7: [(1, 4)], 2: [(1, 7), (7, 9)], 4: [(1, 6), (6, 10)], 6: [(1, 2), (2, 11), (11, 9)], 5: [(1, 2)], 8: [(1, 3), (3, 10)]}, padri: [1], figli: [], mosse: [(6, 7, 1, 2, 5)]
trasportoPalletDiGamma: {3: [(5, 8), (9, 2)], 9: [(8, 18), (10, 2)], 7: [(4, 15)], 2: [(7, 1), (9, 9)], 4: [(6, 4), (10, 6)], 6: [(2, 5), (11, 6), (9, 3)], 5: [(2, 15)], 8: [(3, 18), (10, 1)]}
itMosseLS: 4, itMosseTS: 4
time elapsed: 137.36s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 81194.2, rotte: {7: [(1, 5), (5, 8)], 6: [(1, 4)], 5: [(1, 6), (6, 2)], 3: [(1, 2)], 4: [(1, 7), (7, 8)], 8: [(1, 3), (3, 9)], 9: [(1, 10), (10, 9)], 2: [(1, 11), (11, 9)]}, padri: [-1], figli: [1, 1, 1, 3, 3, 3], mosse: [-1]
1 -> costo: 80120.4, rotte: {7: [(1, 5), (5, 8)], 6: [(1, 4)], 5: [(1, 2), (2, 6)], 3: [(1, 2)], 4: [(1, 7), (7, 8)], 8: [(1, 3), (3, 9)], 9: [(1, 10), (10, 9)], 2: [(1, 11), (11, 9)]}, padri: [0, 0, 0], figli: [2], mosse: [(5, 5, 1, 2, 10), (5, 5, 2, 6, 4), (5, 5, 6, 2)]
2 -> costo: 80120.29999999999, rotte: {7: [(1, 5), (5, 8)], 6: [(1, 4)], 5: [(1, 2), (2, 7), (7, 6)], 3: [(1, 2)], 4: [(1, 8)], 8: [(1, 3), (3, 9)], 9: [(1, 10), (10, 9)], 2: [(1, 11), (11, 9)]}, padri: [1, 9], figli: [], mosse: [(5, 4, 2, 7, 1), (5, 5, 2, 7, 1)]
3 -> costo: 81175.29999999999, rotte: {7: [(1, 5), (5, 8)], 6: [(1, 4)], 5: [(1, 6), (6, 7), (7, 2)], 3: [(1, 2)], 4: [(1, 8)], 8: [(1, 3), (3, 9)], 9: [(1, 10), (10, 9)], 2: [(1, 11), (11, 9)]}, padri: [0], figli: [4, 9], mosse: [(5, 4, 6, 7, 1)]
4 -> costo: 80538.29999999999, rotte: {7: [(1, 5), (5, 8)], 6: [(1, 4)], 5: [(1, 7), (7, 2)], 3: [(1, 2)], 4: [(1, 6), (6, 8)], 8: [(1, 3), (3, 9)], 9: [(1, 10), (10, 9)], 2: [(1, 11), (11, 9)]}, padri: [3], figli: [5, 6, 6, 6, 7, 7, 7, 8], mosse: [(4, 5, 1, 6, 4)]
5 -> costo: 78502.99999999999, rotte: {7: [(1, 5), (5, 8)], 6: [(1, 4)], 5: [(1, 2)], 3: [(1, 2)], 4: [(1, 6), (6, 8)], 8: [(1, 3), (3, 9)], 9: [(1, 10), (10, 9)], 2: [(1, 7), (7, 11), (11, 9)]}, padri: [4, 7, 8, 8, 8], figli: [], mosse: [(2, 5, 1, 7, 1), (2, 2, 7, 11, 6), (2, 2, 7, 11, 6), (2, 2, 11, 9, 1), (2, 2, 9, 11)]
6 -> costo: 79743.59999999999, rotte: {7: [(1, 5), (5, 8)], 6: [(1, 4)], 5: [(1, 2), (2, 7)], 3: [(1, 2)], 4: [(1, 6), (6, 8)], 8: [(1, 3), (3, 9)], 9: [(1, 10), (10, 9)], 2: [(1, 11), (11, 9)]}, padri: [4, 4, 4], figli: [], mosse: [(5, 5, 1, 2, 10), (5, 5, 2, 7, 1), (5, 5, 7, 2)]
7 -> costo: 79928.59999999998, rotte: {7: [(1, 5), (5, 8)], 6: [(1, 4)], 5: [(1, 2)], 3: [(1, 2)], 4: [(1, 6), (6, 8)], 8: [(1, 3), (3, 9)], 9: [(1, 10), (10, 9)], 2: [(1, 11), (11, 7), (7, 9)]}, padri: [4], figli: [5, 8], mosse: [(2, 5, 11, 7, 1)]
8 -> costo: 78696.39999999998, rotte: {7: [(1, 5), (5, 8)], 6: [(1, 4)], 5: [(1, 2)], 3: [(1, 2)], 4: [(1, 6), (6, 8)], 8: [(1, 3), (3, 9)], 9: [(1, 10), (10, 9)], 2: [(1, 7), (7, 9), (9, 11)]}, padri: [7], figli: [5, 5, 5], mosse: [(2, 2, 9, 11, 6)]
9 -> costo: 80590.0, rotte: {7: [(1, 5), (5, 8)], 6: [(1, 4)], 5: [(1, 2), (2, 6), (6, 7)], 3: [(1, 2)], 4: [(1, 8)], 8: [(1, 3), (3, 9)], 9: [(1, 10), (10, 9)], 2: [(1, 11), (11, 9)]}, padri: [3], figli: [2], mosse: [(5, 5, 1, 2, 10)]
bestSolutionIndice: 5
5 -> costo: 78502.99999999999, rotte: {7: [(1, 5), (5, 8)], 6: [(1, 4)], 5: [(1, 2)], 3: [(1, 2)], 4: [(1, 6), (6, 8)], 8: [(1, 3), (3, 9)], 9: [(1, 10), (10, 9)], 2: [(1, 7), (7, 11), (11, 9)]}, padri: [4, 7, 8, 8, 8], figli: [], mosse: [(2, 5, 1, 7, 1), (2, 2, 7, 11, 6), (2, 2, 7, 11, 6), (2, 2, 11, 9, 1), (2, 2, 9, 11)]
trasportoPalletDiGamma: {7: [(5, 8), (8, 12)], 6: [(4, 15)], 5: [(2, 10)], 3: [(2, 10)], 4: [(6, 4), (8, 6)], 8: [(3, 18), (9, 2)], 9: [(10, 9), (9, 11)], 2: [(7, 1), (11, 6), (9, 1)]}
itMosseLS: 18, itMosseTS: 15
time elapsed: 368.93s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 82922.8, rotte: {3: [(1, 4)], 8: [(1, 9), (9, 11)], 4: [(1, 3)], 7: [(1, 2)], 9: [(1, 5), (5, 4), (4, 8)], 2: [(1, 7), (7, 3)], 6: [(1, 10), (10, 8)], 5: [(1, 6), (6, 8)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 80381.90000000001, rotte: {3: [(1, 4)], 8: [(1, 9), (9, 11)], 4: [(1, 3)], 7: [(1, 2)], 9: [(1, 4), (4, 5), (5, 8)], 2: [(1, 7), (7, 3)], 6: [(1, 10), (10, 8)], 5: [(1, 6), (6, 8)]}, padri: [0], figli: [2], mosse: [(9, 9, 4, 5, 8)]
2 -> costo: 78732.6, rotte: {3: [(1, 4)], 8: [(1, 9), (9, 11)], 4: [(1, 3)], 7: [(1, 2)], 9: [(1, 4), (4, 5), (5, 8)], 2: [(1, 7), (7, 3)], 6: [(1, 8), (8, 10)], 5: [(1, 6), (6, 8)]}, padri: [1], figli: [3, 5], mosse: [(6, 6, 10, 8)]
3 -> costo: 77940.30000000002, rotte: {3: [(1, 4)], 8: [(1, 9), (9, 11)], 4: [(1, 3)], 7: [(1, 2)], 9: [(1, 4), (4, 5), (5, 7), (7, 8)], 2: [(1, 3)], 6: [(1, 8), (8, 10)], 5: [(1, 6), (6, 8)]}, padri: [2], figli: [4, 4, 4, 6, 6, 6, 7, 7, 7, 9, 9, 9], mosse: [(9, 2, 5, 7, 1)]
4 -> costo: 77386.90000000001, rotte: {3: [(1, 4)], 8: [(1, 11), (11, 9)], 4: [(1, 3)], 7: [(1, 2)], 9: [(1, 4), (4, 5), (5, 7), (7, 8)], 2: [(1, 3)], 6: [(1, 8), (8, 10)], 5: [(1, 6), (6, 8)]}, padri: [3, 3, 3, 5, 6, 8, 8, 8], figli: [], mosse: [(8, 8, 1, 11, 6), (8, 8, 11, 9, 14), (8, 8, 9, 11), (9, 2, 5, 7, 1), (9, 9, 5, 7, 1), (9, 9, 5, 7, 1), (9, 9, 7, 8, 1), (9, 9, 8, 7)]
5 -> costo: 78179.20000000001, rotte: {3: [(1, 4)], 8: [(1, 11), (11, 9)], 4: [(1, 3)], 7: [(1, 2)], 9: [(1, 4), (4, 5), (5, 8)], 2: [(1, 7), (7, 3)], 6: [(1, 8), (8, 10)], 5: [(1, 6), (6, 8)]}, padri: [2], figli: [4, 6, 7, 8, 9], mosse: [(8, 8, 1, 11, 6)]
6 -> costo: 77641.70000000001, rotte: {3: [(1, 4)], 8: [(1, 11), (11, 9)], 4: [(1, 3)], 7: [(1, 2)], 9: [(1, 4), (4, 7), (7, 5), (5, 8)], 2: [(1, 3)], 6: [(1, 8), (8, 10)], 5: [(1, 6), (6, 8)]}, padri: [5, 8], figli: [4, 7, 9, 10], mosse: [(9, 2, 4, 7, 1), (9, 9, 4, 7, 1)]
7 -> costo: 77572.20000000001, rotte: {3: [(1, 4)], 8: [(1, 11), (11, 9)], 4: [(1, 3)], 7: [(1, 2)], 9: [(1, 4), (4, 7), (7, 5), (5, 6), (6, 8)], 2: [(1, 3)], 6: [(1, 8), (8, 10)], 5: [(1, 8)]}, padri: [6, 9, 10], figli: [], mosse: [(9, 5, 5, 6, 4), (9, 9, 4, 7, 1), (9, 9, 7, 5, 8)]
8 -> costo: 77671.20000000001, rotte: {3: [(1, 4)], 8: [(1, 11), (11, 9)], 4: [(1, 3)], 7: [(1, 2)], 9: [(1, 4), (4, 5), (5, 8), (8, 7)], 2: [(1, 3)], 6: [(1, 8), (8, 10)], 5: [(1, 6), (6, 8)]}, padri: [5], figli: [4, 4, 4, 9, 9, 9, 6], mosse: [(9, 2, 8, 7, 1)]
9 -> costo: 77601.70000000001, rotte: {3: [(1, 4)], 8: [(1, 11), (11, 9)], 4: [(1, 3)], 7: [(1, 2)], 9: [(1, 4), (4, 5), (5, 6), (6, 8), (8, 7)], 2: [(1, 3)], 6: [(1, 8), (8, 10)], 5: [(1, 8)]}, padri: [8], figli: [7, 10], mosse: [(9, 5, 5, 6, 4)]
10 -> costo: 77596.20000000001, rotte: {3: [(1, 4)], 8: [(1, 11), (11, 9)], 4: [(1, 3)], 7: [(1, 2)], 9: [(1, 4), (4, 5), (5, 7), (7, 6), (6, 8)], 2: [(1, 3)], 6: [(1, 8), (8, 10)], 5: [(1, 8)]}, padri: [9], figli: [7], mosse: [(9, 9, 5, 7, 1)]
bestSolutionIndice: 4
4 -> costo: 77386.90000000001, rotte: {3: [(1, 4)], 8: [(1, 11), (11, 9)], 4: [(1, 3)], 7: [(1, 2)], 9: [(1, 4), (4, 5), (5, 7), (7, 8)], 2: [(1, 3)], 6: [(1, 8), (8, 10)], 5: [(1, 6), (6, 8)]}, padri: [3, 3, 3, 5, 6, 8, 8, 8], figli: [], mosse: [(8, 8, 1, 11, 6), (8, 8, 11, 9, 14), (8, 8, 9, 11), (9, 2, 5, 7, 1), (9, 9, 5, 7, 1), (9, 9, 5, 7, 1), (9, 9, 7, 8, 1), (9, 9, 8, 7)]
trasportoPalletDiGamma: {3: [(4, 10)], 8: [(11, 6), (9, 14)], 4: [(3, 10)], 7: [(2, 20)], 9: [(4, 5), (5, 8), (7, 1), (8, 1)], 2: [(3, 8)], 6: [(8, 6), (10, 9)], 5: [(6, 4), (8, 11)]}
itMosseLS: 20, itMosseTS: 15
time elapsed: 450.06s.


##########################################################################################
s: 1
dictSolutions[1]:
0 -> costo: 91430.0, rotte: {8: [(1, 7), (7, 2)], 7: [(1, 8), (8, 9)], 3: [(1, 11), (11, 4)], 6: [(1, 5), (5, 2), (2, 9)], 4: [(1, 4)], 2: [(1, 6), (6, 9)], 5: [(1, 10), (10, 4)], 9: [(1, 3), (3, 9)]}, padri: [-1], figli: [1], mosse: [-1]
1 -> costo: 88449.49999999999, rotte: {8: [(1, 7), (7, 2)], 7: [(1, 8), (8, 9)], 3: [(1, 11), (11, 4)], 6: [(1, 5), (5, 2), (2, 9)], 4: [(1, 4)], 2: [(1, 6), (6, 9)], 5: [(1, 4), (4, 10)], 9: [(1, 3), (3, 9)]}, padri: [0], figli: [2], mosse: [(5, 5, 10, 4)]
2 -> costo: 86178.3, rotte: {8: [(1, 7), (7, 2)], 7: [(1, 8), (8, 9)], 3: [(1, 4), (4, 11)], 6: [(1, 5), (5, 2), (2, 9)], 4: [(1, 4)], 2: [(1, 6), (6, 9)], 5: [(1, 4), (4, 10)], 9: [(1, 3), (3, 9)]}, padri: [1], figli: [3], mosse: [(3, 3, 1, 4, 4)]
3 -> costo: 84050.90000000001, rotte: {8: [(1, 2)], 7: [(1, 8), (8, 9)], 3: [(1, 4), (4, 11)], 6: [(1, 5), (5, 2), (2, 7), (7, 9)], 4: [(1, 4)], 2: [(1, 6), (6, 9)], 5: [(1, 4), (4, 10)], 9: [(1, 3), (3, 9)]}, padri: [2], figli: [4], mosse: [(6, 8, 2, 7, 1)]
4 -> costo: 81099.70000000001, rotte: {8: [(1, 2)], 7: [(1, 8), (8, 9)], 3: [(1, 4), (4, 11)], 6: [(1, 5), (5, 7), (7, 9)], 4: [(1, 4)], 2: [(1, 6), (6, 9)], 5: [(1, 4), (4, 10)], 9: [(1, 3), (3, 9)]}, padri: [3], figli: [5, 5, 5], mosse: [(8, 6, 1, 2, 1)]
5 -> costo: 79762.60000000002, rotte: {8: [(1, 2)], 7: [(1, 8)], 3: [(1, 4), (4, 11)], 6: [(1, 5), (5, 7), (7, 9)], 4: [(1, 4)], 2: [(1, 6), (6, 9)], 5: [(1, 4), (4, 10)], 9: [(1, 3), (3, 9)]}, padri: [4, 4, 4], figli: [], mosse: [(6, 7, 1, 9, 2), (6, 7, 5, 9, 2), (6, 7, 7, 9, 2)]
bestSolutionIndice: 5
5 -> costo: 79762.60000000002, rotte: {8: [(1, 2)], 7: [(1, 8)], 3: [(1, 4), (4, 11)], 6: [(1, 5), (5, 7), (7, 9)], 4: [(1, 4)], 2: [(1, 6), (6, 9)], 5: [(1, 4), (4, 10)], 9: [(1, 3), (3, 9)]}, padri: [4, 4, 4], figli: [], mosse: [(6, 7, 1, 9, 2), (6, 7, 5, 9, 2), (6, 7, 7, 9, 2)]
trasportoPalletDiGamma: {8: [(2, 20)], 7: [(8, 18)], 3: [(4, 4), (11, 6)], 6: [(5, 8), (7, 1), (9, 6)], 4: [(4, 10)], 2: [(6, 4), (9, 6)], 5: [(4, 1), (10, 9)], 9: [(3, 18), (9, 2)]}
itMosseLS: 7, itMosseTS: 3
time elapsed: 105.24s.


##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
##########################################################################################
